{
	"id": "0b077ec055a7958c500e9aab307d3800",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"myNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport \"./node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract MyNFT is ERC721{\n    uint256 tokenID = 1;\n    mapping (address  => string[])  tokenHashs;\n    mapping (uint256 => string) tokens;\n\n    constructor(string memory _name, string memory _symbol) ERC721(_name, _symbol){}\n\n\n    function minting(string memory _jsonhash) public{\n        tokenHashs[msg.sender].push(_jsonhash);\n        tokens[tokenID] = _jsonhash;\n        _mint(msg.sender, tokenID);\n        tokenID += 1;\n    }\n\n    function tokenURI(uint256 _tokenId) public view override returns(string memory){\n        // 아까 배포한 json 파일\n        // _requireOwned(_tokenId);\n\n        string memory baseURI = _baseURI();\n        return string.concat(baseURI, tokens[tokenID]);\n    }\n\n    function _baseURI() internal view override returns(string memory){\n        return \"https://black-elderly-wolverine-685.mypinata.cloud/ipfs/\";\n    }\n\n    function viewTokens() public view returns (string[] memory){\n        string[] memory allTokens = new string[](tokenID);\n        for (uint256 i = 0; i < tokenID; i++) {\n            allTokens[i] = tokens[i];\n        }\n        return allTokens;\n    }\n}"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name(토큰의 이름)\n    string private _name;\n\n    // Token symbol(토큰의 단위)\n    string private _symbol;\n\n    // 토큰의 소유자 권한\n    /* \n    // ERC20 : 어느 주소가 얼마만큼의 토큰을 가지고 있는지 확인\n        {\n                \"0x12412356463\" : 100\n        }\n    // ERC721 : 몇 번 토큰의 소유권을 누가 가지고 있는지 확인\n        {\n            1 : \"0x13454257235\",\n            2 : \"0x12413512352\",\n\n        } \n    */\n    mapping(uint256 tokenId => address) private _owners;\n\n    // 지갑이 소유한 NFT가 몇개 있는지 내용을 담을 mapping객체\n    // ex. 0x13454257235 지갑이 소유하고 있는 NFT가 몇 개 인지 확인\n    mapping(address owner => uint256) private _balances;\n\n    // 지갑이 위임받은 토큰의 소유권을 확인할 수 있는 객체\n    /*\n        {\n            1 : \"0x13454257235\",\n            2 : \"0x12413512352\",\n        } \n    */\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    // 지갑이 토큰의 권한을 받은 내용이 승인 되었는지 여부\n    /*\n        {\n            \"0x2342342341\" : {\n                \"0x6457456542\" : true\n            }\n        }\n        [소유자 주소][위임받은 주소]\n    */\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    // 인터페이스 내용을 확인. ERC721의 표준을 맞춰서 NFT를 발행했는지 검증하는 함수\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n     // 지갑의 주소를 가지고 NFT를 몇 개 발행했는지 조회하는 함수\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n     // 토큰의 아이디를 매개변수로 받아서 토큰의 아이디로 매핑되는 주소를 확인해, 토큰의 소유자를 반환하는 함수\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n     // NFT의 이름을 반환하는 함수\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n     // ipfs에 업로드한 파일의 주소(해시값)\n     // [\"첫 번째 해시 값\", \"두 번쨰 해시 값\"]\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n\n     // 어떤 내용의 객체를 보여주는지 확인할 때 디폴트 경로가 뭔지 지정하고 \n     // _baseURI 함수를 호출해서 디폴트 경로를 넣어준다.\n     /* ex. _baseURI == https://nft01/\n            tokenURI == const imgArr = [\"첫 번째 해시 값\", \"두 번쨰 해시 값\"]\n            https://nft01/imgArrp[token]\n     */\n    /* pinata의 경우 \n        const _baseURI = https://black-elderly-wolverine-685.mypinata.cloud/ipfs/\n        const imgArr[token] = QmUhqS9A78QRZU1Bu9BTBp94Ct5Kmb6uYCzK4Ze449nXCg\n        https://black-elderly-wolverine-685.mypinata.cloud/ipfs/폴더명/imgArr[token]\n    */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"myNFT.sol": {
				"MyNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_jsonhash",
									"type": "string"
								}
							],
							"name": "minting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewTokens",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"myNFT.sol\":133:1239  contract MyNFT is ERC721{... */\n  mstore(0x40, 0x80)\n    /* \"myNFT.sol\":181:182  1 */\n  0x01\n    /* \"myNFT.sol\":163:182  uint256 tokenID = 1 */\n  0x06\n  sstore\n    /* \"myNFT.sol\":277:357  constructor(string memory _name, string memory _symbol) ERC721(_name, _symbol){} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"myNFT.sol\":340:345  _name */\n  dup2\n    /* \"myNFT.sol\":347:354  _symbol */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2446:2451  name_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2438:2443  _name */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2438:2451  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2478  symbol_ */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2461:2468  _symbol */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2461:2478  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2372:2485  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"myNFT.sol\":277:357  constructor(string memory _name, string memory _symbol) ERC721(_name, _symbol){} */\n  pop\n  pop\n    /* \"myNFT.sol\":133:1239  contract MyNFT is ERC721{... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_53\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_55\n  tag_18\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1030:1118   */\ntag_54:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_57\n  tag_12\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_58\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_61\n  tag_18\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1434:1490   */\ntag_60:\n    /* \"#utility.yul\":1508:1537   */\n  tag_62\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_22:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_64:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_64)\ntag_66:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_23:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_68\n    /* \"#utility.yul\":1992:2041   */\n  tag_69\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_21\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1976:2042   */\n  tag_20\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_71\n  tag_16\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2117:2229   */\ntag_70:\n    /* \"#utility.yul\":2238:2290   */\n  tag_72\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_24:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_75\n  tag_15\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2399:2521   */\ntag_74:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_76\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_79\n  tag_13\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2801:2920   */\ntag_78:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_81\n  tag_14\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2996:3113   */\ntag_80:\n    /* \"#utility.yul\":3137:3211   */\n  tag_82\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_24\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_84\n  tag_14\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3298:3415   */\ntag_83:\n    /* \"#utility.yul\":3439:3513   */\n  tag_85\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_24\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_25:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_26:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_27:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_89:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_91\n  tag_26\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4057:4141   */\ntag_90:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_28:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_29:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_30:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_31:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_96\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_30\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4772:4811   */\n  tag_97\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_30\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_32:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_33:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_34:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_101\n    /* \"#utility.yul\":5161:5195   */\n  tag_102\n    /* \"#utility.yul\":5170:5194   */\n  tag_103\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5161:5195   */\n  tag_33\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5143:5196   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_35:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_36:\n    /* \"#utility.yul\":5399:5438   */\n  tag_106\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_34\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5460:5551   */\n  tag_107\n    /* \"#utility.yul\":5509:5550   */\n  tag_108\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_35\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_31\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_37:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_38:\n    /* \"#utility.yul\":5720:5752   */\n  tag_111\n  tag_37\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5761:5826   */\n  tag_112\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_39:\n    /* \"#utility.yul\":5898:6018   */\ntag_114:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_117\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_38\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_114)\ntag_116:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_40:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_120\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_28\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6249:6278   */\n  tag_121\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_122:\n    /* \"#utility.yul\":6476:6556   */\n  tag_123\n    /* \"#utility.yul\":6532:6554   */\n  tag_124\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_29\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_39\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_119:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_41:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_42:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_127\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_41\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_43:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_129\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_42\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_8:\n    /* \"#utility.yul\":7293:7330   */\n  tag_131\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_25\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_133\n  tag_18\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7381:7437   */\ntag_132:\n    /* \"#utility.yul\":7461:7499   */\n  tag_134\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_27\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7546:7613   */\n  tag_135\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_40\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_137\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_138:\n    /* \"#utility.yul\":8487:8554   */\n  tag_139\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_43\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_136)\n    /* \"#utility.yul\":7708:8326   */\ntag_137:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_140\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_28\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_141:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_141)\ntag_143:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_145\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_42\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_144:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_136:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"myNFT.sol\":133:1239  contract MyNFT is ERC721{... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"myNFT.sol\":133:1239  contract MyNFT is ERC721{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4bf5bf35\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x4bf5bf35\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x095ea7b3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0bdc9008\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2666:2966  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3761:3850  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5647:5801  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5473:5586  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"myNFT.sol\":364:562  function minting(string memory _jsonhash) public{... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6293:6871  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6937:7069  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"myNFT.sol\":990:1237  function viewTokens() public view returns (string[] memory){... */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3536:3654  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3114:3322  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3914:4007  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5868:6012  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7135:7343  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"myNFT.sol\":568:831  function tokenURI(uint256 _tokenId) public view override returns(string memory){... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6078:6231  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_17:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2666:2966  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_24:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2768:2772  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2818:2843  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:2843  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:2814  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:2843  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:2907  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_87\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2907  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2859:2907  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2859:2870  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2859:2907  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:2907  interfaceId == type(IERC721).interfaceId ||... */\n    tag_87:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:2959  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_88\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2923:2959  super.supportsInterface(interfaceId) */\n      tag_89\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2947:2958  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2923:2946  super.supportsInterface */\n      tag_90\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2923:2959  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_89:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2803:2959  interfaceId == type(IERC721).interfaceId ||... */\n    tag_88:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2784:2959  return... */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2666:2966  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3761:3850  function name() public view virtual returns (string memory) {... */\n    tag_28:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3806:3819  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3838:3843  _name */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3831:3843  return _name */\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_93\n      jump\t// in\n    tag_94:\n      dup1\n      iszero\n      tag_95\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_96\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_95)\n    tag_96:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_97:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_97\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3761:3850  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5647:5801  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_34:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5714:5721  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5733:5755  _requireOwned(tokenId) */\n      tag_99\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5747:5754  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5733:5746  _requireOwned */\n      tag_100\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5733:5755  _requireOwned(tokenId) */\n      jump\t// in\n    tag_99:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5794  _getApproved(tokenId) */\n      tag_101\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5786:5793  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5785  _getApproved */\n      tag_102\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5794  _getApproved(tokenId) */\n      jump\t// in\n    tag_101:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5766:5794  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5647:5801  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5473:5586  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_40:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5544:5579  _approve(to, tokenId, _msgSender()) */\n      tag_104\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5553:5555  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5557:5564  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5566:5578  _msgSender() */\n      tag_105\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5566:5576  _msgSender */\n      tag_106\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5566:5578  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5544:5552  _approve */\n      tag_107\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5544:5579  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_104:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5473:5586  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":364:562  function minting(string memory _jsonhash) public{... */\n    tag_44:\n        /* \"myNFT.sol\":422:432  tokenHashs */\n      0x07\n        /* \"myNFT.sol\":422:444  tokenHashs[msg.sender] */\n      0x00\n        /* \"myNFT.sol\":433:443  msg.sender */\n      caller\n        /* \"myNFT.sol\":422:444  tokenHashs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":450:459  _jsonhash */\n      dup2\n        /* \"myNFT.sol\":422:460  tokenHashs[msg.sender].push(_jsonhash) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      swap1\n      dup2\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      pop\n        /* \"myNFT.sol\":488:497  _jsonhash */\n      dup1\n        /* \"myNFT.sol\":470:476  tokens */\n      0x08\n        /* \"myNFT.sol\":470:485  tokens[tokenID] */\n      0x00\n        /* \"myNFT.sol\":477:484  tokenID */\n      sload(0x06)\n        /* \"myNFT.sol\":470:485  tokens[tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":470:497  tokens[tokenID] = _jsonhash */\n      swap1\n      dup2\n      tag_112\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_112:\n      pop\n        /* \"myNFT.sol\":507:533  _mint(msg.sender, tokenID) */\n      tag_113\n        /* \"myNFT.sol\":513:523  msg.sender */\n      caller\n        /* \"myNFT.sol\":525:532  tokenID */\n      sload(0x06)\n        /* \"myNFT.sol\":507:512  _mint */\n      tag_114\n        /* \"myNFT.sol\":507:533  _mint(msg.sender, tokenID) */\n      jump\t// in\n    tag_113:\n        /* \"myNFT.sol\":554:555  1 */\n      0x01\n        /* \"myNFT.sol\":543:550  tokenID */\n      0x06\n      0x00\n        /* \"myNFT.sol\":543:555  tokenID += 1 */\n      dup3\n      dup3\n      sload\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"myNFT.sol\":364:562  function minting(string memory _jsonhash) public{... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6293:6871  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_48:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6401:6402  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6387:6403  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6387:6389  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6387:6403  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6383:6470  if (to == address(0)) {... */\n      tag_118\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6456:6457  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6426:6459  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6383:6470  if (to == address(0)) {... */\n    tag_118:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6688:6709  address previousOwner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6712:6746  _update(to, tokenId, _msgSender()) */\n      tag_120\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6720:6722  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6724:6731  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6733:6745  _msgSender() */\n      tag_121\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6733:6743  _msgSender */\n      tag_106\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6733:6745  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6712:6719  _update */\n      tag_122\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6712:6746  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_120:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6688:6746  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6777:6781  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6760:6781  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6760:6773  previousOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6760:6781  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6756:6865  if (previousOwner != from) {... */\n      tag_123\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6825:6829  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6831:6838  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6840:6853  previousOwner */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6804:6854  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6756:6865  if (previousOwner != from) {... */\n    tag_123:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6373:6871  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6293:6871  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6937:7069  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_51:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7023:7062  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_127\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7040:7044  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7046:7048  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7050:7057  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7023:7062  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7023:7039  safeTransferFrom */\n      tag_76\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7023:7062  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_127:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6937:7069  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":990:1237  function viewTokens() public view returns (string[] memory){... */\n    tag_53:\n        /* \"myNFT.sol\":1033:1048  string[] memory */\n      0x60\n        /* \"myNFT.sol\":1059:1084  string[] memory allTokens */\n      0x00\n        /* \"myNFT.sol\":1100:1107  tokenID */\n      sload(0x06)\n        /* \"myNFT.sol\":1087:1108  new string[](tokenID) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_129\n      jumpi\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n    tag_129:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_132\n      jumpi\n      dup2\n      0x20\n      add\n    tag_133:\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_133\n      jumpi\n      swap1\n      pop\n    tag_132:\n      pop\n        /* \"myNFT.sol\":1059:1108  string[] memory allTokens = new string[](tokenID) */\n      swap1\n      pop\n        /* \"myNFT.sol\":1123:1132  uint256 i */\n      0x00\n        /* \"myNFT.sol\":1118:1205  for (uint256 i = 0; i < tokenID; i++) {... */\n    tag_134:\n        /* \"myNFT.sol\":1142:1149  tokenID */\n      sload(0x06)\n        /* \"myNFT.sol\":1138:1139  i */\n      dup2\n        /* \"myNFT.sol\":1138:1149  i < tokenID */\n      lt\n        /* \"myNFT.sol\":1118:1205  for (uint256 i = 0; i < tokenID; i++) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"myNFT.sol\":1185:1191  tokens */\n      0x08\n        /* \"myNFT.sol\":1185:1194  tokens[i] */\n      0x00\n        /* \"myNFT.sol\":1192:1193  i */\n      dup3\n        /* \"myNFT.sol\":1185:1194  tokens[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":1170:1194  allTokens[i] = tokens[i] */\n      dup1\n      sload\n      tag_137\n      swap1\n      tag_93\n      jump\t// in\n    tag_137:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_93\n      jump\t// in\n    tag_138:\n      dup1\n      iszero\n      tag_139\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_140\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_139)\n    tag_140:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_141:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_141\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"myNFT.sol\":1170:1179  allTokens */\n      dup3\n        /* \"myNFT.sol\":1180:1181  i */\n      dup3\n        /* \"myNFT.sol\":1170:1182  allTokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_142\n      jumpi\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n    tag_142:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"myNFT.sol\":1170:1194  allTokens[i] = tokens[i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"myNFT.sol\":1151:1154  i++ */\n      dup1\n      dup1\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      swap2\n      pop\n      pop\n        /* \"myNFT.sol\":1118:1205  for (uint256 i = 0; i < tokenID; i++) {... */\n      jump(tag_134)\n    tag_135:\n      pop\n        /* \"myNFT.sol\":1221:1230  allTokens */\n      dup1\n        /* \"myNFT.sol\":1214:1230  return allTokens */\n      swap2\n      pop\n      pop\n        /* \"myNFT.sol\":990:1237  function viewTokens() public view returns (string[] memory){... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3536:3654  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_58:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3599:3606  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3625:3647  _requireOwned(tokenId) */\n      tag_148\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3639:3646  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3625:3638  _requireOwned */\n      tag_100\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3625:3647  _requireOwned(tokenId) */\n      jump\t// in\n    tag_148:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3647  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3536:3654  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3114:3322  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_63:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3177:3184  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3217:3218  0 */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3200:3219  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3200:3205  owner */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3200:3219  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3196:3283  if (owner == address(0)) {... */\n      tag_150\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3269:3270  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3242:3272  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3196:3283  if (owner == address(0)) {... */\n    tag_150:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3299:3308  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3299:3315  _balances[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3309:3314  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3299:3315  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3292:3315  return _balances[owner] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3114:3322  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3914:4007  function symbol() public view virtual returns (string memory) {... */\n    tag_67:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3961:3974  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3993:4000  _symbol */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3986:4000  return _symbol */\n      dup1\n      sload\n      tag_153\n      swap1\n      tag_93\n      jump\t// in\n    tag_153:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_93\n      jump\t// in\n    tag_154:\n      dup1\n      iszero\n      tag_155\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_156\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_155)\n    tag_156:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_157:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_157\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3914:4007  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5868:6012  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_72:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5953:6005  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_159\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5972:5984  _msgSender() */\n      tag_160\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5972:5982  _msgSender */\n      tag_106\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5972:5984  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5986:5994  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5996:6004  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5953:5971  _setApprovalForAll */\n      tag_161\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5953:6005  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_159:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5868:6012  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7135:7343  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_76:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7279  transferFrom(from, to, tokenId) */\n      tag_163\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7261:7265  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7267:7269  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7271:7278  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7260  transferFrom */\n      tag_48\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7279  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_163:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7289:7336  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_164\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7312:7316  from */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7318:7320  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7322:7329  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7331:7335  data */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7289:7311  _checkOnERC721Received */\n      tag_165\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7289:7336  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_164:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7135:7343  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":568:831  function tokenURI(uint256 _tokenId) public view override returns(string memory){... */\n    tag_79:\n        /* \"myNFT.sol\":633:646  string memory */\n      0x60\n        /* \"myNFT.sol\":734:755  string memory baseURI */\n      0x00\n        /* \"myNFT.sol\":758:768  _baseURI() */\n      tag_167\n        /* \"myNFT.sol\":758:766  _baseURI */\n      tag_168\n        /* \"myNFT.sol\":758:768  _baseURI() */\n      jump\t// in\n    tag_167:\n        /* \"myNFT.sol\":734:768  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"myNFT.sol\":799:806  baseURI */\n      dup1\n        /* \"myNFT.sol\":808:814  tokens */\n      0x08\n        /* \"myNFT.sol\":808:823  tokens[tokenID] */\n      0x00\n        /* \"myNFT.sol\":815:822  tokenID */\n      sload(0x06)\n        /* \"myNFT.sol\":808:823  tokens[tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"myNFT.sol\":785:824  string.concat(baseURI, tokens[tokenID]) */\n      add(0x20, mload(0x40))\n      tag_169\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"myNFT.sol\":778:824  return string.concat(baseURI, tokens[tokenID]) */\n      swap2\n      pop\n      pop\n        /* \"myNFT.sol\":568:831  function tokenURI(uint256 _tokenId) public view override returns(string memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6078:6231  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_84:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6166:6170  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6189:6207  _operatorApprovals */\n      0x05\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6189:6214  _operatorApprovals[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6208:6213  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6189:6214  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6189:6224  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6215:6223  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6189:6224  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6182:6224  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6078:6231  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_90:\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18288:18529  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_100:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18351:18358  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18370:18383  address owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18386:18403  _ownerOf(tokenId) */\n      tag_174\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18395:18402  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18386:18394  _ownerOf */\n      tag_175\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18386:18403  _ownerOf(tokenId) */\n      jump\t// in\n    tag_174:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18370:18403  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18434:18435  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18417:18436  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18417:18422  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18417:18436  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18413:18501  if (owner == address(0)) {... */\n      tag_176\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18482:18489  tokenId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18459:18490  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18413:18501  if (owner == address(0)) {... */\n    tag_176:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18517:18522  owner */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18510:18522  return owner */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18288:18529  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8088:8215  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_102:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8158:8165  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8184:8199  _tokenApprovals */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8184:8208  _tokenApprovals[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8200:8207  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8184:8208  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8177:8208  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8088:8215  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_106:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16568:16688  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_107:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16648:16681  _approve(to, tokenId, auth, true) */\n      tag_181\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16657:16659  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16661:16668  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16670:16674  auth */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16676:16680  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16648:16656  _approve */\n      tag_182\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16648:16681  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_181:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16568:16688  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12105:12432  function _mint(address to, uint256 tokenId) internal {... */\n    tag_114:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12186:12187  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12172:12188  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12172:12174  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12172:12188  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12168:12255  if (to == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12241:12242  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12211:12244  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12168:12255  if (to == address(0)) {... */\n    tag_184:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12264:12285  address previousOwner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12288:12320  _update(to, tokenId, address(0)) */\n      tag_186\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12296:12298  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12300:12307  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12317:12318  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12288:12295  _update */\n      tag_122\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12288:12320  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_186:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12264:12320  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12359:12360  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12334:12361  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12334:12347  previousOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12334:12361  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12330:12426  if (previousOwner != address(0)) {... */\n      tag_187\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12412:12413  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12384:12415  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12330:12426  if (previousOwner != address(0)) {... */\n    tag_187:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12158:12432  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12105:12432  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10988:11783  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_122:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11074:11081  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11093:11105  address from */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11108:11125  _ownerOf(tokenId) */\n      tag_190\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11117:11124  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11108:11116  _ownerOf */\n      tag_175\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11108:11125  _ownerOf(tokenId) */\n      jump\t// in\n    tag_190:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11093:11125  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11201:11202  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11185:11203  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11185:11189  auth */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11185:11203  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11181:11267  if (auth != address(0)) {... */\n      tag_191\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11219:11256  _checkAuthorized(from, auth, tokenId) */\n      tag_192\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11236:11240  from */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11242:11246  auth */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11248:11255  tokenId */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11219:11235  _checkAuthorized */\n      tag_193\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11219:11256  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_192:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11181:11267  if (auth != address(0)) {... */\n    tag_191:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11327:11328  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11311:11329  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11311:11315  from */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11311:11329  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11307:11563  if (from != address(0)) {... */\n      tag_194\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11427:11475  _approve(address(0), tokenId, address(0), false) */\n      tag_195\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11444:11445  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11448:11455  tokenId */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11465:11466  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11469:11474  false */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11427:11435  _approve */\n      tag_182\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11427:11475  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_195:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11537:11538  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11518:11527  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11518:11533  _balances[from] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11528:11532  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11518:11533  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11518:11538  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11307:11563  if (from != address(0)) {... */\n    tag_194:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11591:11592  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11577:11593  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11577:11579  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11577:11593  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11573:11680  if (to != address(0)) {... */\n      tag_196\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11654:11655  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11637:11646  _balances */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11637:11650  _balances[to] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11647:11649  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11637:11650  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11637:11655  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11573:11680  if (to != address(0)) {... */\n    tag_196:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11711  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11690:11697  _owners */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11690:11706  _owners[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11698:11705  tokenId */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11690:11706  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11690:11711  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11746:11753  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11742:11744  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11727:11754  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11736:11740  from */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11727:11754  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11772:11776  from */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11765:11776  return from */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10988:11783  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17741:18053  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_161:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17868:17869  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17848:17870  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17848:17856  operator */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17848:17870  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17844:17935  if (operator == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17915:17923  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17893:17924  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17844:17935  if (operator == address(0)) {... */\n    tag_198:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17982:17990  approved */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17944:17962  _operatorApprovals */\n      0x05\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17944:17969  _operatorApprovals[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17963:17968  owner */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17944:17969  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17944:17979  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17970:17978  operator */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17944:17979  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17944:17990  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18027:18035  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18005:18046  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18020:18025  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18005:18046  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18037:18045  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18005:18046  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_200\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17741:18053  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19068:19850  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_165:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19201:19202  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19184:19186  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19184:19198  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19184:19202  to.code.length > 0 */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19180:19844  if (to.code.length > 0) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19238:19240  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19222:19258  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19259:19271  _msgSender() */\n      tag_203\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19259:19269  _msgSender */\n      tag_106\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19259:19271  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19273:19277  from */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19279:19286  tokenId */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19288:19292  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19222:19293  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      0x01\n    tag_206:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19218:19834  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_209\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_214\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_213)\n    tag_214:\n      0x60\n      swap2\n      pop\n    tag_213:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19548:19549  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19531:19537  reason */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19531:19544  reason.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19531:19549  reason.length == 0 */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19527:19820  if (reason.length == 0) {... */\n      tag_215\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19602:19604  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19580:19605  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19527:19820  if (reason.length == 0) {... */\n    tag_215:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19772:19778  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19766:19779  mload(reason) */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19757:19763  reason */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19753:19755  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19749:19764  add(32, reason) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19742:19780  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19218:19834  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_209:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19350:19391  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19340:19391  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19340:19346  retval */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19340:19391  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19336:19466  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_219\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19444:19446  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19422:19447  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19336:19466  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_219:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19294:19480  returns (bytes4 retval) {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19180:19844  if (to.code.length > 0) {... */\n    tag_202:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19068:19850  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"myNFT.sol\":837:984  function _baseURI() internal view override returns(string memory){... */\n    tag_168:\n        /* \"myNFT.sol\":888:901  string memory */\n      0x60\n        /* \"myNFT.sol\":912:977  return \"https://black-elderly-wolverine-685.mypinata.cloud/ipfs/\" */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x38\n      dup2\n      mstore\n      0x20\n      add\n      data_82b359026e8c4a10545b72abcef5b7323d4ff62dda9910b7e947419e0f56ebc4\n      0x38\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"myNFT.sol\":837:984  function _baseURI() internal view override returns(string memory){... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7857:7972  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_175:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7923:7930  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7949:7956  _owners */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7949:7965  _owners[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7957:7964  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7949:7965  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7942:7965  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7857:7972  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16870:17532  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_182:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17039  emitEvent */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17061  emitEvent || auth != address(0) */\n      dup1\n      tag_224\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17059:17060  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17043:17061  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17043:17047  auth */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17043:17061  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17061  emitEvent || auth != address(0) */\n    tag_224:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17026:17486  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17077:17090  address owner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17093:17115  _requireOwned(tokenId) */\n      tag_226\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17107:17114  tokenId */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17093:17106  _requireOwned */\n      tag_100\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17093:17115  _requireOwned(tokenId) */\n      jump\t// in\n    tag_226:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17077:17115  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17259:17260  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17243:17261  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17243:17247  auth */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17243:17261  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17243:17278  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_227\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17274:17278  auth */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17265:17278  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17265:17270  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17265:17278  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17243:17278  auth != address(0) && owner != auth */\n    tag_227:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17243:17312  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_228\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17283:17312  isApprovedForAll(owner, auth) */\n      tag_229\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17300:17305  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17307:17311  auth */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17283:17299  isApprovedForAll */\n      tag_84\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17283:17312  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_229:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17282:17312  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17243:17312  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_228:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17239:17381  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17361:17365  auth */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17339:17366  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17239:17381  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_230:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17399:17408  emitEvent */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17395:17476  if (emitEvent) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17453:17460  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17449:17451  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17433:17461  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17442:17447  owner */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17433:17461  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17395:17476  if (emitEvent) {... */\n    tag_232:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17063:17486  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17026:17486  if (emitEvent || auth != address(0)) {... */\n    tag_225:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17523:17525  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17496:17511  _tokenApprovals */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17496:17520  _tokenApprovals[tokenId] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17512:17519  tokenId */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17496:17520  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17496:17525  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16870:17532  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9232:9600  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_193:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9344:9382  _isAuthorized(owner, spender, tokenId) */\n      tag_234\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9358:9363  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9365:9372  spender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9374:9381  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9344:9357  _isAuthorized */\n      tag_235\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9344:9382  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_234:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9339:9594  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_236\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9419:9420  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9402:9421  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9402:9407  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9402:9421  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9398:9584  if (owner == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9471:9478  tokenId */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9448:9479  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9398:9584  if (owner == address(0)) {... */\n    tag_237:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9552:9559  spender */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9561:9568  tokenId */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9525:9569  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap3\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9339:9594  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_236:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9232:9600  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8526:8798  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_235:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8629:8633  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8683:8684  0 */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8664:8685  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8664:8671  spender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8664:8685  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8664:8791  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_243\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8711:8718  spender */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8702:8718  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8702:8707  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8702:8718  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8702:8754  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_244\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8722:8754  isApprovedForAll(owner, spender) */\n      tag_245\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8739:8744  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8746:8753  spender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8722:8738  isApprovedForAll */\n      tag_84\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8722:8754  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_245:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8702:8754  owner == spender || isApprovedForAll(owner, spender) */\n    tag_244:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8702:8790  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_246\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8783:8790  spender */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8758:8790  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8758:8779  _getApproved(tokenId) */\n      tag_247\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8771:8778  tokenId */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8758:8770  _getApproved */\n      tag_102\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8758:8779  _getApproved(tokenId) */\n      jump\t// in\n    tag_247:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8758:8790  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8702:8790  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_246:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8664:8791  spender != address(0) &&... */\n    tag_243:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8645:8791  return... */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8526:8798  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_248:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_249:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_250:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_251:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_252:\n        /* \"#utility.yul\":561:584   */\n      tag_321\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_251\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_322:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_253:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_324\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_252\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_327\n      tag_249\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":833:952   */\n    tag_326:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_328\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_253\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_254:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_255:\n        /* \"#utility.yul\":1268:1289   */\n      tag_331\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_254\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_333\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_255\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_256:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_257:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_258:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_337:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_337)\n    tag_339:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_259:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_260:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_342\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_256\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2329:2400   */\n      tag_343\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_257\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_344\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_258\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2499:2528   */\n      tag_345\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_259\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_30:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_347\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_260\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_261:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_262:\n        /* \"#utility.yul\":3016:3040   */\n      tag_350\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_261\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_351:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_263:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_353\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_262\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_33:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_356\n      tag_249\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3292:3411   */\n    tag_355:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_357\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_263\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_264:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_265:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_360\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_264\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_266:\n        /* \"#utility.yul\":3872:3896   */\n      tag_362\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_265\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_36:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_364\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_266\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_267:\n        /* \"#utility.yul\":4210:4234   */\n      tag_366\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_265\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_367:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_268:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_369\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_267\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_39:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_372\n      tag_249\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4503:4622   */\n    tag_371:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_373\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_268\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_374\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_263\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5007   */\n    tag_269:\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4996:4997   */\n      dup1\n        /* \"#utility.yul\":4989:5001   */\n      revert\n        /* \"#utility.yul\":5013:5130   */\n    tag_270:\n        /* \"#utility.yul\":5122:5123   */\n      0x00\n        /* \"#utility.yul\":5119:5120   */\n      dup1\n        /* \"#utility.yul\":5112:5124   */\n      revert\n        /* \"#utility.yul\":5136:5316   */\n    tag_131:\n        /* \"#utility.yul\":5184:5261   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5174:5262   */\n      mstore\n        /* \"#utility.yul\":5281:5285   */\n      0x41\n        /* \"#utility.yul\":5278:5279   */\n      0x04\n        /* \"#utility.yul\":5271:5286   */\n      mstore\n        /* \"#utility.yul\":5305:5309   */\n      0x24\n        /* \"#utility.yul\":5302:5303   */\n      0x00\n        /* \"#utility.yul\":5295:5310   */\n      revert\n        /* \"#utility.yul\":5322:5603   */\n    tag_271:\n        /* \"#utility.yul\":5405:5432   */\n      tag_379\n        /* \"#utility.yul\":5427:5431   */\n      dup3\n        /* \"#utility.yul\":5405:5432   */\n      tag_259\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5397:5403   */\n      dup2\n        /* \"#utility.yul\":5393:5433   */\n      add\n        /* \"#utility.yul\":5535:5541   */\n      dup2\n        /* \"#utility.yul\":5523:5533   */\n      dup2\n        /* \"#utility.yul\":5520:5542   */\n      lt\n        /* \"#utility.yul\":5499:5517   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5487:5497   */\n      dup3\n        /* \"#utility.yul\":5484:5518   */\n      gt\n        /* \"#utility.yul\":5481:5543   */\n      or\n        /* \"#utility.yul\":5478:5566   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":5546:5564   */\n      tag_381\n      tag_131\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5478:5566   */\n    tag_380:\n        /* \"#utility.yul\":5586:5596   */\n      dup1\n        /* \"#utility.yul\":5582:5584   */\n      0x40\n        /* \"#utility.yul\":5575:5597   */\n      mstore\n        /* \"#utility.yul\":5365:5603   */\n      pop\n        /* \"#utility.yul\":5322:5603   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5609:5738   */\n    tag_272:\n        /* \"#utility.yul\":5643:5649   */\n      0x00\n        /* \"#utility.yul\":5670:5690   */\n      tag_383\n      tag_248\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5660:5690   */\n      swap1\n      pop\n        /* \"#utility.yul\":5699:5732   */\n      tag_384\n        /* \"#utility.yul\":5727:5731   */\n      dup3\n        /* \"#utility.yul\":5719:5725   */\n      dup3\n        /* \"#utility.yul\":5699:5732   */\n      tag_271\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5609:5738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5744:6052   */\n    tag_273:\n        /* \"#utility.yul\":5806:5810   */\n      0x00\n        /* \"#utility.yul\":5896:5914   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5888:5894   */\n      dup3\n        /* \"#utility.yul\":5885:5915   */\n      gt\n        /* \"#utility.yul\":5882:5938   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":5918:5936   */\n      tag_387\n      tag_131\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5882:5938   */\n    tag_386:\n        /* \"#utility.yul\":5956:5985   */\n      tag_388\n        /* \"#utility.yul\":5978:5984   */\n      dup3\n        /* \"#utility.yul\":5956:5985   */\n      tag_259\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":5948:5985   */\n      swap1\n      pop\n        /* \"#utility.yul\":6040:6044   */\n      0x20\n        /* \"#utility.yul\":6034:6038   */\n      dup2\n        /* \"#utility.yul\":6030:6045   */\n      add\n        /* \"#utility.yul\":6022:6045   */\n      swap1\n      pop\n        /* \"#utility.yul\":5744:6052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6058:6204   */\n    tag_274:\n        /* \"#utility.yul\":6155:6161   */\n      dup3\n        /* \"#utility.yul\":6150:6153   */\n      dup2\n        /* \"#utility.yul\":6145:6148   */\n      dup4\n        /* \"#utility.yul\":6132:6162   */\n      calldatacopy\n        /* \"#utility.yul\":6196:6197   */\n      0x00\n        /* \"#utility.yul\":6187:6193   */\n      dup4\n        /* \"#utility.yul\":6182:6185   */\n      dup4\n        /* \"#utility.yul\":6178:6194   */\n      add\n        /* \"#utility.yul\":6171:6198   */\n      mstore\n        /* \"#utility.yul\":6058:6204   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6210:6635   */\n    tag_275:\n        /* \"#utility.yul\":6288:6293   */\n      0x00\n        /* \"#utility.yul\":6313:6379   */\n      tag_391\n        /* \"#utility.yul\":6329:6378   */\n      tag_392\n        /* \"#utility.yul\":6371:6377   */\n      dup5\n        /* \"#utility.yul\":6329:6378   */\n      tag_273\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6313:6379   */\n      tag_272\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6304:6379   */\n      swap1\n      pop\n        /* \"#utility.yul\":6402:6408   */\n      dup3\n        /* \"#utility.yul\":6395:6400   */\n      dup2\n        /* \"#utility.yul\":6388:6409   */\n      mstore\n        /* \"#utility.yul\":6440:6444   */\n      0x20\n        /* \"#utility.yul\":6433:6438   */\n      dup2\n        /* \"#utility.yul\":6429:6445   */\n      add\n        /* \"#utility.yul\":6478:6481   */\n      dup5\n        /* \"#utility.yul\":6469:6475   */\n      dup5\n        /* \"#utility.yul\":6464:6467   */\n      dup5\n        /* \"#utility.yul\":6460:6476   */\n      add\n        /* \"#utility.yul\":6457:6482   */\n      gt\n        /* \"#utility.yul\":6454:6566   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":6485:6564   */\n      tag_394\n      tag_270\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6454:6566   */\n    tag_393:\n        /* \"#utility.yul\":6575:6629   */\n      tag_395\n        /* \"#utility.yul\":6622:6628   */\n      dup5\n        /* \"#utility.yul\":6617:6620   */\n      dup3\n        /* \"#utility.yul\":6612:6615   */\n      dup6\n        /* \"#utility.yul\":6575:6629   */\n      tag_274\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6294:6635   */\n      pop\n        /* \"#utility.yul\":6210:6635   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6655:6995   */\n    tag_276:\n        /* \"#utility.yul\":6711:6716   */\n      0x00\n        /* \"#utility.yul\":6760:6763   */\n      dup3\n        /* \"#utility.yul\":6753:6757   */\n      0x1f\n        /* \"#utility.yul\":6745:6751   */\n      dup4\n        /* \"#utility.yul\":6741:6758   */\n      add\n        /* \"#utility.yul\":6737:6764   */\n      slt\n        /* \"#utility.yul\":6727:6849   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":6768:6847   */\n      tag_398\n      tag_269\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6727:6849   */\n    tag_397:\n        /* \"#utility.yul\":6885:6891   */\n      dup2\n        /* \"#utility.yul\":6872:6892   */\n      calldataload\n        /* \"#utility.yul\":6910:6989   */\n      tag_399\n        /* \"#utility.yul\":6985:6988   */\n      dup5\n        /* \"#utility.yul\":6977:6983   */\n      dup3\n        /* \"#utility.yul\":6970:6974   */\n      0x20\n        /* \"#utility.yul\":6962:6968   */\n      dup7\n        /* \"#utility.yul\":6958:6975   */\n      add\n        /* \"#utility.yul\":6910:6989   */\n      tag_275\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6901:6989   */\n      swap2\n      pop\n        /* \"#utility.yul\":6717:6995   */\n      pop\n        /* \"#utility.yul\":6655:6995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7001:7510   */\n    tag_43:\n        /* \"#utility.yul\":7070:7076   */\n      0x00\n        /* \"#utility.yul\":7119:7121   */\n      0x20\n        /* \"#utility.yul\":7107:7116   */\n      dup3\n        /* \"#utility.yul\":7098:7105   */\n      dup5\n        /* \"#utility.yul\":7094:7117   */\n      sub\n        /* \"#utility.yul\":7090:7122   */\n      slt\n        /* \"#utility.yul\":7087:7206   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":7125:7204   */\n      tag_402\n      tag_249\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7087:7206   */\n    tag_401:\n        /* \"#utility.yul\":7273:7274   */\n      0x00\n        /* \"#utility.yul\":7262:7271   */\n      dup3\n        /* \"#utility.yul\":7258:7275   */\n      add\n        /* \"#utility.yul\":7245:7276   */\n      calldataload\n        /* \"#utility.yul\":7303:7321   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7295:7301   */\n      dup2\n        /* \"#utility.yul\":7292:7322   */\n      gt\n        /* \"#utility.yul\":7289:7406   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":7325:7404   */\n      tag_404\n      tag_250\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7289:7406   */\n    tag_403:\n        /* \"#utility.yul\":7430:7493   */\n      tag_405\n        /* \"#utility.yul\":7485:7492   */\n      dup5\n        /* \"#utility.yul\":7476:7482   */\n      dup3\n        /* \"#utility.yul\":7465:7474   */\n      dup6\n        /* \"#utility.yul\":7461:7483   */\n      add\n        /* \"#utility.yul\":7430:7493   */\n      tag_276\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7420:7493   */\n      swap2\n      pop\n        /* \"#utility.yul\":7216:7503   */\n      pop\n        /* \"#utility.yul\":7001:7510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7516:8135   */\n    tag_47:\n        /* \"#utility.yul\":7593:7599   */\n      0x00\n        /* \"#utility.yul\":7601:7607   */\n      dup1\n        /* \"#utility.yul\":7609:7615   */\n      0x00\n        /* \"#utility.yul\":7658:7660   */\n      0x60\n        /* \"#utility.yul\":7646:7655   */\n      dup5\n        /* \"#utility.yul\":7637:7644   */\n      dup7\n        /* \"#utility.yul\":7633:7656   */\n      sub\n        /* \"#utility.yul\":7629:7661   */\n      slt\n        /* \"#utility.yul\":7626:7745   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":7664:7743   */\n      tag_408\n      tag_249\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":7626:7745   */\n    tag_407:\n        /* \"#utility.yul\":7784:7785   */\n      0x00\n        /* \"#utility.yul\":7809:7862   */\n      tag_409\n        /* \"#utility.yul\":7854:7861   */\n      dup7\n        /* \"#utility.yul\":7845:7851   */\n      dup3\n        /* \"#utility.yul\":7834:7843   */\n      dup8\n        /* \"#utility.yul\":7830:7852   */\n      add\n        /* \"#utility.yul\":7809:7862   */\n      tag_268\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":7799:7862   */\n      swap4\n      pop\n        /* \"#utility.yul\":7755:7872   */\n      pop\n        /* \"#utility.yul\":7911:7913   */\n      0x20\n        /* \"#utility.yul\":7937:7990   */\n      tag_410\n        /* \"#utility.yul\":7982:7989   */\n      dup7\n        /* \"#utility.yul\":7973:7979   */\n      dup3\n        /* \"#utility.yul\":7962:7971   */\n      dup8\n        /* \"#utility.yul\":7958:7980   */\n      add\n        /* \"#utility.yul\":7937:7990   */\n      tag_268\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7927:7990   */\n      swap3\n      pop\n        /* \"#utility.yul\":7882:8000   */\n      pop\n        /* \"#utility.yul\":8039:8041   */\n      0x40\n        /* \"#utility.yul\":8065:8118   */\n      tag_411\n        /* \"#utility.yul\":8110:8117   */\n      dup7\n        /* \"#utility.yul\":8101:8107   */\n      dup3\n        /* \"#utility.yul\":8090:8099   */\n      dup8\n        /* \"#utility.yul\":8086:8108   */\n      add\n        /* \"#utility.yul\":8065:8118   */\n      tag_263\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8055:8118   */\n      swap2\n      pop\n        /* \"#utility.yul\":8010:8128   */\n      pop\n        /* \"#utility.yul\":7516:8135   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8141:8265   */\n    tag_277:\n        /* \"#utility.yul\":8218:8224   */\n      0x00\n        /* \"#utility.yul\":8252:8257   */\n      dup2\n        /* \"#utility.yul\":8246:8258   */\n      mload\n        /* \"#utility.yul\":8236:8258   */\n      swap1\n      pop\n        /* \"#utility.yul\":8141:8265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8271:8465   */\n    tag_278:\n        /* \"#utility.yul\":8380:8391   */\n      0x00\n        /* \"#utility.yul\":8414:8420   */\n      dup3\n        /* \"#utility.yul\":8409:8412   */\n      dup3\n        /* \"#utility.yul\":8402:8421   */\n      mstore\n        /* \"#utility.yul\":8454:8458   */\n      0x20\n        /* \"#utility.yul\":8449:8452   */\n      dup3\n        /* \"#utility.yul\":8445:8459   */\n      add\n        /* \"#utility.yul\":8430:8459   */\n      swap1\n      pop\n        /* \"#utility.yul\":8271:8465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8471:8613   */\n    tag_279:\n        /* \"#utility.yul\":8548:8552   */\n      0x00\n        /* \"#utility.yul\":8571:8574   */\n      dup2\n        /* \"#utility.yul\":8563:8574   */\n      swap1\n      pop\n        /* \"#utility.yul\":8601:8605   */\n      0x20\n        /* \"#utility.yul\":8596:8599   */\n      dup3\n        /* \"#utility.yul\":8592:8606   */\n      add\n        /* \"#utility.yul\":8584:8606   */\n      swap1\n      pop\n        /* \"#utility.yul\":8471:8613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8619:8778   */\n    tag_280:\n        /* \"#utility.yul\":8693:8704   */\n      0x00\n        /* \"#utility.yul\":8727:8733   */\n      dup3\n        /* \"#utility.yul\":8722:8725   */\n      dup3\n        /* \"#utility.yul\":8715:8734   */\n      mstore\n        /* \"#utility.yul\":8767:8771   */\n      0x20\n        /* \"#utility.yul\":8762:8765   */\n      dup3\n        /* \"#utility.yul\":8758:8772   */\n      add\n        /* \"#utility.yul\":8743:8772   */\n      swap1\n      pop\n        /* \"#utility.yul\":8619:8778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8784:9141   */\n    tag_281:\n        /* \"#utility.yul\":8862:8865   */\n      0x00\n        /* \"#utility.yul\":8890:8929   */\n      tag_417\n        /* \"#utility.yul\":8923:8928   */\n      dup3\n        /* \"#utility.yul\":8890:8929   */\n      tag_256\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8945:9006   */\n      tag_418\n        /* \"#utility.yul\":8999:9005   */\n      dup2\n        /* \"#utility.yul\":8994:8997   */\n      dup6\n        /* \"#utility.yul\":8945:9006   */\n      tag_280\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8938:9006   */\n      swap4\n      pop\n        /* \"#utility.yul\":9015:9080   */\n      tag_419\n        /* \"#utility.yul\":9073:9079   */\n      dup2\n        /* \"#utility.yul\":9068:9071   */\n      dup6\n        /* \"#utility.yul\":9061:9065   */\n      0x20\n        /* \"#utility.yul\":9054:9059   */\n      dup7\n        /* \"#utility.yul\":9050:9066   */\n      add\n        /* \"#utility.yul\":9015:9080   */\n      tag_258\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":9105:9134   */\n      tag_420\n        /* \"#utility.yul\":9127:9133   */\n      dup2\n        /* \"#utility.yul\":9105:9134   */\n      tag_259\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9100:9103   */\n      dup5\n        /* \"#utility.yul\":9096:9135   */\n      add\n        /* \"#utility.yul\":9089:9135   */\n      swap2\n      pop\n        /* \"#utility.yul\":8866:9141   */\n      pop\n        /* \"#utility.yul\":8784:9141   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9147:9343   */\n    tag_282:\n        /* \"#utility.yul\":9236:9246   */\n      0x00\n        /* \"#utility.yul\":9271:9337   */\n      tag_422\n        /* \"#utility.yul\":9333:9336   */\n      dup4\n        /* \"#utility.yul\":9325:9331   */\n      dup4\n        /* \"#utility.yul\":9271:9337   */\n      tag_281\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9257:9337   */\n      swap1\n      pop\n        /* \"#utility.yul\":9147:9343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9349:9472   */\n    tag_283:\n        /* \"#utility.yul\":9429:9433   */\n      0x00\n        /* \"#utility.yul\":9461:9465   */\n      0x20\n        /* \"#utility.yul\":9456:9459   */\n      dup3\n        /* \"#utility.yul\":9452:9466   */\n      add\n        /* \"#utility.yul\":9444:9466   */\n      swap1\n      pop\n        /* \"#utility.yul\":9349:9472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9506:10497   */\n    tag_284:\n        /* \"#utility.yul\":9645:9648   */\n      0x00\n        /* \"#utility.yul\":9674:9738   */\n      tag_425\n        /* \"#utility.yul\":9732:9737   */\n      dup3\n        /* \"#utility.yul\":9674:9738   */\n      tag_277\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9754:9850   */\n      tag_426\n        /* \"#utility.yul\":9843:9849   */\n      dup2\n        /* \"#utility.yul\":9838:9841   */\n      dup6\n        /* \"#utility.yul\":9754:9850   */\n      tag_278\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9747:9850   */\n      swap4\n      pop\n        /* \"#utility.yul\":9876:9879   */\n      dup4\n        /* \"#utility.yul\":9921:9925   */\n      0x20\n        /* \"#utility.yul\":9913:9919   */\n      dup3\n        /* \"#utility.yul\":9909:9926   */\n      mul\n        /* \"#utility.yul\":9904:9907   */\n      dup6\n        /* \"#utility.yul\":9900:9927   */\n      add\n        /* \"#utility.yul\":9951:10017   */\n      tag_427\n        /* \"#utility.yul\":10011:10016   */\n      dup6\n        /* \"#utility.yul\":9951:10017   */\n      tag_279\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":10040:10047   */\n      dup1\n        /* \"#utility.yul\":10071:10072   */\n      0x00\n        /* \"#utility.yul\":10056:10452   */\n    tag_428:\n        /* \"#utility.yul\":10081:10087   */\n      dup6\n        /* \"#utility.yul\":10078:10079   */\n      dup2\n        /* \"#utility.yul\":10075:10088   */\n      lt\n        /* \"#utility.yul\":10056:10452   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":10152:10161   */\n      dup5\n        /* \"#utility.yul\":10146:10150   */\n      dup5\n        /* \"#utility.yul\":10142:10162   */\n      sub\n        /* \"#utility.yul\":10137:10140   */\n      dup10\n        /* \"#utility.yul\":10130:10163   */\n      mstore\n        /* \"#utility.yul\":10203:10209   */\n      dup2\n        /* \"#utility.yul\":10197:10210   */\n      mload\n        /* \"#utility.yul\":10231:10315   */\n      tag_431\n        /* \"#utility.yul\":10310:10314   */\n      dup6\n        /* \"#utility.yul\":10295:10308   */\n      dup3\n        /* \"#utility.yul\":10231:10315   */\n      tag_282\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":10223:10315   */\n      swap5\n      pop\n        /* \"#utility.yul\":10338:10408   */\n      tag_432\n        /* \"#utility.yul\":10401:10407   */\n      dup4\n        /* \"#utility.yul\":10338:10408   */\n      tag_283\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10328:10408   */\n      swap3\n      pop\n        /* \"#utility.yul\":10437:10441   */\n      0x20\n        /* \"#utility.yul\":10432:10435   */\n      dup11\n        /* \"#utility.yul\":10428:10442   */\n      add\n        /* \"#utility.yul\":10421:10442   */\n      swap10\n      pop\n        /* \"#utility.yul\":10116:10452   */\n      pop\n        /* \"#utility.yul\":10103:10104   */\n      0x01\n        /* \"#utility.yul\":10100:10101   */\n      dup2\n        /* \"#utility.yul\":10096:10105   */\n      add\n        /* \"#utility.yul\":10091:10105   */\n      swap1\n      pop\n        /* \"#utility.yul\":10056:10452   */\n      jump(tag_428)\n    tag_430:\n        /* \"#utility.yul\":10060:10074   */\n      pop\n        /* \"#utility.yul\":10468:10472   */\n      dup3\n        /* \"#utility.yul\":10461:10472   */\n      swap8\n      pop\n        /* \"#utility.yul\":10488:10491   */\n      dup8\n        /* \"#utility.yul\":10481:10491   */\n      swap6\n      pop\n        /* \"#utility.yul\":9650:10497   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9506:10497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10503:10916   */\n    tag_55:\n        /* \"#utility.yul\":10666:10670   */\n      0x00\n        /* \"#utility.yul\":10704:10706   */\n      0x20\n        /* \"#utility.yul\":10693:10702   */\n      dup3\n        /* \"#utility.yul\":10689:10707   */\n      add\n        /* \"#utility.yul\":10681:10707   */\n      swap1\n      pop\n        /* \"#utility.yul\":10753:10762   */\n      dup2\n        /* \"#utility.yul\":10747:10751   */\n      dup2\n        /* \"#utility.yul\":10743:10763   */\n      sub\n        /* \"#utility.yul\":10739:10740   */\n      0x00\n        /* \"#utility.yul\":10728:10737   */\n      dup4\n        /* \"#utility.yul\":10724:10741   */\n      add\n        /* \"#utility.yul\":10717:10764   */\n      mstore\n        /* \"#utility.yul\":10781:10909   */\n      tag_434\n        /* \"#utility.yul\":10904:10908   */\n      dup2\n        /* \"#utility.yul\":10895:10901   */\n      dup5\n        /* \"#utility.yul\":10781:10909   */\n      tag_284\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10773:10909   */\n      swap1\n      pop\n        /* \"#utility.yul\":10503:10916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10922:11251   */\n    tag_62:\n        /* \"#utility.yul\":10981:10987   */\n      0x00\n        /* \"#utility.yul\":11030:11032   */\n      0x20\n        /* \"#utility.yul\":11018:11027   */\n      dup3\n        /* \"#utility.yul\":11009:11016   */\n      dup5\n        /* \"#utility.yul\":11005:11028   */\n      sub\n        /* \"#utility.yul\":11001:11033   */\n      slt\n        /* \"#utility.yul\":10998:11117   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":11036:11115   */\n      tag_437\n      tag_249\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10998:11117   */\n    tag_436:\n        /* \"#utility.yul\":11156:11157   */\n      0x00\n        /* \"#utility.yul\":11181:11234   */\n      tag_438\n        /* \"#utility.yul\":11226:11233   */\n      dup5\n        /* \"#utility.yul\":11217:11223   */\n      dup3\n        /* \"#utility.yul\":11206:11215   */\n      dup6\n        /* \"#utility.yul\":11202:11224   */\n      add\n        /* \"#utility.yul\":11181:11234   */\n      tag_268\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":11171:11234   */\n      swap2\n      pop\n        /* \"#utility.yul\":11127:11244   */\n      pop\n        /* \"#utility.yul\":10922:11251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11257:11375   */\n    tag_285:\n        /* \"#utility.yul\":11344:11368   */\n      tag_440\n        /* \"#utility.yul\":11362:11367   */\n      dup2\n        /* \"#utility.yul\":11344:11368   */\n      tag_261\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":11339:11342   */\n      dup3\n        /* \"#utility.yul\":11332:11369   */\n      mstore\n        /* \"#utility.yul\":11257:11375   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11381:11603   */\n    tag_65:\n        /* \"#utility.yul\":11474:11478   */\n      0x00\n        /* \"#utility.yul\":11512:11514   */\n      0x20\n        /* \"#utility.yul\":11501:11510   */\n      dup3\n        /* \"#utility.yul\":11497:11515   */\n      add\n        /* \"#utility.yul\":11489:11515   */\n      swap1\n      pop\n        /* \"#utility.yul\":11525:11596   */\n      tag_442\n        /* \"#utility.yul\":11593:11594   */\n      0x00\n        /* \"#utility.yul\":11582:11591   */\n      dup4\n        /* \"#utility.yul\":11578:11595   */\n      add\n        /* \"#utility.yul\":11569:11575   */\n      dup5\n        /* \"#utility.yul\":11525:11596   */\n      tag_285\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11381:11603   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11609:11725   */\n    tag_286:\n        /* \"#utility.yul\":11679:11700   */\n      tag_444\n        /* \"#utility.yul\":11694:11699   */\n      dup2\n        /* \"#utility.yul\":11679:11700   */\n      tag_254\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11672:11677   */\n      dup2\n        /* \"#utility.yul\":11669:11701   */\n      eq\n        /* \"#utility.yul\":11659:11719   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":11715:11716   */\n      0x00\n        /* \"#utility.yul\":11712:11713   */\n      dup1\n        /* \"#utility.yul\":11705:11717   */\n      revert\n        /* \"#utility.yul\":11659:11719   */\n    tag_445:\n        /* \"#utility.yul\":11609:11725   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11731:11864   */\n    tag_287:\n        /* \"#utility.yul\":11774:11779   */\n      0x00\n        /* \"#utility.yul\":11812:11818   */\n      dup2\n        /* \"#utility.yul\":11799:11819   */\n      calldataload\n        /* \"#utility.yul\":11790:11819   */\n      swap1\n      pop\n        /* \"#utility.yul\":11828:11858   */\n      tag_447\n        /* \"#utility.yul\":11852:11857   */\n      dup2\n        /* \"#utility.yul\":11828:11858   */\n      tag_286\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11731:11864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11870:12338   */\n    tag_71:\n        /* \"#utility.yul\":11935:11941   */\n      0x00\n        /* \"#utility.yul\":11943:11949   */\n      dup1\n        /* \"#utility.yul\":11992:11994   */\n      0x40\n        /* \"#utility.yul\":11980:11989   */\n      dup4\n        /* \"#utility.yul\":11971:11978   */\n      dup6\n        /* \"#utility.yul\":11967:11990   */\n      sub\n        /* \"#utility.yul\":11963:11995   */\n      slt\n        /* \"#utility.yul\":11960:12079   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":11998:12077   */\n      tag_450\n      tag_249\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11960:12079   */\n    tag_449:\n        /* \"#utility.yul\":12118:12119   */\n      0x00\n        /* \"#utility.yul\":12143:12196   */\n      tag_451\n        /* \"#utility.yul\":12188:12195   */\n      dup6\n        /* \"#utility.yul\":12179:12185   */\n      dup3\n        /* \"#utility.yul\":12168:12177   */\n      dup7\n        /* \"#utility.yul\":12164:12186   */\n      add\n        /* \"#utility.yul\":12143:12196   */\n      tag_268\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":12133:12196   */\n      swap3\n      pop\n        /* \"#utility.yul\":12089:12206   */\n      pop\n        /* \"#utility.yul\":12245:12247   */\n      0x20\n        /* \"#utility.yul\":12271:12321   */\n      tag_452\n        /* \"#utility.yul\":12313:12320   */\n      dup6\n        /* \"#utility.yul\":12304:12310   */\n      dup3\n        /* \"#utility.yul\":12293:12302   */\n      dup7\n        /* \"#utility.yul\":12289:12311   */\n      add\n        /* \"#utility.yul\":12271:12321   */\n      tag_287\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":12261:12321   */\n      swap2\n      pop\n        /* \"#utility.yul\":12216:12331   */\n      pop\n        /* \"#utility.yul\":11870:12338   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12344:12651   */\n    tag_288:\n        /* \"#utility.yul\":12405:12409   */\n      0x00\n        /* \"#utility.yul\":12495:12513   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12487:12493   */\n      dup3\n        /* \"#utility.yul\":12484:12514   */\n      gt\n        /* \"#utility.yul\":12481:12537   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":12517:12535   */\n      tag_455\n      tag_131\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":12481:12537   */\n    tag_454:\n        /* \"#utility.yul\":12555:12584   */\n      tag_456\n        /* \"#utility.yul\":12577:12583   */\n      dup3\n        /* \"#utility.yul\":12555:12584   */\n      tag_259\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12547:12584   */\n      swap1\n      pop\n        /* \"#utility.yul\":12639:12643   */\n      0x20\n        /* \"#utility.yul\":12633:12637   */\n      dup2\n        /* \"#utility.yul\":12629:12644   */\n      add\n        /* \"#utility.yul\":12621:12644   */\n      swap1\n      pop\n        /* \"#utility.yul\":12344:12651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12657:13080   */\n    tag_289:\n        /* \"#utility.yul\":12734:12739   */\n      0x00\n        /* \"#utility.yul\":12759:12824   */\n      tag_458\n        /* \"#utility.yul\":12775:12823   */\n      tag_459\n        /* \"#utility.yul\":12816:12822   */\n      dup5\n        /* \"#utility.yul\":12775:12823   */\n      tag_288\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12759:12824   */\n      tag_272\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12750:12824   */\n      swap1\n      pop\n        /* \"#utility.yul\":12847:12853   */\n      dup3\n        /* \"#utility.yul\":12840:12845   */\n      dup2\n        /* \"#utility.yul\":12833:12854   */\n      mstore\n        /* \"#utility.yul\":12885:12889   */\n      0x20\n        /* \"#utility.yul\":12878:12883   */\n      dup2\n        /* \"#utility.yul\":12874:12890   */\n      add\n        /* \"#utility.yul\":12923:12926   */\n      dup5\n        /* \"#utility.yul\":12914:12920   */\n      dup5\n        /* \"#utility.yul\":12909:12912   */\n      dup5\n        /* \"#utility.yul\":12905:12921   */\n      add\n        /* \"#utility.yul\":12902:12927   */\n      gt\n        /* \"#utility.yul\":12899:13011   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":12930:13009   */\n      tag_461\n      tag_270\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12899:13011   */\n    tag_460:\n        /* \"#utility.yul\":13020:13074   */\n      tag_462\n        /* \"#utility.yul\":13067:13073   */\n      dup5\n        /* \"#utility.yul\":13062:13065   */\n      dup3\n        /* \"#utility.yul\":13057:13060   */\n      dup6\n        /* \"#utility.yul\":13020:13074   */\n      tag_274\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":12740:13080   */\n      pop\n        /* \"#utility.yul\":12657:13080   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13099:13437   */\n    tag_290:\n        /* \"#utility.yul\":13154:13159   */\n      0x00\n        /* \"#utility.yul\":13203:13206   */\n      dup3\n        /* \"#utility.yul\":13196:13200   */\n      0x1f\n        /* \"#utility.yul\":13188:13194   */\n      dup4\n        /* \"#utility.yul\":13184:13201   */\n      add\n        /* \"#utility.yul\":13180:13207   */\n      slt\n        /* \"#utility.yul\":13170:13292   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":13211:13290   */\n      tag_465\n      tag_269\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":13170:13292   */\n    tag_464:\n        /* \"#utility.yul\":13328:13334   */\n      dup2\n        /* \"#utility.yul\":13315:13335   */\n      calldataload\n        /* \"#utility.yul\":13353:13431   */\n      tag_466\n        /* \"#utility.yul\":13427:13430   */\n      dup5\n        /* \"#utility.yul\":13419:13425   */\n      dup3\n        /* \"#utility.yul\":13412:13416   */\n      0x20\n        /* \"#utility.yul\":13404:13410   */\n      dup7\n        /* \"#utility.yul\":13400:13417   */\n      add\n        /* \"#utility.yul\":13353:13431   */\n      tag_289\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":13344:13431   */\n      swap2\n      pop\n        /* \"#utility.yul\":13160:13437   */\n      pop\n        /* \"#utility.yul\":13099:13437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13443:14386   */\n    tag_75:\n        /* \"#utility.yul\":13538:13544   */\n      0x00\n        /* \"#utility.yul\":13546:13552   */\n      dup1\n        /* \"#utility.yul\":13554:13560   */\n      0x00\n        /* \"#utility.yul\":13562:13568   */\n      dup1\n        /* \"#utility.yul\":13611:13614   */\n      0x80\n        /* \"#utility.yul\":13599:13608   */\n      dup6\n        /* \"#utility.yul\":13590:13597   */\n      dup8\n        /* \"#utility.yul\":13586:13609   */\n      sub\n        /* \"#utility.yul\":13582:13615   */\n      slt\n        /* \"#utility.yul\":13579:13699   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":13618:13697   */\n      tag_469\n      tag_249\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13579:13699   */\n    tag_468:\n        /* \"#utility.yul\":13738:13739   */\n      0x00\n        /* \"#utility.yul\":13763:13816   */\n      tag_470\n        /* \"#utility.yul\":13808:13815   */\n      dup8\n        /* \"#utility.yul\":13799:13805   */\n      dup3\n        /* \"#utility.yul\":13788:13797   */\n      dup9\n        /* \"#utility.yul\":13784:13806   */\n      add\n        /* \"#utility.yul\":13763:13816   */\n      tag_268\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":13753:13816   */\n      swap5\n      pop\n        /* \"#utility.yul\":13709:13826   */\n      pop\n        /* \"#utility.yul\":13865:13867   */\n      0x20\n        /* \"#utility.yul\":13891:13944   */\n      tag_471\n        /* \"#utility.yul\":13936:13943   */\n      dup8\n        /* \"#utility.yul\":13927:13933   */\n      dup3\n        /* \"#utility.yul\":13916:13925   */\n      dup9\n        /* \"#utility.yul\":13912:13934   */\n      add\n        /* \"#utility.yul\":13891:13944   */\n      tag_268\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13881:13944   */\n      swap4\n      pop\n        /* \"#utility.yul\":13836:13954   */\n      pop\n        /* \"#utility.yul\":13993:13995   */\n      0x40\n        /* \"#utility.yul\":14019:14072   */\n      tag_472\n        /* \"#utility.yul\":14064:14071   */\n      dup8\n        /* \"#utility.yul\":14055:14061   */\n      dup3\n        /* \"#utility.yul\":14044:14053   */\n      dup9\n        /* \"#utility.yul\":14040:14062   */\n      add\n        /* \"#utility.yul\":14019:14072   */\n      tag_263\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":14009:14072   */\n      swap3\n      pop\n        /* \"#utility.yul\":13964:14082   */\n      pop\n        /* \"#utility.yul\":14149:14151   */\n      0x60\n        /* \"#utility.yul\":14138:14147   */\n      dup6\n        /* \"#utility.yul\":14134:14152   */\n      add\n        /* \"#utility.yul\":14121:14153   */\n      calldataload\n        /* \"#utility.yul\":14180:14198   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14172:14178   */\n      dup2\n        /* \"#utility.yul\":14169:14199   */\n      gt\n        /* \"#utility.yul\":14166:14283   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":14202:14281   */\n      tag_474\n      tag_250\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":14166:14283   */\n    tag_473:\n        /* \"#utility.yul\":14307:14369   */\n      tag_475\n        /* \"#utility.yul\":14361:14368   */\n      dup8\n        /* \"#utility.yul\":14352:14358   */\n      dup3\n        /* \"#utility.yul\":14341:14350   */\n      dup9\n        /* \"#utility.yul\":14337:14359   */\n      add\n        /* \"#utility.yul\":14307:14369   */\n      tag_290\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":14297:14369   */\n      swap2\n      pop\n        /* \"#utility.yul\":14092:14379   */\n      pop\n        /* \"#utility.yul\":13443:14386   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14392:14866   */\n    tag_83:\n        /* \"#utility.yul\":14460:14466   */\n      0x00\n        /* \"#utility.yul\":14468:14474   */\n      dup1\n        /* \"#utility.yul\":14517:14519   */\n      0x40\n        /* \"#utility.yul\":14505:14514   */\n      dup4\n        /* \"#utility.yul\":14496:14503   */\n      dup6\n        /* \"#utility.yul\":14492:14515   */\n      sub\n        /* \"#utility.yul\":14488:14520   */\n      slt\n        /* \"#utility.yul\":14485:14604   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":14523:14602   */\n      tag_478\n      tag_249\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":14485:14604   */\n    tag_477:\n        /* \"#utility.yul\":14643:14644   */\n      0x00\n        /* \"#utility.yul\":14668:14721   */\n      tag_479\n        /* \"#utility.yul\":14713:14720   */\n      dup6\n        /* \"#utility.yul\":14704:14710   */\n      dup3\n        /* \"#utility.yul\":14693:14702   */\n      dup7\n        /* \"#utility.yul\":14689:14711   */\n      add\n        /* \"#utility.yul\":14668:14721   */\n      tag_268\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":14658:14721   */\n      swap3\n      pop\n        /* \"#utility.yul\":14614:14731   */\n      pop\n        /* \"#utility.yul\":14770:14772   */\n      0x20\n        /* \"#utility.yul\":14796:14849   */\n      tag_480\n        /* \"#utility.yul\":14841:14848   */\n      dup6\n        /* \"#utility.yul\":14832:14838   */\n      dup3\n        /* \"#utility.yul\":14821:14830   */\n      dup7\n        /* \"#utility.yul\":14817:14839   */\n      add\n        /* \"#utility.yul\":14796:14849   */\n      tag_268\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":14786:14849   */\n      swap2\n      pop\n        /* \"#utility.yul\":14741:14859   */\n      pop\n        /* \"#utility.yul\":14392:14866   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14872:15052   */\n    tag_291:\n        /* \"#utility.yul\":14920:14997   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14917:14918   */\n      0x00\n        /* \"#utility.yul\":14910:14998   */\n      mstore\n        /* \"#utility.yul\":15017:15021   */\n      0x22\n        /* \"#utility.yul\":15014:15015   */\n      0x04\n        /* \"#utility.yul\":15007:15022   */\n      mstore\n        /* \"#utility.yul\":15041:15045   */\n      0x24\n        /* \"#utility.yul\":15038:15039   */\n      0x00\n        /* \"#utility.yul\":15031:15046   */\n      revert\n        /* \"#utility.yul\":15058:15378   */\n    tag_93:\n        /* \"#utility.yul\":15102:15108   */\n      0x00\n        /* \"#utility.yul\":15139:15140   */\n      0x02\n        /* \"#utility.yul\":15133:15137   */\n      dup3\n        /* \"#utility.yul\":15129:15141   */\n      div\n        /* \"#utility.yul\":15119:15141   */\n      swap1\n      pop\n        /* \"#utility.yul\":15186:15187   */\n      0x01\n        /* \"#utility.yul\":15180:15184   */\n      dup3\n        /* \"#utility.yul\":15176:15188   */\n      and\n        /* \"#utility.yul\":15207:15225   */\n      dup1\n        /* \"#utility.yul\":15197:15278   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":15263:15267   */\n      0x7f\n        /* \"#utility.yul\":15255:15261   */\n      dup3\n        /* \"#utility.yul\":15251:15268   */\n      and\n        /* \"#utility.yul\":15241:15268   */\n      swap2\n      pop\n        /* \"#utility.yul\":15197:15278   */\n    tag_483:\n        /* \"#utility.yul\":15325:15327   */\n      0x20\n        /* \"#utility.yul\":15317:15323   */\n      dup3\n        /* \"#utility.yul\":15314:15328   */\n      lt\n        /* \"#utility.yul\":15294:15312   */\n      dup2\n        /* \"#utility.yul\":15291:15329   */\n      sub\n        /* \"#utility.yul\":15288:15372   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":15344:15362   */\n      tag_485\n      tag_291\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":15288:15372   */\n    tag_484:\n        /* \"#utility.yul\":15109:15378   */\n      pop\n        /* \"#utility.yul\":15058:15378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15384:15525   */\n    tag_292:\n        /* \"#utility.yul\":15433:15437   */\n      0x00\n        /* \"#utility.yul\":15456:15459   */\n      dup2\n        /* \"#utility.yul\":15448:15459   */\n      swap1\n      pop\n        /* \"#utility.yul\":15479:15482   */\n      dup2\n        /* \"#utility.yul\":15476:15477   */\n      0x00\n        /* \"#utility.yul\":15469:15483   */\n      mstore\n        /* \"#utility.yul\":15513:15517   */\n      0x20\n        /* \"#utility.yul\":15510:15511   */\n      0x00\n        /* \"#utility.yul\":15500:15518   */\n      keccak256\n        /* \"#utility.yul\":15492:15518   */\n      swap1\n      pop\n        /* \"#utility.yul\":15384:15525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15531:15624   */\n    tag_293:\n        /* \"#utility.yul\":15568:15574   */\n      0x00\n        /* \"#utility.yul\":15615:15617   */\n      0x20\n        /* \"#utility.yul\":15610:15612   */\n      0x1f\n        /* \"#utility.yul\":15603:15608   */\n      dup4\n        /* \"#utility.yul\":15599:15613   */\n      add\n        /* \"#utility.yul\":15595:15618   */\n      div\n        /* \"#utility.yul\":15585:15618   */\n      swap1\n      pop\n        /* \"#utility.yul\":15531:15624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15630:15737   */\n    tag_294:\n        /* \"#utility.yul\":15674:15682   */\n      0x00\n        /* \"#utility.yul\":15724:15729   */\n      dup3\n        /* \"#utility.yul\":15718:15722   */\n      dup3\n        /* \"#utility.yul\":15714:15730   */\n      shl\n        /* \"#utility.yul\":15693:15730   */\n      swap1\n      pop\n        /* \"#utility.yul\":15630:15737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15743:16136   */\n    tag_295:\n        /* \"#utility.yul\":15812:15818   */\n      0x00\n        /* \"#utility.yul\":15862:15863   */\n      0x08\n        /* \"#utility.yul\":15850:15860   */\n      dup4\n        /* \"#utility.yul\":15846:15864   */\n      mul\n        /* \"#utility.yul\":15885:15982   */\n      tag_490\n        /* \"#utility.yul\":15915:15981   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15904:15913   */\n      dup3\n        /* \"#utility.yul\":15885:15982   */\n      tag_294\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":16003:16042   */\n      tag_491\n        /* \"#utility.yul\":16033:16041   */\n      dup7\n        /* \"#utility.yul\":16022:16031   */\n      dup4\n        /* \"#utility.yul\":16003:16042   */\n      tag_294\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":15991:16042   */\n      swap6\n      pop\n        /* \"#utility.yul\":16075:16079   */\n      dup1\n        /* \"#utility.yul\":16071:16080   */\n      not\n        /* \"#utility.yul\":16064:16069   */\n      dup5\n        /* \"#utility.yul\":16060:16081   */\n      and\n        /* \"#utility.yul\":16051:16081   */\n      swap4\n      pop\n        /* \"#utility.yul\":16124:16128   */\n      dup1\n        /* \"#utility.yul\":16114:16122   */\n      dup7\n        /* \"#utility.yul\":16110:16129   */\n      and\n        /* \"#utility.yul\":16103:16108   */\n      dup5\n        /* \"#utility.yul\":16100:16130   */\n      or\n        /* \"#utility.yul\":16090:16130   */\n      swap3\n      pop\n        /* \"#utility.yul\":15819:16136   */\n      pop\n      pop\n        /* \"#utility.yul\":15743:16136   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16142:16202   */\n    tag_296:\n        /* \"#utility.yul\":16170:16173   */\n      0x00\n        /* \"#utility.yul\":16191:16196   */\n      dup2\n        /* \"#utility.yul\":16184:16196   */\n      swap1\n      pop\n        /* \"#utility.yul\":16142:16202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16208:16350   */\n    tag_297:\n        /* \"#utility.yul\":16258:16267   */\n      0x00\n        /* \"#utility.yul\":16291:16344   */\n      tag_494\n        /* \"#utility.yul\":16309:16343   */\n      tag_495\n        /* \"#utility.yul\":16318:16342   */\n      tag_496\n        /* \"#utility.yul\":16336:16341   */\n      dup5\n        /* \"#utility.yul\":16318:16342   */\n      tag_261\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":16309:16343   */\n      tag_296\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":16291:16344   */\n      tag_261\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":16278:16344   */\n      swap1\n      pop\n        /* \"#utility.yul\":16208:16350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16356:16431   */\n    tag_298:\n        /* \"#utility.yul\":16399:16402   */\n      0x00\n        /* \"#utility.yul\":16420:16425   */\n      dup2\n        /* \"#utility.yul\":16413:16425   */\n      swap1\n      pop\n        /* \"#utility.yul\":16356:16431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16437:16706   */\n    tag_299:\n        /* \"#utility.yul\":16547:16586   */\n      tag_499\n        /* \"#utility.yul\":16578:16585   */\n      dup4\n        /* \"#utility.yul\":16547:16586   */\n      tag_297\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":16608:16699   */\n      tag_500\n        /* \"#utility.yul\":16657:16698   */\n      tag_501\n        /* \"#utility.yul\":16681:16697   */\n      dup3\n        /* \"#utility.yul\":16657:16698   */\n      tag_298\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":16649:16655   */\n      dup5\n        /* \"#utility.yul\":16642:16646   */\n      dup5\n        /* \"#utility.yul\":16636:16647   */\n      sload\n        /* \"#utility.yul\":16608:16699   */\n      tag_295\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":16602:16606   */\n      dup3\n        /* \"#utility.yul\":16595:16700   */\n      sstore\n        /* \"#utility.yul\":16513:16706   */\n      pop\n        /* \"#utility.yul\":16437:16706   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16712:16785   */\n    tag_300:\n        /* \"#utility.yul\":16757:16760   */\n      0x00\n        /* \"#utility.yul\":16712:16785   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16791:16980   */\n    tag_301:\n        /* \"#utility.yul\":16868:16900   */\n      tag_504\n      tag_300\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":16909:16974   */\n      tag_505\n        /* \"#utility.yul\":16967:16973   */\n      dup2\n        /* \"#utility.yul\":16959:16965   */\n      dup5\n        /* \"#utility.yul\":16953:16957   */\n      dup5\n        /* \"#utility.yul\":16909:16974   */\n      tag_299\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":16844:16980   */\n      pop\n        /* \"#utility.yul\":16791:16980   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16986:17172   */\n    tag_302:\n        /* \"#utility.yul\":17046:17166   */\n    tag_507:\n        /* \"#utility.yul\":17063:17066   */\n      dup2\n        /* \"#utility.yul\":17056:17061   */\n      dup2\n        /* \"#utility.yul\":17053:17067   */\n      lt\n        /* \"#utility.yul\":17046:17166   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":17117:17156   */\n      tag_510\n        /* \"#utility.yul\":17154:17155   */\n      0x00\n        /* \"#utility.yul\":17147:17152   */\n      dup3\n        /* \"#utility.yul\":17117:17156   */\n      tag_301\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":17090:17091   */\n      0x01\n        /* \"#utility.yul\":17083:17088   */\n      dup2\n        /* \"#utility.yul\":17079:17092   */\n      add\n        /* \"#utility.yul\":17070:17092   */\n      swap1\n      pop\n        /* \"#utility.yul\":17046:17166   */\n      jump(tag_507)\n    tag_509:\n        /* \"#utility.yul\":16986:17172   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17178:17721   */\n    tag_303:\n        /* \"#utility.yul\":17279:17281   */\n      0x1f\n        /* \"#utility.yul\":17274:17277   */\n      dup3\n        /* \"#utility.yul\":17271:17282   */\n      gt\n        /* \"#utility.yul\":17268:17714   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":17313:17351   */\n      tag_513\n        /* \"#utility.yul\":17345:17350   */\n      dup2\n        /* \"#utility.yul\":17313:17351   */\n      tag_292\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":17397:17426   */\n      tag_514\n        /* \"#utility.yul\":17415:17425   */\n      dup5\n        /* \"#utility.yul\":17397:17426   */\n      tag_293\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":17387:17395   */\n      dup2\n        /* \"#utility.yul\":17383:17427   */\n      add\n        /* \"#utility.yul\":17580:17582   */\n      0x20\n        /* \"#utility.yul\":17568:17578   */\n      dup6\n        /* \"#utility.yul\":17565:17583   */\n      lt\n        /* \"#utility.yul\":17562:17611   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":17601:17609   */\n      dup2\n        /* \"#utility.yul\":17586:17609   */\n      swap1\n      pop\n        /* \"#utility.yul\":17562:17611   */\n    tag_515:\n        /* \"#utility.yul\":17624:17704   */\n      tag_516\n        /* \"#utility.yul\":17680:17702   */\n      tag_517\n        /* \"#utility.yul\":17698:17701   */\n      dup6\n        /* \"#utility.yul\":17680:17702   */\n      tag_293\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":17670:17678   */\n      dup4\n        /* \"#utility.yul\":17666:17703   */\n      add\n        /* \"#utility.yul\":17653:17664   */\n      dup3\n        /* \"#utility.yul\":17624:17704   */\n      tag_302\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":17283:17714   */\n      pop\n      pop\n        /* \"#utility.yul\":17268:17714   */\n    tag_512:\n        /* \"#utility.yul\":17178:17721   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17727:17844   */\n    tag_304:\n        /* \"#utility.yul\":17781:17789   */\n      0x00\n        /* \"#utility.yul\":17831:17836   */\n      dup3\n        /* \"#utility.yul\":17825:17829   */\n      dup3\n        /* \"#utility.yul\":17821:17837   */\n      shr\n        /* \"#utility.yul\":17800:17837   */\n      swap1\n      pop\n        /* \"#utility.yul\":17727:17844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17850:18019   */\n    tag_305:\n        /* \"#utility.yul\":17894:17900   */\n      0x00\n        /* \"#utility.yul\":17927:17978   */\n      tag_520\n        /* \"#utility.yul\":17975:17976   */\n      0x00\n        /* \"#utility.yul\":17971:17977   */\n      not\n        /* \"#utility.yul\":17963:17968   */\n      dup5\n        /* \"#utility.yul\":17960:17961   */\n      0x08\n        /* \"#utility.yul\":17956:17969   */\n      mul\n        /* \"#utility.yul\":17927:17978   */\n      tag_304\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":17923:17979   */\n      not\n        /* \"#utility.yul\":18008:18012   */\n      dup1\n        /* \"#utility.yul\":18002:18006   */\n      dup4\n        /* \"#utility.yul\":17998:18013   */\n      and\n        /* \"#utility.yul\":17988:18013   */\n      swap2\n      pop\n        /* \"#utility.yul\":17901:18019   */\n      pop\n        /* \"#utility.yul\":17850:18019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18024:18319   */\n    tag_306:\n        /* \"#utility.yul\":18100:18104   */\n      0x00\n        /* \"#utility.yul\":18246:18275   */\n      tag_522\n        /* \"#utility.yul\":18271:18274   */\n      dup4\n        /* \"#utility.yul\":18265:18269   */\n      dup4\n        /* \"#utility.yul\":18246:18275   */\n      tag_305\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":18238:18275   */\n      swap2\n      pop\n        /* \"#utility.yul\":18308:18311   */\n      dup3\n        /* \"#utility.yul\":18305:18306   */\n      0x02\n        /* \"#utility.yul\":18301:18312   */\n      mul\n        /* \"#utility.yul\":18295:18299   */\n      dup3\n        /* \"#utility.yul\":18292:18313   */\n      or\n        /* \"#utility.yul\":18284:18313   */\n      swap1\n      pop\n        /* \"#utility.yul\":18024:18319   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18324:19719   */\n    tag_111:\n        /* \"#utility.yul\":18441:18478   */\n      tag_524\n        /* \"#utility.yul\":18474:18477   */\n      dup3\n        /* \"#utility.yul\":18441:18478   */\n      tag_256\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":18543:18561   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18535:18541   */\n      dup2\n        /* \"#utility.yul\":18532:18562   */\n      gt\n        /* \"#utility.yul\":18529:18585   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":18565:18583   */\n      tag_526\n      tag_131\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":18529:18585   */\n    tag_525:\n        /* \"#utility.yul\":18609:18647   */\n      tag_527\n        /* \"#utility.yul\":18641:18645   */\n      dup3\n        /* \"#utility.yul\":18635:18646   */\n      sload\n        /* \"#utility.yul\":18609:18647   */\n      tag_93\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":18694:18761   */\n      tag_528\n        /* \"#utility.yul\":18754:18760   */\n      dup3\n        /* \"#utility.yul\":18746:18752   */\n      dup3\n        /* \"#utility.yul\":18740:18744   */\n      dup6\n        /* \"#utility.yul\":18694:18761   */\n      tag_303\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":18788:18789   */\n      0x00\n        /* \"#utility.yul\":18812:18816   */\n      0x20\n        /* \"#utility.yul\":18799:18816   */\n      swap1\n      pop\n        /* \"#utility.yul\":18844:18846   */\n      0x1f\n        /* \"#utility.yul\":18836:18842   */\n      dup4\n        /* \"#utility.yul\":18833:18847   */\n      gt\n        /* \"#utility.yul\":18861:18862   */\n      0x01\n        /* \"#utility.yul\":18856:19474   */\n      dup2\n      eq\n      tag_530\n      jumpi\n        /* \"#utility.yul\":19518:19519   */\n      0x00\n        /* \"#utility.yul\":19535:19541   */\n      dup5\n        /* \"#utility.yul\":19532:19609   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":19584:19593   */\n      dup3\n        /* \"#utility.yul\":19579:19582   */\n      dup8\n        /* \"#utility.yul\":19575:19594   */\n      add\n        /* \"#utility.yul\":19569:19595   */\n      mload\n        /* \"#utility.yul\":19560:19595   */\n      swap1\n      pop\n        /* \"#utility.yul\":19532:19609   */\n    tag_531:\n        /* \"#utility.yul\":19635:19702   */\n      tag_532\n        /* \"#utility.yul\":19695:19701   */\n      dup6\n        /* \"#utility.yul\":19688:19693   */\n      dup3\n        /* \"#utility.yul\":19635:19702   */\n      tag_306\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":19629:19633   */\n      dup7\n        /* \"#utility.yul\":19622:19703   */\n      sstore\n        /* \"#utility.yul\":19491:19713   */\n      pop\n        /* \"#utility.yul\":18826:19713   */\n      jump(tag_529)\n        /* \"#utility.yul\":18856:19474   */\n    tag_530:\n        /* \"#utility.yul\":18908:18912   */\n      0x1f\n        /* \"#utility.yul\":18904:18913   */\n      not\n        /* \"#utility.yul\":18896:18902   */\n      dup5\n        /* \"#utility.yul\":18892:18914   */\n      and\n        /* \"#utility.yul\":18942:18979   */\n      tag_533\n        /* \"#utility.yul\":18974:18978   */\n      dup7\n        /* \"#utility.yul\":18942:18979   */\n      tag_292\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":19001:19002   */\n      0x00\n        /* \"#utility.yul\":19015:19223   */\n    tag_534:\n        /* \"#utility.yul\":19029:19036   */\n      dup3\n        /* \"#utility.yul\":19026:19027   */\n      dup2\n        /* \"#utility.yul\":19023:19037   */\n      lt\n        /* \"#utility.yul\":19015:19223   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":19108:19117   */\n      dup5\n        /* \"#utility.yul\":19103:19106   */\n      dup10\n        /* \"#utility.yul\":19099:19118   */\n      add\n        /* \"#utility.yul\":19093:19119   */\n      mload\n        /* \"#utility.yul\":19085:19091   */\n      dup3\n        /* \"#utility.yul\":19078:19120   */\n      sstore\n        /* \"#utility.yul\":19159:19160   */\n      0x01\n        /* \"#utility.yul\":19151:19157   */\n      dup3\n        /* \"#utility.yul\":19147:19161   */\n      add\n        /* \"#utility.yul\":19137:19161   */\n      swap2\n      pop\n        /* \"#utility.yul\":19206:19208   */\n      0x20\n        /* \"#utility.yul\":19195:19204   */\n      dup6\n        /* \"#utility.yul\":19191:19209   */\n      add\n        /* \"#utility.yul\":19178:19209   */\n      swap5\n      pop\n        /* \"#utility.yul\":19052:19056   */\n      0x20\n        /* \"#utility.yul\":19049:19050   */\n      dup2\n        /* \"#utility.yul\":19045:19057   */\n      add\n        /* \"#utility.yul\":19040:19057   */\n      swap1\n      pop\n        /* \"#utility.yul\":19015:19223   */\n      jump(tag_534)\n    tag_536:\n        /* \"#utility.yul\":19251:19257   */\n      dup7\n        /* \"#utility.yul\":19242:19249   */\n      dup4\n        /* \"#utility.yul\":19239:19258   */\n      lt\n        /* \"#utility.yul\":19236:19415   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":19309:19318   */\n      dup5\n        /* \"#utility.yul\":19304:19307   */\n      dup10\n        /* \"#utility.yul\":19300:19319   */\n      add\n        /* \"#utility.yul\":19294:19320   */\n      mload\n        /* \"#utility.yul\":19352:19400   */\n      tag_538\n        /* \"#utility.yul\":19394:19398   */\n      0x1f\n        /* \"#utility.yul\":19386:19392   */\n      dup10\n        /* \"#utility.yul\":19382:19399   */\n      and\n        /* \"#utility.yul\":19371:19380   */\n      dup3\n        /* \"#utility.yul\":19352:19400   */\n      tag_305\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":19344:19350   */\n      dup4\n        /* \"#utility.yul\":19337:19401   */\n      sstore\n        /* \"#utility.yul\":19259:19415   */\n      pop\n        /* \"#utility.yul\":19236:19415   */\n    tag_537:\n        /* \"#utility.yul\":19461:19462   */\n      0x01\n        /* \"#utility.yul\":19457:19458   */\n      0x02\n        /* \"#utility.yul\":19449:19455   */\n      dup9\n        /* \"#utility.yul\":19445:19459   */\n      mul\n        /* \"#utility.yul\":19441:19463   */\n      add\n        /* \"#utility.yul\":19435:19439   */\n      dup9\n        /* \"#utility.yul\":19428:19464   */\n      sstore\n        /* \"#utility.yul\":18863:19474   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18826:19713   */\n    tag_529:\n      pop\n        /* \"#utility.yul\":18416:19719   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18324:19719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19725:19905   */\n    tag_307:\n        /* \"#utility.yul\":19773:19850   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19770:19771   */\n      0x00\n        /* \"#utility.yul\":19763:19851   */\n      mstore\n        /* \"#utility.yul\":19870:19874   */\n      0x11\n        /* \"#utility.yul\":19867:19868   */\n      0x04\n        /* \"#utility.yul\":19860:19875   */\n      mstore\n        /* \"#utility.yul\":19894:19898   */\n      0x24\n        /* \"#utility.yul\":19891:19892   */\n      0x00\n        /* \"#utility.yul\":19884:19899   */\n      revert\n        /* \"#utility.yul\":19911:20102   */\n    tag_116:\n        /* \"#utility.yul\":19951:19954   */\n      0x00\n        /* \"#utility.yul\":19970:19990   */\n      tag_541\n        /* \"#utility.yul\":19988:19989   */\n      dup3\n        /* \"#utility.yul\":19970:19990   */\n      tag_261\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":19965:19990   */\n      swap2\n      pop\n        /* \"#utility.yul\":20004:20024   */\n      tag_542\n        /* \"#utility.yul\":20022:20023   */\n      dup4\n        /* \"#utility.yul\":20004:20024   */\n      tag_261\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":19999:20024   */\n      swap3\n      pop\n        /* \"#utility.yul\":20047:20048   */\n      dup3\n        /* \"#utility.yul\":20044:20045   */\n      dup3\n        /* \"#utility.yul\":20040:20049   */\n      add\n        /* \"#utility.yul\":20033:20049   */\n      swap1\n      pop\n        /* \"#utility.yul\":20068:20071   */\n      dup1\n        /* \"#utility.yul\":20065:20066   */\n      dup3\n        /* \"#utility.yul\":20062:20072   */\n      gt\n        /* \"#utility.yul\":20059:20095   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":20075:20093   */\n      tag_544\n      tag_307\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":20059:20095   */\n    tag_543:\n        /* \"#utility.yul\":19911:20102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20108:20550   */\n    tag_125:\n        /* \"#utility.yul\":20257:20261   */\n      0x00\n        /* \"#utility.yul\":20295:20297   */\n      0x60\n        /* \"#utility.yul\":20284:20293   */\n      dup3\n        /* \"#utility.yul\":20280:20298   */\n      add\n        /* \"#utility.yul\":20272:20298   */\n      swap1\n      pop\n        /* \"#utility.yul\":20308:20379   */\n      tag_546\n        /* \"#utility.yul\":20376:20377   */\n      0x00\n        /* \"#utility.yul\":20365:20374   */\n      dup4\n        /* \"#utility.yul\":20361:20378   */\n      add\n        /* \"#utility.yul\":20352:20358   */\n      dup7\n        /* \"#utility.yul\":20308:20379   */\n      tag_266\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":20389:20461   */\n      tag_547\n        /* \"#utility.yul\":20457:20459   */\n      0x20\n        /* \"#utility.yul\":20446:20455   */\n      dup4\n        /* \"#utility.yul\":20442:20460   */\n      add\n        /* \"#utility.yul\":20433:20439   */\n      dup6\n        /* \"#utility.yul\":20389:20461   */\n      tag_285\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":20471:20543   */\n      tag_548\n        /* \"#utility.yul\":20539:20541   */\n      0x40\n        /* \"#utility.yul\":20528:20537   */\n      dup4\n        /* \"#utility.yul\":20524:20542   */\n      add\n        /* \"#utility.yul\":20515:20521   */\n      dup5\n        /* \"#utility.yul\":20471:20543   */\n      tag_266\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":20108:20550   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20556:20736   */\n    tag_144:\n        /* \"#utility.yul\":20604:20681   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20601:20602   */\n      0x00\n        /* \"#utility.yul\":20594:20682   */\n      mstore\n        /* \"#utility.yul\":20701:20705   */\n      0x32\n        /* \"#utility.yul\":20698:20699   */\n      0x04\n        /* \"#utility.yul\":20691:20706   */\n      mstore\n        /* \"#utility.yul\":20725:20729   */\n      0x24\n        /* \"#utility.yul\":20722:20723   */\n      0x00\n        /* \"#utility.yul\":20715:20730   */\n      revert\n        /* \"#utility.yul\":20742:20975   */\n    tag_146:\n        /* \"#utility.yul\":20781:20784   */\n      0x00\n        /* \"#utility.yul\":20804:20828   */\n      tag_551\n        /* \"#utility.yul\":20822:20827   */\n      dup3\n        /* \"#utility.yul\":20804:20828   */\n      tag_261\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":20795:20828   */\n      swap2\n      pop\n        /* \"#utility.yul\":20850:20916   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20843:20848   */\n      dup3\n        /* \"#utility.yul\":20840:20917   */\n      sub\n        /* \"#utility.yul\":20837:20940   */\n      tag_552\n      jumpi\n        /* \"#utility.yul\":20920:20938   */\n      tag_553\n      tag_307\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":20837:20940   */\n    tag_552:\n        /* \"#utility.yul\":20967:20968   */\n      0x01\n        /* \"#utility.yul\":20960:20965   */\n      dup3\n        /* \"#utility.yul\":20956:20969   */\n      add\n        /* \"#utility.yul\":20949:20969   */\n      swap1\n      pop\n        /* \"#utility.yul\":20742:20975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20981:21129   */\n    tag_308:\n        /* \"#utility.yul\":21083:21094   */\n      0x00\n        /* \"#utility.yul\":21120:21123   */\n      dup2\n        /* \"#utility.yul\":21105:21123   */\n      swap1\n      pop\n        /* \"#utility.yul\":20981:21129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21135:21525   */\n    tag_309:\n        /* \"#utility.yul\":21241:21244   */\n      0x00\n        /* \"#utility.yul\":21269:21308   */\n      tag_556\n        /* \"#utility.yul\":21302:21307   */\n      dup3\n        /* \"#utility.yul\":21269:21308   */\n      tag_256\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":21324:21413   */\n      tag_557\n        /* \"#utility.yul\":21406:21412   */\n      dup2\n        /* \"#utility.yul\":21401:21404   */\n      dup6\n        /* \"#utility.yul\":21324:21413   */\n      tag_308\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":21317:21413   */\n      swap4\n      pop\n        /* \"#utility.yul\":21422:21487   */\n      tag_558\n        /* \"#utility.yul\":21480:21486   */\n      dup2\n        /* \"#utility.yul\":21475:21478   */\n      dup6\n        /* \"#utility.yul\":21468:21472   */\n      0x20\n        /* \"#utility.yul\":21461:21466   */\n      dup7\n        /* \"#utility.yul\":21457:21473   */\n      add\n        /* \"#utility.yul\":21422:21487   */\n      tag_258\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":21512:21518   */\n      dup1\n        /* \"#utility.yul\":21507:21510   */\n      dup5\n        /* \"#utility.yul\":21503:21519   */\n      add\n        /* \"#utility.yul\":21496:21519   */\n      swap2\n      pop\n        /* \"#utility.yul\":21245:21525   */\n      pop\n        /* \"#utility.yul\":21135:21525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21555:22429   */\n    tag_310:\n        /* \"#utility.yul\":21658:21661   */\n      0x00\n        /* \"#utility.yul\":21695:21700   */\n      dup2\n        /* \"#utility.yul\":21689:21701   */\n      sload\n        /* \"#utility.yul\":21724:21760   */\n      tag_560\n        /* \"#utility.yul\":21750:21759   */\n      dup2\n        /* \"#utility.yul\":21724:21760   */\n      tag_93\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":21776:21865   */\n      tag_561\n        /* \"#utility.yul\":21858:21864   */\n      dup2\n        /* \"#utility.yul\":21853:21856   */\n      dup7\n        /* \"#utility.yul\":21776:21865   */\n      tag_308\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":21769:21865   */\n      swap5\n      pop\n        /* \"#utility.yul\":21896:21897   */\n      0x01\n        /* \"#utility.yul\":21885:21894   */\n      dup3\n        /* \"#utility.yul\":21881:21898   */\n      and\n        /* \"#utility.yul\":21912:21913   */\n      0x00\n        /* \"#utility.yul\":21907:22073   */\n      dup2\n      eq\n      tag_563\n      jumpi\n        /* \"#utility.yul\":22087:22088   */\n      0x01\n        /* \"#utility.yul\":22082:22423   */\n      dup2\n      eq\n      tag_564\n      jumpi\n        /* \"#utility.yul\":21874:22423   */\n      jump(tag_562)\n        /* \"#utility.yul\":21907:22073   */\n    tag_563:\n        /* \"#utility.yul\":21991:21995   */\n      0xff\n        /* \"#utility.yul\":21987:21996   */\n      not\n        /* \"#utility.yul\":21976:21985   */\n      dup4\n        /* \"#utility.yul\":21972:21997   */\n      and\n        /* \"#utility.yul\":21967:21970   */\n      dup7\n        /* \"#utility.yul\":21960:21998   */\n      mstore\n        /* \"#utility.yul\":22053:22059   */\n      dup2\n        /* \"#utility.yul\":22046:22060   */\n      iszero\n        /* \"#utility.yul\":22039:22061   */\n      iszero\n        /* \"#utility.yul\":22031:22037   */\n      dup3\n        /* \"#utility.yul\":22027:22062   */\n      mul\n        /* \"#utility.yul\":22022:22025   */\n      dup7\n        /* \"#utility.yul\":22018:22063   */\n      add\n        /* \"#utility.yul\":22011:22063   */\n      swap4\n      pop\n        /* \"#utility.yul\":21907:22073   */\n      jump(tag_562)\n        /* \"#utility.yul\":22082:22423   */\n    tag_564:\n        /* \"#utility.yul\":22149:22187   */\n      tag_565\n        /* \"#utility.yul\":22181:22186   */\n      dup6\n        /* \"#utility.yul\":22149:22187   */\n      tag_292\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":22209:22210   */\n      0x00\n        /* \"#utility.yul\":22223:22377   */\n    tag_566:\n        /* \"#utility.yul\":22237:22243   */\n      dup4\n        /* \"#utility.yul\":22234:22235   */\n      dup2\n        /* \"#utility.yul\":22231:22244   */\n      lt\n        /* \"#utility.yul\":22223:22377   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":22311:22318   */\n      dup2\n        /* \"#utility.yul\":22305:22319   */\n      sload\n        /* \"#utility.yul\":22301:22302   */\n      dup2\n        /* \"#utility.yul\":22296:22299   */\n      dup10\n        /* \"#utility.yul\":22292:22303   */\n      add\n        /* \"#utility.yul\":22285:22320   */\n      mstore\n        /* \"#utility.yul\":22361:22362   */\n      0x01\n        /* \"#utility.yul\":22352:22359   */\n      dup3\n        /* \"#utility.yul\":22348:22363   */\n      add\n        /* \"#utility.yul\":22337:22363   */\n      swap2\n      pop\n        /* \"#utility.yul\":22259:22263   */\n      0x20\n        /* \"#utility.yul\":22256:22257   */\n      dup2\n        /* \"#utility.yul\":22252:22264   */\n      add\n        /* \"#utility.yul\":22247:22264   */\n      swap1\n      pop\n        /* \"#utility.yul\":22223:22377   */\n      jump(tag_566)\n    tag_568:\n        /* \"#utility.yul\":22406:22412   */\n      dup4\n        /* \"#utility.yul\":22401:22404   */\n      dup9\n        /* \"#utility.yul\":22397:22413   */\n      add\n        /* \"#utility.yul\":22390:22413   */\n      swap6\n      pop\n        /* \"#utility.yul\":22089:22423   */\n      pop\n      pop\n        /* \"#utility.yul\":21874:22423   */\n    tag_562:\n      pop\n        /* \"#utility.yul\":21662:22429   */\n      pop\n      pop\n        /* \"#utility.yul\":21555:22429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22435:22864   */\n    tag_170:\n        /* \"#utility.yul\":22612:22615   */\n      0x00\n        /* \"#utility.yul\":22634:22729   */\n      tag_570\n        /* \"#utility.yul\":22725:22728   */\n      dup3\n        /* \"#utility.yul\":22716:22722   */\n      dup6\n        /* \"#utility.yul\":22634:22729   */\n      tag_309\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":22627:22729   */\n      swap2\n      pop\n        /* \"#utility.yul\":22746:22838   */\n      tag_571\n        /* \"#utility.yul\":22834:22837   */\n      dup3\n        /* \"#utility.yul\":22825:22831   */\n      dup5\n        /* \"#utility.yul\":22746:22838   */\n      tag_310\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":22739:22838   */\n      swap2\n      pop\n        /* \"#utility.yul\":22855:22858   */\n      dup2\n        /* \"#utility.yul\":22848:22858   */\n      swap1\n      pop\n        /* \"#utility.yul\":22435:22864   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22870:22968   */\n    tag_311:\n        /* \"#utility.yul\":22921:22927   */\n      0x00\n        /* \"#utility.yul\":22955:22960   */\n      dup2\n        /* \"#utility.yul\":22949:22961   */\n      mload\n        /* \"#utility.yul\":22939:22961   */\n      swap1\n      pop\n        /* \"#utility.yul\":22870:22968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22974:23142   */\n    tag_312:\n        /* \"#utility.yul\":23057:23068   */\n      0x00\n        /* \"#utility.yul\":23091:23097   */\n      dup3\n        /* \"#utility.yul\":23086:23089   */\n      dup3\n        /* \"#utility.yul\":23079:23098   */\n      mstore\n        /* \"#utility.yul\":23131:23135   */\n      0x20\n        /* \"#utility.yul\":23126:23129   */\n      dup3\n        /* \"#utility.yul\":23122:23136   */\n      add\n        /* \"#utility.yul\":23107:23136   */\n      swap1\n      pop\n        /* \"#utility.yul\":22974:23142   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23148:23521   */\n    tag_313:\n        /* \"#utility.yul\":23234:23237   */\n      0x00\n        /* \"#utility.yul\":23262:23300   */\n      tag_575\n        /* \"#utility.yul\":23294:23299   */\n      dup3\n        /* \"#utility.yul\":23262:23300   */\n      tag_311\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":23316:23386   */\n      tag_576\n        /* \"#utility.yul\":23379:23385   */\n      dup2\n        /* \"#utility.yul\":23374:23377   */\n      dup6\n        /* \"#utility.yul\":23316:23386   */\n      tag_312\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":23309:23386   */\n      swap4\n      pop\n        /* \"#utility.yul\":23395:23460   */\n      tag_577\n        /* \"#utility.yul\":23453:23459   */\n      dup2\n        /* \"#utility.yul\":23448:23451   */\n      dup6\n        /* \"#utility.yul\":23441:23445   */\n      0x20\n        /* \"#utility.yul\":23434:23439   */\n      dup7\n        /* \"#utility.yul\":23430:23446   */\n      add\n        /* \"#utility.yul\":23395:23460   */\n      tag_258\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":23485:23514   */\n      tag_578\n        /* \"#utility.yul\":23507:23513   */\n      dup2\n        /* \"#utility.yul\":23485:23514   */\n      tag_259\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":23480:23483   */\n      dup5\n        /* \"#utility.yul\":23476:23515   */\n      add\n        /* \"#utility.yul\":23469:23515   */\n      swap2\n      pop\n        /* \"#utility.yul\":23238:23521   */\n      pop\n        /* \"#utility.yul\":23148:23521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23527:24167   */\n    tag_205:\n        /* \"#utility.yul\":23722:23726   */\n      0x00\n        /* \"#utility.yul\":23760:23763   */\n      0x80\n        /* \"#utility.yul\":23749:23758   */\n      dup3\n        /* \"#utility.yul\":23745:23764   */\n      add\n        /* \"#utility.yul\":23737:23764   */\n      swap1\n      pop\n        /* \"#utility.yul\":23774:23845   */\n      tag_580\n        /* \"#utility.yul\":23842:23843   */\n      0x00\n        /* \"#utility.yul\":23831:23840   */\n      dup4\n        /* \"#utility.yul\":23827:23844   */\n      add\n        /* \"#utility.yul\":23818:23824   */\n      dup8\n        /* \"#utility.yul\":23774:23845   */\n      tag_266\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":23855:23927   */\n      tag_581\n        /* \"#utility.yul\":23923:23925   */\n      0x20\n        /* \"#utility.yul\":23912:23921   */\n      dup4\n        /* \"#utility.yul\":23908:23926   */\n      add\n        /* \"#utility.yul\":23899:23905   */\n      dup7\n        /* \"#utility.yul\":23855:23927   */\n      tag_266\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":23937:24009   */\n      tag_582\n        /* \"#utility.yul\":24005:24007   */\n      0x40\n        /* \"#utility.yul\":23994:24003   */\n      dup4\n        /* \"#utility.yul\":23990:24008   */\n      add\n        /* \"#utility.yul\":23981:23987   */\n      dup6\n        /* \"#utility.yul\":23937:24009   */\n      tag_285\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":24056:24065   */\n      dup2\n        /* \"#utility.yul\":24050:24054   */\n      dup2\n        /* \"#utility.yul\":24046:24066   */\n      sub\n        /* \"#utility.yul\":24041:24043   */\n      0x60\n        /* \"#utility.yul\":24030:24039   */\n      dup4\n        /* \"#utility.yul\":24026:24044   */\n      add\n        /* \"#utility.yul\":24019:24067   */\n      mstore\n        /* \"#utility.yul\":24084:24160   */\n      tag_583\n        /* \"#utility.yul\":24155:24159   */\n      dup2\n        /* \"#utility.yul\":24146:24152   */\n      dup5\n        /* \"#utility.yul\":24084:24160   */\n      tag_313\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":24076:24160   */\n      swap1\n      pop\n        /* \"#utility.yul\":23527:24167   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24173:24314   */\n    tag_314:\n        /* \"#utility.yul\":24229:24234   */\n      0x00\n        /* \"#utility.yul\":24260:24266   */\n      dup2\n        /* \"#utility.yul\":24254:24267   */\n      mload\n        /* \"#utility.yul\":24245:24267   */\n      swap1\n      pop\n        /* \"#utility.yul\":24276:24308   */\n      tag_585\n        /* \"#utility.yul\":24302:24307   */\n      dup2\n        /* \"#utility.yul\":24276:24308   */\n      tag_252\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":24173:24314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24320:24669   */\n    tag_208:\n        /* \"#utility.yul\":24389:24395   */\n      0x00\n        /* \"#utility.yul\":24438:24440   */\n      0x20\n        /* \"#utility.yul\":24426:24435   */\n      dup3\n        /* \"#utility.yul\":24417:24424   */\n      dup5\n        /* \"#utility.yul\":24413:24436   */\n      sub\n        /* \"#utility.yul\":24409:24441   */\n      slt\n        /* \"#utility.yul\":24406:24525   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":24444:24523   */\n      tag_588\n      tag_249\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":24406:24525   */\n    tag_587:\n        /* \"#utility.yul\":24564:24565   */\n      0x00\n        /* \"#utility.yul\":24589:24652   */\n      tag_589\n        /* \"#utility.yul\":24644:24651   */\n      dup5\n        /* \"#utility.yul\":24635:24641   */\n      dup3\n        /* \"#utility.yul\":24624:24633   */\n      dup6\n        /* \"#utility.yul\":24620:24642   */\n      add\n        /* \"#utility.yul\":24589:24652   */\n      tag_314\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":24579:24652   */\n      swap2\n      pop\n        /* \"#utility.yul\":24535:24662   */\n      pop\n        /* \"#utility.yul\":24320:24669   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24675:25007   */\n    tag_241:\n        /* \"#utility.yul\":24796:24800   */\n      0x00\n        /* \"#utility.yul\":24834:24836   */\n      0x40\n        /* \"#utility.yul\":24823:24832   */\n      dup3\n        /* \"#utility.yul\":24819:24837   */\n      add\n        /* \"#utility.yul\":24811:24837   */\n      swap1\n      pop\n        /* \"#utility.yul\":24847:24918   */\n      tag_591\n        /* \"#utility.yul\":24915:24916   */\n      0x00\n        /* \"#utility.yul\":24904:24913   */\n      dup4\n        /* \"#utility.yul\":24900:24917   */\n      add\n        /* \"#utility.yul\":24891:24897   */\n      dup6\n        /* \"#utility.yul\":24847:24918   */\n      tag_266\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":24928:25000   */\n      tag_592\n        /* \"#utility.yul\":24996:24998   */\n      0x20\n        /* \"#utility.yul\":24985:24994   */\n      dup4\n        /* \"#utility.yul\":24981:24999   */\n      add\n        /* \"#utility.yul\":24972:24978   */\n      dup5\n        /* \"#utility.yul\":24928:25000   */\n      tag_285\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":24675:25007   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_82b359026e8c4a10545b72abcef5b7323d4ff62dda9910b7e947419e0f56ebc4 68747470733a2f2f626c61636b2d656c6465726c792d776f6c766572696e652d3638352e6d7970696e6174612e636c6f75642f697066732f\n\n    auxdata: 0xa26469706673582212200c330340eed74d6eb949969be5e39f5ab4ed92747f5a74cc53785447b286382164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_338": {
									"entryPoint": null,
									"id": 338,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 106,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 123,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:12",
														"type": ""
													}
												],
												"src": "580:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:12"
															},
															"nodeType": "YulIf",
															"src": "1030:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:12",
														"type": ""
													}
												],
												"src": "874:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:12",
														"type": ""
													}
												],
												"src": "1161:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:12"
															},
															"nodeType": "YulIf",
															"src": "1434:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:12",
														"type": ""
													}
												],
												"src": "1296:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:12",
																"statements": []
															},
															"src": "1701:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:12",
														"type": ""
													}
												],
												"src": "1610:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:12"
															},
															"nodeType": "YulIf",
															"src": "2117:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:12",
														"type": ""
													}
												],
												"src": "1862:434:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:12"
															},
															"nodeType": "YulIf",
															"src": "2399:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:12",
														"type": ""
													}
												],
												"src": "2316:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:12"
															},
															"nodeType": "YulIf",
															"src": "2801:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:12",
														"type": ""
													}
												],
												"src": "2677:853:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:12",
														"type": ""
													}
												],
												"src": "3536:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:12"
															},
															"nodeType": "YulIf",
															"src": "3966:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:12"
															},
															"nodeType": "YulIf",
															"src": "4057:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:12",
														"type": ""
													}
												],
												"src": "3827:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:12",
														"type": ""
													}
												],
												"src": "4153:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:12",
														"type": ""
													}
												],
												"src": "4300:93:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:12",
														"type": ""
													}
												],
												"src": "4399:107:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:12"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:12",
														"type": ""
													}
												],
												"src": "4512:393:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:12",
														"type": ""
													}
												],
												"src": "4911:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:12",
														"type": ""
													}
												],
												"src": "4994:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:12",
														"type": ""
													}
												],
												"src": "5060:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:12",
														"type": ""
													}
												],
												"src": "5208:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:12",
														"type": ""
													}
												],
												"src": "5289:269:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:12",
														"type": ""
													}
												],
												"src": "5564:73:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:12",
														"type": ""
													}
												],
												"src": "5643:189:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:12",
																"statements": []
															},
															"src": "5898:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:12",
														"type": ""
													}
												],
												"src": "5838:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:12",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:12"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:12"
															},
															"nodeType": "YulIf",
															"src": "6120:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:12",
														"type": ""
													}
												],
												"src": "6030:543:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:12",
														"type": ""
													}
												],
												"src": "6579:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:12"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:12",
														"type": ""
													}
												],
												"src": "6702:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:12"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:12",
														"type": ""
													}
												],
												"src": "6876:295:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:12"
															},
															"nodeType": "YulIf",
															"src": "7381:56:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:12"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:12"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:12",
																					"statements": []
																				},
																				"src": "7867:208:12"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:12",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:12"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:12"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:12"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:12"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:12"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:12"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:12"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:12",
														"type": ""
													}
												],
												"src": "7176:1395:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160065534801562000015575f80fd5b50604051620028593803806200285983398181016040528101906200003b9190620001ef565b8181815f90816200004d9190620004a9565b5080600190816200005f9190620004a9565b50505050506200058d565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000cb8262000083565b810181811067ffffffffffffffff82111715620000ed57620000ec62000093565b5b80604052505050565b5f620001016200006a565b90506200010f8282620000c0565b919050565b5f67ffffffffffffffff82111562000131576200013062000093565b5b6200013c8262000083565b9050602081019050919050565b5f5b83811015620001685780820151818401526020810190506200014b565b5f8484015250505050565b5f62000189620001838462000114565b620000f6565b905082815260208101848484011115620001a857620001a76200007f565b5b620001b584828562000149565b509392505050565b5f82601f830112620001d457620001d36200007b565b5b8151620001e684826020860162000173565b91505092915050565b5f806040838503121562000208576200020762000073565b5b5f83015167ffffffffffffffff81111562000228576200022762000077565b5b6200023685828601620001bd565b925050602083015167ffffffffffffffff8111156200025a576200025962000077565b5b6200026885828601620001bd565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002c157607f821691505b602082108103620002d757620002d66200027c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200033b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002fe565b620003478683620002fe565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003916200038b62000385846200035f565b62000368565b6200035f565b9050919050565b5f819050919050565b620003ac8362000371565b620003c4620003bb8262000398565b8484546200030a565b825550505050565b5f90565b620003da620003cc565b620003e7818484620003a1565b505050565b5b818110156200040e57620004025f82620003d0565b600181019050620003ed565b5050565b601f8211156200045d576200042781620002dd565b6200043284620002ef565b8101602085101562000442578190505b6200045a6200045185620002ef565b830182620003ec565b50505b505050565b5f82821c905092915050565b5f6200047f5f198460080262000462565b1980831691505092915050565b5f6200049983836200046e565b9150826002028217905092915050565b620004b48262000272565b67ffffffffffffffff811115620004d057620004cf62000093565b5b620004dc8254620002a9565b620004e982828562000412565b5f60209050601f8311600181146200051f575f84156200050a578287015190505b6200051685826200048c565b86555062000585565b601f1984166200052f86620002dd565b5f5b82811015620005585784890151825560018201915060208501945060208101905062000531565b8683101562000578578489015162000574601f8916826200046e565b8355505b6001600288020188555050505b505050505050565b6122be806200059b5f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80634bf5bf3511610095578063a22cb46511610064578063a22cb46514610281578063b88d4fde1461029d578063c87b56dd146102b9578063e985e9c5146102e9576100f3565b80634bf5bf35146101e55780636352211e1461020357806370a082311461023357806395d89b4114610263576100f3565b8063095ea7b3116100d1578063095ea7b3146101755780630bdc90081461019157806323b872dd146101ad57806342842e0e146101c9576100f3565b806301ffc9a7146100f757806306fdde0314610127578063081812fc14610145575b5f80fd5b610111600480360381019061010c919061157c565b610319565b60405161011e91906115c1565b60405180910390f35b61012f6103fa565b60405161013c9190611664565b60405180910390f35b61015f600480360381019061015a91906116b7565b610489565b60405161016c9190611721565b60405180910390f35b61018f600480360381019061018a9190611764565b6104a4565b005b6101ab60048036038101906101a691906118ce565b6104ba565b005b6101c760048036038101906101c29190611915565b610570565b005b6101e360048036038101906101de9190611915565b61066f565b005b6101ed61068e565b6040516101fa9190611a68565b60405180910390f35b61021d600480360381019061021891906116b7565b6107c0565b60405161022a9190611721565b60405180910390f35b61024d60048036038101906102489190611a88565b6107d1565b60405161025a9190611ac2565b60405180910390f35b61026b610887565b6040516102789190611664565b60405180910390f35b61029b60048036038101906102969190611b05565b610917565b005b6102b760048036038101906102b29190611be1565b61092d565b005b6102d360048036038101906102ce91906116b7565b61094a565b6040516102e09190611664565b60405180910390f35b61030360048036038101906102fe9190611c61565b610993565b60405161031091906115c1565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f357506103f282610a21565b5b9050919050565b60605f805461040890611ccc565b80601f016020809104026020016040519081016040528092919081815260200182805461043490611ccc565b801561047f5780601f106104565761010080835404028352916020019161047f565b820191905f5260205f20905b81548152906001019060200180831161046257829003601f168201915b5050505050905090565b5f61049382610a8a565b5061049d82610b10565b9050919050565b6104b682826104b1610b49565b610b50565b5050565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f20015f9091909190915090816105269190611e99565b508060085f60065481526020019081526020015f2090816105479190611e99565b5061055433600654610b62565b600160065f8282546105669190611f95565b9250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105e0575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105d79190611721565b60405180910390fd5b5f6105f383836105ee610b49565b610c55565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610669578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161066093929190611fc8565b60405180910390fd5b50505050565b61068983838360405180602001604052805f81525061092d565b505050565b60605f60065467ffffffffffffffff8111156106ad576106ac6117aa565b5b6040519080825280602002602001820160405280156106e057816020015b60608152602001906001900390816106cb5790505b5090505f5b6006548110156107b85760085f8281526020019081526020015f20805461070b90611ccc565b80601f016020809104026020016040519081016040528092919081815260200182805461073790611ccc565b80156107825780601f1061075957610100808354040283529160200191610782565b820191905f5260205f20905b81548152906001019060200180831161076557829003601f168201915b505050505082828151811061079a57610799611ffd565b5b602002602001018190525080806107b09061202a565b9150506106e5565b508091505090565b5f6107ca82610a8a565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610842575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108399190611721565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461089690611ccc565b80601f01602080910402602001604051908101604052809291908181526020018280546108c290611ccc565b801561090d5780601f106108e45761010080835404028352916020019161090d565b820191905f5260205f20905b8154815290600101906020018083116108f057829003601f168201915b5050505050905090565b610929610922610b49565b8383610e60565b5050565b610938848484610570565b61094484848484610fc9565b50505050565b60605f61095561117b565b90508060085f60065481526020019081526020015f2060405160200161097c92919061212b565b604051602081830303815290604052915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610a958361119b565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b0757826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610afe9190611ac2565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610b5d83838360016111d4565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bd2575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610bc99190611721565b60405180910390fd5b5f610bde83835f610c55565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c50575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610c479190611721565b60405180910390fd5b505050565b5f80610c608461119b565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610ca157610ca0818486611393565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d2c57610ce05f855f806111d4565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610dab57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ed057816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610ec79190611721565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fbc91906115c1565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611175578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261100c610b49565b8685856040518563ffffffff1660e01b815260040161102e94939291906121a0565b6020604051808303815f875af192505050801561106957506040513d601f19601f8201168201806040525081019061106691906121fe565b60015b6110ea573d805f8114611097576040519150601f19603f3d011682016040523d82523d5f602084013e61109c565b606091505b505f8151036110e257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110d99190611721565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461117357836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161116a9190611721565b60405180910390fd5b505b50505050565b606060405180606001604052806038815260200161225160389139905090565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061120c57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561133e575f61121b84610a8a565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561128557508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561129857506112968184610993565b155b156112da57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016112d19190611721565b60405180910390fd5b811561133c57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61139e838383611456565b611451575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361141257806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016114099190611ac2565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611448929190612229565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561150d57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806114ce57506114cd8484610993565b5b8061150c57508273ffffffffffffffffffffffffffffffffffffffff166114f483610b10565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61155b81611527565b8114611565575f80fd5b50565b5f8135905061157681611552565b92915050565b5f602082840312156115915761159061151f565b5b5f61159e84828501611568565b91505092915050565b5f8115159050919050565b6115bb816115a7565b82525050565b5f6020820190506115d45f8301846115b2565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156116115780820151818401526020810190506115f6565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611636826115da565b61164081856115e4565b93506116508185602086016115f4565b6116598161161c565b840191505092915050565b5f6020820190508181035f83015261167c818461162c565b905092915050565b5f819050919050565b61169681611684565b81146116a0575f80fd5b50565b5f813590506116b18161168d565b92915050565b5f602082840312156116cc576116cb61151f565b5b5f6116d9848285016116a3565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61170b826116e2565b9050919050565b61171b81611701565b82525050565b5f6020820190506117345f830184611712565b92915050565b61174381611701565b811461174d575f80fd5b50565b5f8135905061175e8161173a565b92915050565b5f806040838503121561177a5761177961151f565b5b5f61178785828601611750565b9250506020611798858286016116a3565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6117e08261161c565b810181811067ffffffffffffffff821117156117ff576117fe6117aa565b5b80604052505050565b5f611811611516565b905061181d82826117d7565b919050565b5f67ffffffffffffffff82111561183c5761183b6117aa565b5b6118458261161c565b9050602081019050919050565b828183375f83830152505050565b5f61187261186d84611822565b611808565b90508281526020810184848401111561188e5761188d6117a6565b5b611899848285611852565b509392505050565b5f82601f8301126118b5576118b46117a2565b5b81356118c5848260208601611860565b91505092915050565b5f602082840312156118e3576118e261151f565b5b5f82013567ffffffffffffffff811115611900576118ff611523565b5b61190c848285016118a1565b91505092915050565b5f805f6060848603121561192c5761192b61151f565b5b5f61193986828701611750565b935050602061194a86828701611750565b925050604061195b868287016116a3565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f82825260208201905092915050565b5f6119a8826115da565b6119b2818561198e565b93506119c28185602086016115f4565b6119cb8161161c565b840191505092915050565b5f6119e1838361199e565b905092915050565b5f602082019050919050565b5f6119ff82611965565b611a09818561196f565b935083602082028501611a1b8561197f565b805f5b85811015611a565784840389528151611a3785826119d6565b9450611a42836119e9565b925060208a01995050600181019050611a1e565b50829750879550505050505092915050565b5f6020820190508181035f830152611a8081846119f5565b905092915050565b5f60208284031215611a9d57611a9c61151f565b5b5f611aaa84828501611750565b91505092915050565b611abc81611684565b82525050565b5f602082019050611ad55f830184611ab3565b92915050565b611ae4816115a7565b8114611aee575f80fd5b50565b5f81359050611aff81611adb565b92915050565b5f8060408385031215611b1b57611b1a61151f565b5b5f611b2885828601611750565b9250506020611b3985828601611af1565b9150509250929050565b5f67ffffffffffffffff821115611b5d57611b5c6117aa565b5b611b668261161c565b9050602081019050919050565b5f611b85611b8084611b43565b611808565b905082815260208101848484011115611ba157611ba06117a6565b5b611bac848285611852565b509392505050565b5f82601f830112611bc857611bc76117a2565b5b8135611bd8848260208601611b73565b91505092915050565b5f805f8060808587031215611bf957611bf861151f565b5b5f611c0687828801611750565b9450506020611c1787828801611750565b9350506040611c28878288016116a3565b925050606085013567ffffffffffffffff811115611c4957611c48611523565b5b611c5587828801611bb4565b91505092959194509250565b5f8060408385031215611c7757611c7661151f565b5b5f611c8485828601611750565b9250506020611c9585828601611750565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ce357607f821691505b602082108103611cf657611cf5611c9f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611d587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611d1d565b611d628683611d1d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611d9d611d98611d9384611684565b611d7a565b611684565b9050919050565b5f819050919050565b611db683611d83565b611dca611dc282611da4565b848454611d29565b825550505050565b5f90565b611dde611dd2565b611de9818484611dad565b505050565b5b81811015611e0c57611e015f82611dd6565b600181019050611def565b5050565b601f821115611e5157611e2281611cfc565b611e2b84611d0e565b81016020851015611e3a578190505b611e4e611e4685611d0e565b830182611dee565b50505b505050565b5f82821c905092915050565b5f611e715f1984600802611e56565b1980831691505092915050565b5f611e898383611e62565b9150826002028217905092915050565b611ea2826115da565b67ffffffffffffffff811115611ebb57611eba6117aa565b5b611ec58254611ccc565b611ed0828285611e10565b5f60209050601f831160018114611f01575f8415611eef578287015190505b611ef98582611e7e565b865550611f60565b601f198416611f0f86611cfc565b5f5b82811015611f3657848901518255600182019150602085019450602081019050611f11565b86831015611f535784890151611f4f601f891682611e62565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f9f82611684565b9150611faa83611684565b9250828201905080821115611fc257611fc1611f68565b5b92915050565b5f606082019050611fdb5f830186611712565b611fe86020830185611ab3565b611ff56040830184611712565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61203482611684565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361206657612065611f68565b5b600182019050919050565b5f81905092915050565b5f612085826115da565b61208f8185612071565b935061209f8185602086016115f4565b80840191505092915050565b5f81546120b781611ccc565b6120c18186612071565b9450600182165f81146120db57600181146120f057612122565b60ff1983168652811515820286019350612122565b6120f985611cfc565b5f5b8381101561211a578154818901526001820191506020810190506120fb565b838801955050505b50505092915050565b5f612136828561207b565b915061214282846120ab565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6121728261214e565b61217c8185612158565b935061218c8185602086016115f4565b6121958161161c565b840191505092915050565b5f6080820190506121b35f830187611712565b6121c06020830186611712565b6121cd6040830185611ab3565b81810360608301526121df8184612168565b905095945050505050565b5f815190506121f881611552565b92915050565b5f602082840312156122135761221261151f565b5b5f612220848285016121ea565b91505092915050565b5f60408201905061223c5f830185611712565b6122496020830184611ab3565b939250505056fe68747470733a2f2f626c61636b2d656c6465726c792d776f6c766572696e652d3638352e6d7970696e6174612e636c6f75642f697066732fa26469706673582212200c330340eed74d6eb949969be5e39f5ab4ed92747f5a74cc53785447b286382164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2859 CODESIZE SUB DUP1 PUSH3 0x2859 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3B SWAP2 SWAP1 PUSH3 0x1EF JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x4D SWAP2 SWAP1 PUSH3 0x4A9 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5F SWAP2 SWAP1 PUSH3 0x4A9 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x58D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0xCB DUP3 PUSH3 0x83 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xED JUMPI PUSH3 0xEC PUSH3 0x93 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x101 PUSH3 0x6A JUMP JUMPDEST SWAP1 POP PUSH3 0x10F DUP3 DUP3 PUSH3 0xC0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x131 JUMPI PUSH3 0x130 PUSH3 0x93 JUMP JUMPDEST JUMPDEST PUSH3 0x13C DUP3 PUSH3 0x83 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x168 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14B JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x189 PUSH3 0x183 DUP5 PUSH3 0x114 JUMP JUMPDEST PUSH3 0xF6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A8 JUMPI PUSH3 0x1A7 PUSH3 0x7F JUMP JUMPDEST JUMPDEST PUSH3 0x1B5 DUP5 DUP3 DUP6 PUSH3 0x149 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1D4 JUMPI PUSH3 0x1D3 PUSH3 0x7B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1E6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x173 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x208 JUMPI PUSH3 0x207 PUSH3 0x73 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x228 JUMPI PUSH3 0x227 PUSH3 0x77 JUMP JUMPDEST JUMPDEST PUSH3 0x236 DUP6 DUP3 DUP7 ADD PUSH3 0x1BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x25A JUMPI PUSH3 0x259 PUSH3 0x77 JUMP JUMPDEST JUMPDEST PUSH3 0x268 DUP6 DUP3 DUP7 ADD PUSH3 0x1BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2C1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2D7 JUMPI PUSH3 0x2D6 PUSH3 0x27C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x33B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2FE JUMP JUMPDEST PUSH3 0x347 DUP7 DUP4 PUSH3 0x2FE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x391 PUSH3 0x38B PUSH3 0x385 DUP5 PUSH3 0x35F JUMP JUMPDEST PUSH3 0x368 JUMP JUMPDEST PUSH3 0x35F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3AC DUP4 PUSH3 0x371 JUMP JUMPDEST PUSH3 0x3C4 PUSH3 0x3BB DUP3 PUSH3 0x398 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x30A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x3DA PUSH3 0x3CC JUMP JUMPDEST PUSH3 0x3E7 DUP2 DUP5 DUP5 PUSH3 0x3A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x40E JUMPI PUSH3 0x402 PUSH0 DUP3 PUSH3 0x3D0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x45D JUMPI PUSH3 0x427 DUP2 PUSH3 0x2DD JUMP JUMPDEST PUSH3 0x432 DUP5 PUSH3 0x2EF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x442 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x45A PUSH3 0x451 DUP6 PUSH3 0x2EF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3EC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x47F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x462 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x499 DUP4 DUP4 PUSH3 0x46E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4B4 DUP3 PUSH3 0x272 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4D0 JUMPI PUSH3 0x4CF PUSH3 0x93 JUMP JUMPDEST JUMPDEST PUSH3 0x4DC DUP3 SLOAD PUSH3 0x2A9 JUMP JUMPDEST PUSH3 0x4E9 DUP3 DUP3 DUP6 PUSH3 0x412 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x51F JUMPI PUSH0 DUP5 ISZERO PUSH3 0x50A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x516 DUP6 DUP3 PUSH3 0x48C JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x585 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x52F DUP7 PUSH3 0x2DD JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x558 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x531 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x574 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x46E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x22BE DUP1 PUSH3 0x59B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BF5BF35 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2E9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x4BF5BF35 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x263 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xBDC9008 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x157C JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x18CE JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST PUSH2 0x917 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E3 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F3 JUMPI POP PUSH2 0x3F2 DUP3 PUSH2 0xA21 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x408 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x434 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x456 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x462 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x493 DUP3 PUSH2 0xA8A JUMP JUMPDEST POP PUSH2 0x49D DUP3 PUSH2 0xB10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B6 DUP3 DUP3 PUSH2 0x4B1 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 DUP2 PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST POP DUP1 PUSH1 0x8 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST POP PUSH2 0x554 CALLER PUSH1 0x6 SLOAD PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x1F95 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5F3 DUP4 DUP4 PUSH2 0x5EE PUSH2 0xB49 JUMP JUMPDEST PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x669 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x660 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x689 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x92D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6AD JUMPI PUSH2 0x6AC PUSH2 0x17AA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6E0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x6CB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x8 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x70B SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x737 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x782 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x759 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x782 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x765 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x79A JUMPI PUSH2 0x799 PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x7B0 SWAP1 PUSH2 0x202A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6E5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x7CA DUP3 PUSH2 0xA8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x842 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x896 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8C2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x90D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x90D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x929 PUSH2 0x922 PUSH2 0xB49 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE60 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x938 DUP5 DUP5 DUP5 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x944 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFC9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x955 PUSH2 0x117B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x97C SWAP3 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA95 DUP4 PUSH2 0x119B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB07 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB5D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBDE DUP4 DUP4 PUSH0 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC50 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC60 DUP5 PUSH2 0x119B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA1 JUMPI PUSH2 0xCA0 DUP2 DUP5 DUP7 PUSH2 0x1393 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD2C JUMPI PUSH2 0xCE0 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDAB JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED0 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC7 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1175 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x100C PUSH2 0xB49 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1069 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1066 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10EA JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x109C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x10E2 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1173 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116A SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2251 PUSH1 0x38 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x120C JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x133E JUMPI PUSH0 PUSH2 0x121B DUP5 PUSH2 0xA8A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1285 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1298 JUMPI POP PUSH2 0x1296 DUP2 DUP5 PUSH2 0x993 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x12DA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D1 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x133C JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x139E DUP4 DUP4 DUP4 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x1451 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1412 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1409 SWAP2 SWAP1 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1448 SWAP3 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x150D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x14CE JUMPI POP PUSH2 0x14CD DUP5 DUP5 PUSH2 0x993 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x150C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14F4 DUP4 PUSH2 0xB10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x155B DUP2 PUSH2 0x1527 JUMP JUMPDEST DUP2 EQ PUSH2 0x1565 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1576 DUP2 PUSH2 0x1552 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1591 JUMPI PUSH2 0x1590 PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x159E DUP5 DUP3 DUP6 ADD PUSH2 0x1568 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BB DUP2 PUSH2 0x15A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D4 PUSH0 DUP4 ADD DUP5 PUSH2 0x15B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1611 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15F6 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1636 DUP3 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x1640 DUP2 DUP6 PUSH2 0x15E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1650 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x1659 DUP2 PUSH2 0x161C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x167C DUP2 DUP5 PUSH2 0x162C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1696 DUP2 PUSH2 0x1684 JUMP JUMPDEST DUP2 EQ PUSH2 0x16A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B1 DUP2 PUSH2 0x168D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CC JUMPI PUSH2 0x16CB PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D9 DUP5 DUP3 DUP6 ADD PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x170B DUP3 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171B DUP2 PUSH2 0x1701 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1734 PUSH0 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1743 DUP2 PUSH2 0x1701 JUMP JUMPDEST DUP2 EQ PUSH2 0x174D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x175E DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1787 DUP6 DUP3 DUP7 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1798 DUP6 DUP3 DUP7 ADD PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x17E0 DUP3 PUSH2 0x161C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17FF JUMPI PUSH2 0x17FE PUSH2 0x17AA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1811 PUSH2 0x1516 JUMP JUMPDEST SWAP1 POP PUSH2 0x181D DUP3 DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x183C JUMPI PUSH2 0x183B PUSH2 0x17AA JUMP JUMPDEST JUMPDEST PUSH2 0x1845 DUP3 PUSH2 0x161C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1872 PUSH2 0x186D DUP5 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x1808 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x188E JUMPI PUSH2 0x188D PUSH2 0x17A6 JUMP JUMPDEST JUMPDEST PUSH2 0x1899 DUP5 DUP3 DUP6 PUSH2 0x1852 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18B5 JUMPI PUSH2 0x18B4 PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18C5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1860 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E3 JUMPI PUSH2 0x18E2 PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1900 JUMPI PUSH2 0x18FF PUSH2 0x1523 JUMP JUMPDEST JUMPDEST PUSH2 0x190C DUP5 DUP3 DUP6 ADD PUSH2 0x18A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x192C JUMPI PUSH2 0x192B PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1939 DUP7 DUP3 DUP8 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x194A DUP7 DUP3 DUP8 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x195B DUP7 DUP3 DUP8 ADD PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19A8 DUP3 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x19B2 DUP2 DUP6 PUSH2 0x198E JUMP JUMPDEST SWAP4 POP PUSH2 0x19C2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x19CB DUP2 PUSH2 0x161C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19E1 DUP4 DUP4 PUSH2 0x199E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FF DUP3 PUSH2 0x1965 JUMP JUMPDEST PUSH2 0x1A09 DUP2 DUP6 PUSH2 0x196F JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x1A1B DUP6 PUSH2 0x197F JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A56 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1A37 DUP6 DUP3 PUSH2 0x19D6 JUMP JUMPDEST SWAP5 POP PUSH2 0x1A42 DUP4 PUSH2 0x19E9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A1E JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A80 DUP2 DUP5 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A9D JUMPI PUSH2 0x1A9C PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AAA DUP5 DUP3 DUP6 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ABC DUP2 PUSH2 0x1684 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AE4 DUP2 PUSH2 0x15A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AFF DUP2 PUSH2 0x1ADB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1B JUMPI PUSH2 0x1B1A PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B28 DUP6 DUP3 DUP7 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B39 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B5D JUMPI PUSH2 0x1B5C PUSH2 0x17AA JUMP JUMPDEST JUMPDEST PUSH2 0x1B66 DUP3 PUSH2 0x161C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B85 PUSH2 0x1B80 DUP5 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x1808 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BA1 JUMPI PUSH2 0x1BA0 PUSH2 0x17A6 JUMP JUMPDEST JUMPDEST PUSH2 0x1BAC DUP5 DUP3 DUP6 PUSH2 0x1852 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BD8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B73 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C06 DUP8 DUP3 DUP9 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C17 DUP8 DUP3 DUP9 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C28 DUP8 DUP3 DUP9 ADD PUSH2 0x16A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C49 JUMPI PUSH2 0x1C48 PUSH2 0x1523 JUMP JUMPDEST JUMPDEST PUSH2 0x1C55 DUP8 DUP3 DUP9 ADD PUSH2 0x1BB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C77 JUMPI PUSH2 0x1C76 PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C84 DUP6 DUP3 DUP7 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C95 DUP6 DUP3 DUP7 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CE3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CF6 JUMPI PUSH2 0x1CF5 PUSH2 0x1C9F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1D58 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1D1D JUMP JUMPDEST PUSH2 0x1D62 DUP7 DUP4 PUSH2 0x1D1D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D9D PUSH2 0x1D98 PUSH2 0x1D93 DUP5 PUSH2 0x1684 JUMP JUMPDEST PUSH2 0x1D7A JUMP JUMPDEST PUSH2 0x1684 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB6 DUP4 PUSH2 0x1D83 JUMP JUMPDEST PUSH2 0x1DCA PUSH2 0x1DC2 DUP3 PUSH2 0x1DA4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1D29 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1DDE PUSH2 0x1DD2 JUMP JUMPDEST PUSH2 0x1DE9 DUP2 DUP5 DUP5 PUSH2 0x1DAD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E0C JUMPI PUSH2 0x1E01 PUSH0 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1E51 JUMPI PUSH2 0x1E22 DUP2 PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0x1E2B DUP5 PUSH2 0x1D0E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1E3A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1E4E PUSH2 0x1E46 DUP6 PUSH2 0x1D0E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1DEE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E71 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1E56 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E89 DUP4 DUP4 PUSH2 0x1E62 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EA2 DUP3 PUSH2 0x15DA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EBB JUMPI PUSH2 0x1EBA PUSH2 0x17AA JUMP JUMPDEST JUMPDEST PUSH2 0x1EC5 DUP3 SLOAD PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x1ED0 DUP3 DUP3 DUP6 PUSH2 0x1E10 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1F01 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1EEF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1EF9 DUP6 DUP3 PUSH2 0x1E7E JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1F0F DUP7 PUSH2 0x1CFC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F36 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F11 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1F53 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1F4F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1E62 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F9F DUP3 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAA DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FC2 JUMPI PUSH2 0x1FC1 PUSH2 0x1F68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FDB PUSH0 DUP4 ADD DUP7 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x1FE8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AB3 JUMP JUMPDEST PUSH2 0x1FF5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2034 DUP3 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2066 JUMPI PUSH2 0x2065 PUSH2 0x1F68 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2085 DUP3 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x208F DUP2 DUP6 PUSH2 0x2071 JUMP JUMPDEST SWAP4 POP PUSH2 0x209F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15F4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x20B7 DUP2 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x20C1 DUP2 DUP7 PUSH2 0x2071 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x20DB JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x20F0 JUMPI PUSH2 0x2122 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x2122 JUMP JUMPDEST PUSH2 0x20F9 DUP6 PUSH2 0x1CFC JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x211A JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20FB JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2136 DUP3 DUP6 PUSH2 0x207B JUMP JUMPDEST SWAP2 POP PUSH2 0x2142 DUP3 DUP5 PUSH2 0x20AB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2172 DUP3 PUSH2 0x214E JUMP JUMPDEST PUSH2 0x217C DUP2 DUP6 PUSH2 0x2158 JUMP JUMPDEST SWAP4 POP PUSH2 0x218C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x2195 DUP2 PUSH2 0x161C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x21B3 PUSH0 DUP4 ADD DUP8 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x21C0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x21CD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AB3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x21DF DUP2 DUP5 PUSH2 0x2168 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21F8 DUP2 PUSH2 0x1552 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2213 JUMPI PUSH2 0x2212 PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2220 DUP5 DUP3 DUP6 ADD PUSH2 0x21EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x223C PUSH0 DUP4 ADD DUP6 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x2249 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH9 0x747470733A2F2F626C PUSH2 0x636B 0x2D PUSH6 0x6C6465726C79 0x2D PUSH24 0x6F6C766572696E652D3638352E6D7970696E6174612E636C PUSH16 0x75642F697066732FA264697066735822 SLT KECCAK256 0xC CALLER SUB BLOCKHASH 0xEE 0xD7 0x4D PUSH15 0xB949969BE5E39F5AB4ED92747F5A74 0xCC MSTORE8 PUSH25 0x5447B286382164736F6C634300081400330000000000000000 ",
							"sourceMap": "133:1106:0:-:0;;;181:1;163:19;;277:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;340:5;347:7;2446:5:2;2438;:13;;;;;;:::i;:::-;;2471:7;2461;:17;;;;;;:::i;:::-;;2372:113;;277:80:0;;133:1106;;7:75:12;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;133:1106:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1080": {
									"entryPoint": 2896,
									"id": 1080,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1146": {
									"entryPoint": 4564,
									"id": 1146,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_90": {
									"entryPoint": 4475,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_728": {
									"entryPoint": 5011,
									"id": 728,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1276": {
									"entryPoint": 4041,
									"id": 1276,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_655": {
									"entryPoint": 2832,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_691": {
									"entryPoint": 5206,
									"id": 691,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_884": {
									"entryPoint": 2914,
									"id": 884,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1452": {
									"entryPoint": 2889,
									"id": 1452,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_642": {
									"entryPoint": 4507,
									"id": 642,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1212": {
									"entryPoint": 2698,
									"id": 1212,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1183": {
									"entryPoint": 3680,
									"id": 1183,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_834": {
									"entryPoint": 3157,
									"id": 834,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_489": {
									"entryPoint": 1188,
									"id": 489,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_397": {
									"entryPoint": 2001,
									"id": 397,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_506": {
									"entryPoint": 1161,
									"id": 506,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_539": {
									"entryPoint": 2451,
									"id": 539,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@minting_58": {
									"entryPoint": 1210,
									"id": 58,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_419": {
									"entryPoint": 1018,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_410": {
									"entryPoint": 1984,
									"id": 410,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_603": {
									"entryPoint": 1647,
									"id": 603,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_629": {
									"entryPoint": 2349,
									"id": 629,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_522": {
									"entryPoint": 2327,
									"id": 522,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1740": {
									"entryPoint": 2593,
									"id": 1740,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_369": {
									"entryPoint": 793,
									"id": 369,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_428": {
									"entryPoint": 2183,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_81": {
									"entryPoint": 2378,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_585": {
									"entryPoint": 1392,
									"id": 585,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@viewTokens_130": {
									"entryPoint": 1678,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7027,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6240,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 6614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 6558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8491,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8608,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8745,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8136,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 7420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 6542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 7696,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 7662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 7555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6226,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5620,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 7438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 7778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8189,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 7588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5411,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5407,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 7453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 7766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 7638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 7465,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 7597,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 7634,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:25010:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:12",
																"statements": []
															},
															"src": "1889:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:12",
														"type": ""
													}
												],
												"src": "2050:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:12",
														"type": ""
													}
												],
												"src": "2158:377:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:12",
														"type": ""
													}
												],
												"src": "2541:313:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:12",
														"type": ""
													}
												],
												"src": "2860:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:12"
															},
															"nodeType": "YulIf",
															"src": "2996:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:12",
														"type": ""
													}
												],
												"src": "2943:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:12",
														"type": ""
													}
												],
												"src": "3071:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:12"
															},
															"nodeType": "YulIf",
															"src": "3292:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:12",
														"type": ""
													}
												],
												"src": "3216:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:12",
														"type": ""
													}
												],
												"src": "3551:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:12",
														"type": ""
													}
												],
												"src": "3683:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:12",
														"type": ""
													}
												],
												"src": "3785:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:12",
														"type": ""
													}
												],
												"src": "3909:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:12"
															},
															"nodeType": "YulIf",
															"src": "4190:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:12",
														"type": ""
													}
												],
												"src": "4137:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:12",
														"type": ""
													}
												],
												"src": "4265:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:12"
															},
															"nodeType": "YulIf",
															"src": "4503:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:12",
														"type": ""
													}
												],
												"src": "4410:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4979:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4999:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4989:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4989:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4890:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5102:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5119:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5122:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5112:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5112:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5112:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "5013:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5164:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5181:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5184:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5174:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5174:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5174:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5278:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5281:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5271:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5271:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5271:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5302:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5305:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5295:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5295:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5295:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5136:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5397:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5427:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5405:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5405:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5393:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5393:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5379:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5544:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5546:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5546:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5546:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5487:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5499:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5484:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5484:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5523:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5535:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5520:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5520:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5481:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:62:12"
															},
															"nodeType": "YulIf",
															"src": "5478:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5582:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5586:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5575:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5575:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5575:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5351:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5359:4:12",
														"type": ""
													}
												],
												"src": "5322:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5650:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5660:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5670:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5670:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5719:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5727:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5699:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5699:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5699:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5634:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5643:6:12",
														"type": ""
													}
												],
												"src": "5609:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5811:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5916:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5918:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5918:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5918:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5888:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5896:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5885:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5885:30:12"
															},
															"nodeType": "YulIf",
															"src": "5882:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5948:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5978:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "5956:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5948:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6022:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6034:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6040:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6030:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6030:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6022:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5795:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5806:4:12",
														"type": ""
													}
												],
												"src": "5744:308:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6122:82:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6145:3:12"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6150:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6155:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6132:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6132:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6132:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6182:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6187:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6178:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6178:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6196:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6104:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6109:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6114:6:12",
														"type": ""
													}
												],
												"src": "6058:146:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6294:341:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6304:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6371:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6329:41:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6329:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6313:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6313:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6304:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6395:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6402:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6388:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6388:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6388:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6418:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6433:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6440:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6429:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6429:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6422:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6483:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "6485:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6485:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6485:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6464:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6469:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6460:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6460:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6478:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6457:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6457:25:12"
															},
															"nodeType": "YulIf",
															"src": "6454:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6612:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6617:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6622:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "6575:36:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6575:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6575:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6267:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6272:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6280:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6288:5:12",
														"type": ""
													}
												],
												"src": "6210:425:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6717:278:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6766:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6768:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6768:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6768:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6745:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6753:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6741:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6741:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6760:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6737:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6737:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6730:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6730:35:12"
															},
															"nodeType": "YulIf",
															"src": "6727:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6858:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6885:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6872:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6862:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6901:88:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6962:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6970:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6958:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6977:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6985:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6910:47:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6910:79:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6901:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6695:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6703:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6711:5:12",
														"type": ""
													}
												],
												"src": "6655:340:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7077:433:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7123:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7125:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7125:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7125:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7098:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7107:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7094:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7119:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7090:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7090:32:12"
															},
															"nodeType": "YulIf",
															"src": "7087:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "7216:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7231:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7262:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7273:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7258:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7258:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7245:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7245:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7235:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7323:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7325:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7325:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7325:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7295:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7303:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7292:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7292:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "7289:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7420:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7465:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7476:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7461:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7461:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7485:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7430:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7430:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7420:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7047:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7058:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7070:6:12",
														"type": ""
													}
												],
												"src": "7001:509:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7616:519:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7662:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7664:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7664:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7664:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7637:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7646:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7633:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7633:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7658:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7629:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7629:32:12"
															},
															"nodeType": "YulIf",
															"src": "7626:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "7755:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7770:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7784:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7774:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7799:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7834:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7845:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7830:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7830:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7854:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7809:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7809:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7799:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7882:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7897:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7911:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7901:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7927:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7962:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7973:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7958:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7958:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7982:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7937:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7937:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7927:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8010:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8025:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8039:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8029:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8055:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8090:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8101:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8086:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8086:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8110:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8065:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8065:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8055:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7570:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7581:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7593:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7601:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7609:6:12",
														"type": ""
													}
												],
												"src": "7516:619:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8225:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8236:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8252:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8246:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8246:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8236:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8208:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8218:6:12",
														"type": ""
													}
												],
												"src": "8141:124:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8392:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8409:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8414:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8402:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8402:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8402:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8430:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8449:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8454:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8445:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8445:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8430:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8364:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8369:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8380:11:12",
														"type": ""
													}
												],
												"src": "8271:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8553:60:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8563:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "8571:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8563:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8584:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8596:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8601:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8592:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8592:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8584:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8540:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8548:4:12",
														"type": ""
													}
												],
												"src": "8471:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8705:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8722:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8727:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8715:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8715:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8715:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8743:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8762:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8767:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8758:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8758:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8743:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8677:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8682:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8693:11:12",
														"type": ""
													}
												],
												"src": "8619:159:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8866:275:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8876:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8923:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8890:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8890:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8880:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8938:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8994:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8999:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8945:48:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8945:61:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8938:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9054:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9061:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9050:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9050:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9068:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9073:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9015:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9015:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9015:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9089:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9100:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9127:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "9105:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9105:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9096:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9096:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9089:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8847:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8854:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8862:3:12",
														"type": ""
													}
												],
												"src": "8784:357:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9247:96:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9257:80:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9325:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9333:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9271:53:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9271:66:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "9257:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9220:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9228:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "9236:10:12",
														"type": ""
													}
												],
												"src": "9147:196:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9434:38:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9444:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9456:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9461:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9452:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9452:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "9444:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9421:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "9429:4:12",
														"type": ""
													}
												],
												"src": "9349:123:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9650:847:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9660:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9732:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9674:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9674:64:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9664:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9747:103:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9838:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9843:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9754:83:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9754:96:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9747:3:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9859:20:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9876:3:12"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nodeType": "YulTypedName",
																	"src": "9863:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9888:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9904:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9913:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9921:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "9909:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9909:17:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9900:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9900:27:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "9892:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9936:81:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10011:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9951:59:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9951:66:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "9940:7:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10026:21:12",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "10040:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10030:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10116:336:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10137:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "10146:4:12"
																						},
																						{
																							"name": "headStart",
																							"nodeType": "YulIdentifier",
																							"src": "10152:9:12"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "10142:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10142:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10130:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10130:33:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10130:33:12"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10176:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10203:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10197:5:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10197:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "10180:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10223:92:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "10295:13:12"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "10310:4:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "10231:63:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10231:84:12"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10223:4:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10328:80:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10401:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "10338:62:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10338:70:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10328:6:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10421:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10432:3:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10437:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10428:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10428:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10421:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10078:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10081:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10075:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10075:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10089:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10091:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10100:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10103:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10096:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10096:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10091:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10060:14:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10062:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10071:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "10066:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10056:396:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10461:11:12",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "10468:4:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10461:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10481:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10488:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10481:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9629:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9636:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9645:3:12",
														"type": ""
													}
												],
												"src": "9506:991:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10671:245:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10681:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10693:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10704:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10689:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10689:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10681:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10728:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10739:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10724:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10724:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10747:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10753:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10743:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10743:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10717:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10717:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10717:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10773:136:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10895:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10904:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10781:113:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10781:128:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10773:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10643:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10655:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10666:4:12",
														"type": ""
													}
												],
												"src": "10503:413:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10988:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11034:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11036:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11036:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11036:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11009:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11018:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11005:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11005:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11030:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11001:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11001:32:12"
															},
															"nodeType": "YulIf",
															"src": "10998:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "11127:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11142:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11156:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11146:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11171:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11206:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11217:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11202:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11202:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11226:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11181:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11181:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11171:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10958:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10969:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10981:6:12",
														"type": ""
													}
												],
												"src": "10922:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11322:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11339:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11362:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11344:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11344:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11332:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11332:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11332:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11310:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11317:3:12",
														"type": ""
													}
												],
												"src": "11257:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11479:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11489:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11501:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11512:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11497:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11497:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11489:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11569:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11582:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11593:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11578:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11578:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11525:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11525:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11525:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11451:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11463:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11474:4:12",
														"type": ""
													}
												],
												"src": "11381:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11649:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11703:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11712:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11715:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11705:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11705:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11705:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11672:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11694:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "11679:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11679:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11669:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11669:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11662:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11662:40:12"
															},
															"nodeType": "YulIf",
															"src": "11659:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11642:5:12",
														"type": ""
													}
												],
												"src": "11609:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11780:84:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11790:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11812:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11799:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11799:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11790:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11852:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "11828:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11828:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11828:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11758:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11766:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11774:5:12",
														"type": ""
													}
												],
												"src": "11731:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11950:388:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11996:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11998:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11998:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11998:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11971:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11980:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11967:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11967:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11992:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11963:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11963:32:12"
															},
															"nodeType": "YulIf",
															"src": "11960:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "12089:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12104:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12118:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12108:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12133:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12168:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12179:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12164:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12164:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12188:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12143:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12143:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12133:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12216:115:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12231:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12245:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12235:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12261:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12293:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12304:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12289:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12289:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12313:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "12271:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12271:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12261:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11912:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11923:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11935:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11943:6:12",
														"type": ""
													}
												],
												"src": "11870:468:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12410:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12515:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12517:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12517:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12517:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12487:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12495:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12484:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12484:30:12"
															},
															"nodeType": "YulIf",
															"src": "12481:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12547:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12577:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "12555:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12555:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "12547:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12621:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "12633:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12639:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12629:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12629:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "12621:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12394:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12405:4:12",
														"type": ""
													}
												],
												"src": "12344:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12740:340:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12750:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12816:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12775:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12775:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12759:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12759:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "12750:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12840:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12847:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12833:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12833:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12833:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12863:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12878:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12885:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12874:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12874:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "12867:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12928:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "12930:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12930:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12930:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "12909:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12914:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12905:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12905:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12923:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12902:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12902:25:12"
															},
															"nodeType": "YulIf",
															"src": "12899:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "13057:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "13062:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13067:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13020:36:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13020:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13020:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12713:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12718:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12726:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "12734:5:12",
														"type": ""
													}
												],
												"src": "12657:423:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13160:277:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13209:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "13211:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13211:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13211:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13188:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13196:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13184:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13184:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "13203:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13180:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13180:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13173:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13173:35:12"
															},
															"nodeType": "YulIf",
															"src": "13170:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13301:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13328:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "13315:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13315:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13305:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13344:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13404:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13412:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13400:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13400:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13419:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "13427:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13353:46:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13353:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "13344:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13138:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13146:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "13154:5:12",
														"type": ""
													}
												],
												"src": "13099:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13569:817:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13616:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13618:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13618:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13618:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13590:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13599:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13586:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13586:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13611:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13582:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13582:33:12"
															},
															"nodeType": "YulIf",
															"src": "13579:120:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "13709:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13724:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13738:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13728:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13753:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13788:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13799:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13784:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13784:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13808:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13763:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13763:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13753:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13836:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13851:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13865:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13855:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13881:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13916:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13927:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13912:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13912:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13936:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13891:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13891:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "13881:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13964:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13979:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13993:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13983:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14009:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14044:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14055:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14040:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14040:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14064:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14019:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14019:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "14009:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "14092:287:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14107:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14138:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14149:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14134:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14134:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "14121:12:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14121:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14111:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14200:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "14202:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14202:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "14202:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14172:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14180:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14169:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14169:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "14166:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14297:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14341:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14352:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14337:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14337:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14361:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "14307:29:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14307:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "14297:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13515:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13526:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13538:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13546:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13554:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13562:6:12",
														"type": ""
													}
												],
												"src": "13443:943:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14475:391:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14521:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14523:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14523:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14523:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14496:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14505:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14492:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14492:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14517:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14488:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14488:32:12"
															},
															"nodeType": "YulIf",
															"src": "14485:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "14614:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14629:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14643:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14633:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14658:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14693:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14704:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14689:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14689:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14713:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "14668:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14668:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14658:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "14741:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14756:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14770:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14760:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14786:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14821:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14832:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14817:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14817:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14841:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "14796:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14796:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "14786:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14437:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14448:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14460:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14468:6:12",
														"type": ""
													}
												],
												"src": "14392:474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14900:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14917:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14920:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14910:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14910:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14910:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15014:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15017:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15007:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15007:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15007:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15038:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15041:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15031:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15031:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15031:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "14872:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15109:269:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15119:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15133:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15139:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15129:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15129:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "15119:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15150:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15180:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15186:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15176:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15176:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "15154:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15227:51:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15241:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "15255:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15263:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "15251:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15251:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15241:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "15207:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15200:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15200:26:12"
															},
															"nodeType": "YulIf",
															"src": "15197:81:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15330:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "15344:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15344:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15344:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "15294:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15317:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15325:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "15314:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15314:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15291:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15291:38:12"
															},
															"nodeType": "YulIf",
															"src": "15288:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "15093:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15102:6:12",
														"type": ""
													}
												],
												"src": "15058:320:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15438:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15448:11:12",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "15456:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15448:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15476:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15479:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15469:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15469:14:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15469:14:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15492:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15510:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15513:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "15500:9:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15500:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15492:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "15425:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "15433:4:12",
														"type": ""
													}
												],
												"src": "15384:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15575:49:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15585:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15603:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15610:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15599:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15599:14:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15615:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15595:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15595:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15585:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15558:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "15568:6:12",
														"type": ""
													}
												],
												"src": "15531:93:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15683:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15693:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "15718:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15724:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "15714:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15714:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "15693:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "15658:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15664:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "15674:8:12",
														"type": ""
													}
												],
												"src": "15630:107:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15819:317:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15829:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "15850:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15862:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15846:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15846:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "15833:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15873:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "15904:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15915:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "15885:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15885:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "15877:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15991:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "16022:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "16033:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "16003:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16003:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "15991:8:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16051:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16064:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "16075:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16071:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16071:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16060:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16060:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16051:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16090:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16103:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "16114:8:12"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "16124:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16110:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16110:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16100:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16100:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16090:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15780:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "15787:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "15799:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "15812:6:12",
														"type": ""
													}
												],
												"src": "15743:393:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16174:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16184:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16191:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16184:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16160:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16170:3:12",
														"type": ""
													}
												],
												"src": "16142:60:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16268:82:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16278:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16336:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "16318:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16318:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "16309:8:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16309:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16291:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16291:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "16278:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16248:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "16258:9:12",
														"type": ""
													}
												],
												"src": "16208:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16403:28:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16413:12:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16420:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16413:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16389:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16399:3:12",
														"type": ""
													}
												],
												"src": "16356:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16513:193:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16523:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "16578:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16547:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16547:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "16527:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "16602:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "16642:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "16636:5:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16636:11:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16649:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "16681:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "16657:23:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16657:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "16608:27:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16608:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "16595:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16595:105:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16595:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "16490:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16496:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "16504:7:12",
														"type": ""
													}
												],
												"src": "16437:269:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16761:24:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16771:8:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16778:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16771:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16757:3:12",
														"type": ""
													}
												],
												"src": "16712:73:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16844:136:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16854:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16868:30:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16868:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "16858:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "16953:4:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16959:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "16967:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16909:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16909:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16909:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "16830:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16836:6:12",
														"type": ""
													}
												],
												"src": "16791:189:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17036:136:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17103:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "17147:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17154:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "17117:29:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17117:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17117:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "17056:5:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "17063:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17053:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17053:14:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "17068:26:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17070:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "17083:5:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17090:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "17079:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17079:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "17070:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "17050:2:12",
																"statements": []
															},
															"src": "17046:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "17024:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17031:3:12",
														"type": ""
													}
												],
												"src": "16986:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17257:464:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17283:431:12",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "17297:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "17345:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "17313:31:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17313:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "17301:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "17364:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "17387:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "17415:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "17397:17:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17397:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "17383:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17383:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "17368:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17584:27:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "17586:23:12",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "17601:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "17586:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "17568:10:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17580:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "17565:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17565:18:12"
																		},
																		"nodeType": "YulIf",
																		"src": "17562:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "17653:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "17670:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "17698:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "17680:17:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "17680:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "17666:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17666:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "17624:28:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17624:80:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17624:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "17274:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17279:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17271:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17271:11:12"
															},
															"nodeType": "YulIf",
															"src": "17268:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "17233:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "17240:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "17245:10:12",
														"type": ""
													}
												],
												"src": "17178:543:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17790:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17800:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "17825:4:12"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17831:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "17821:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17821:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "17800:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "17765:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17771:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "17781:8:12",
														"type": ""
													}
												],
												"src": "17727:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17901:118:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17911:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17960:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "17963:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "17956:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17956:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17975:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "17971:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17971:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "17927:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17927:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "17923:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17923:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "17915:4:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17988:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18002:4:12"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "18008:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17998:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17998:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "17988:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17878:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "17884:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "17894:6:12",
														"type": ""
													}
												],
												"src": "17850:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18105:214:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18238:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18265:4:12"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "18271:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "18246:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18246:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18238:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18284:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18295:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18305:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "18308:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "18301:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18301:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18292:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18292:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "18284:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18086:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "18092:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "18100:4:12",
														"type": ""
													}
												],
												"src": "18024:295:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18416:1303:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18427:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "18474:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "18441:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18441:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "18431:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18563:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "18565:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18565:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18565:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "18535:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18543:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18532:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18532:30:12"
															},
															"nodeType": "YulIf",
															"src": "18529:56:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18595:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "18641:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "18635:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18635:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "18609:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18609:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "18599:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "18740:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "18746:6:12"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "18754:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "18694:45:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18694:67:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18694:67:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18771:18:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18788:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "18775:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18799:17:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18812:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "18799:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18863:611:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18877:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "18896:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "18908:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "18904:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18904:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "18892:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18892:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "18881:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18928:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "18974:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "18942:31:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18942:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "18932:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "18992:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19001:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "18996:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19060:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "19085:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "19103:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "19108:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "19099:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "19099:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "19093:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19093:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "19078:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19078:42:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "19078:42:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "19137:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "19151:6:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19159:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19147:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19147:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "19137:6:12"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "19178:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "19195:9:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19206:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19191:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19191:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "19178:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "19026:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "19029:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "19023:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19023:14:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "19038:21:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "19040:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "19049:1:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19052:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19045:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19045:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "19040:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "19019:3:12",
																					"statements": []
																				},
																				"src": "19015:208:12"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19259:156:12",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "19277:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "19304:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "19309:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "19300:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19300:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "19294:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19294:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "19281:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "19344:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "19371:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "19386:6:12"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "19394:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "19382:3:12"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "19382:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "19352:18:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19352:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "19337:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19337:64:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "19337:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "19242:7:12"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "19251:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "19239:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19239:19:12"
																				},
																				"nodeType": "YulIf",
																				"src": "19236:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "19435:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "19449:6:12"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "19457:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "19445:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "19445:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "19461:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "19441:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19441:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "19428:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19428:36:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "19428:36:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "18856:618:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18861:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "19491:222:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "19505:14:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19518:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "19509:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19542:67:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "19560:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "19579:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "19584:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "19575:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19575:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "19569:5:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19569:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "19560:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "19535:6:12"
																				},
																				"nodeType": "YulIf",
																				"src": "19532:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "19629:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "19688:5:12"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "19695:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "19635:52:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19635:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "19622:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19622:81:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "19622:81:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "19483:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "18836:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18844:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18833:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18833:14:12"
															},
															"nodeType": "YulSwitch",
															"src": "18826:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "18405:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "18411:3:12",
														"type": ""
													}
												],
												"src": "18324:1395:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19753:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19770:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19773:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19763:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19763:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19763:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19867:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19870:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19860:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19860:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19860:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19891:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19894:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19884:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19884:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19884:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "19725:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19955:147:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19965:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19988:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19970:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19970:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19965:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19999:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20022:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20004:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20004:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19999:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20033:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20044:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20047:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20040:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20040:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "20033:3:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20073:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20075:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20075:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20075:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20065:1:12"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "20068:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20062:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20062:10:12"
															},
															"nodeType": "YulIf",
															"src": "20059:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19942:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19945:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19951:3:12",
														"type": ""
													}
												],
												"src": "19911:191:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20262:288:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20272:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20284:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20295:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20280:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20280:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20272:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20352:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20365:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20376:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20361:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20361:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20308:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20308:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20308:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20433:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20446:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20457:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20442:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20442:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20389:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20389:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20389:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20515:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20528:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20539:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20524:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20524:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20471:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20471:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20471:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20218:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20230:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20238:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20246:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20257:4:12",
														"type": ""
													}
												],
												"src": "20108:442:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20584:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20601:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20604:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20594:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20594:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20594:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20698:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20701:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20691:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20691:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20691:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20722:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20725:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20715:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20715:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20715:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "20556:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20785:190:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20795:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20822:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20804:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20804:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20795:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20918:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20920:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20920:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20920:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20843:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20850:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20840:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20840:77:12"
															},
															"nodeType": "YulIf",
															"src": "20837:103:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20949:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20960:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20967:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20956:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20956:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20949:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20771:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20781:3:12",
														"type": ""
													}
												],
												"src": "20742:233:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21095:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21105:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "21120:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21105:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21067:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21072:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21083:11:12",
														"type": ""
													}
												],
												"src": "20981:148:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21245:280:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21255:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21302:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21269:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21269:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21259:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21317:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21401:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21406:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21324:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21324:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21317:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21461:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21468:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21457:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21457:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21475:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21480:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "21422:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21422:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21422:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21496:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21507:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21512:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21503:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21503:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21496:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21226:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21233:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21241:3:12",
														"type": ""
													}
												],
												"src": "21135:390:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21662:767:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21672:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21695:5:12"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "21689:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21689:12:12"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "21676:9:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21710:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "21750:9:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "21724:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21724:36:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21714:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21769:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21853:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21858:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21776:76:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21776:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21769:3:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "21914:159:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "21967:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "21976:9:12"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "21991:4:12",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "21987:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "21987:9:12"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "21972:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "21972:25:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "21960:6:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21960:38:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "21960:38:12"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "22011:52:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "22022:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "22031:6:12"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nodeType": "YulIdentifier",
																													"src": "22053:6:12"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "22046:6:12"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "22046:14:12"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "22039:6:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "22039:22:12"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "22027:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "22027:35:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "22018:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22018:45:12"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "22011:3:12"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "21907:166:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21912:1:12",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "22089:334:12",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "22134:53:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "22181:5:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "22149:31:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22149:38:12"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "22138:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "22200:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22209:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "22204:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "22267:110:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "22296:3:12"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "22301:1:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "22292:3:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "22292:11:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "22311:7:12"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "22305:5:12"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "22305:14:12"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "22285:6:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "22285:35:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "22285:35:12"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "22337:26:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "22352:7:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "22361:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "22348:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "22348:15:12"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "22337:7:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "22234:1:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "22237:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "22231:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22231:13:12"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "22245:21:12",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "22247:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "22256:1:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "22259:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "22252:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "22252:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "22247:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "22227:3:12",
																					"statements": []
																				},
																				"src": "22223:154:12"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "22390:23:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "22401:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "22406:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "22397:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22397:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "22390:3:12"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "22082:341:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22087:1:12",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "21885:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21896:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21881:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21881:17:12"
															},
															"nodeType": "YulSwitch",
															"src": "21874:549:12"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21643:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21650:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "21658:3:12",
														"type": ""
													}
												],
												"src": "21555:874:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22616:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22627:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22716:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22725:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22634:81:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22634:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22627:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22739:99:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22825:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22834:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22746:78:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22746:92:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22739:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22848:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "22855:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22848:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22587:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22593:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22601:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22612:3:12",
														"type": ""
													}
												],
												"src": "22435:429:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22928:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22939:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22955:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22949:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22949:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "22939:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22911:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22921:6:12",
														"type": ""
													}
												],
												"src": "22870:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23069:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23086:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23091:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23079:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23079:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23079:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23107:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23126:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23131:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23122:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23122:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "23107:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23041:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23046:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "23057:11:12",
														"type": ""
													}
												],
												"src": "22974:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23238:283:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23248:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23294:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "23262:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23262:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "23252:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23309:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23374:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23379:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23316:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23316:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23309:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23434:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23441:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23430:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23430:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23448:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23453:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "23395:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23395:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23395:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23469:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23480:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "23507:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "23485:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23485:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23476:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23476:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23469:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23219:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23226:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23234:3:12",
														"type": ""
													}
												],
												"src": "23148:373:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23727:440:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23737:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23749:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23760:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23745:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23745:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23737:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23818:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23831:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23842:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23827:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23827:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23774:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23774:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23774:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23899:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23912:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23923:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23908:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23908:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23855:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23855:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23855:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23981:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23994:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24005:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23990:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23990:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23937:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "23937:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23937:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24030:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24041:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24026:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24026:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24050:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24056:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24046:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24046:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24019:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24019:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24019:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24076:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "24146:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24155:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24084:61:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24084:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24076:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23675:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "23687:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23695:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23703:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23711:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23722:4:12",
														"type": ""
													}
												],
												"src": "23527:640:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24235:79:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24245:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "24260:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24254:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24254:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "24245:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24302:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "24276:25:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24276:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24276:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "24213:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24221:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24229:5:12",
														"type": ""
													}
												],
												"src": "24173:141:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24396:273:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24442:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "24444:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24444:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24444:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "24417:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24426:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24413:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24413:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24438:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "24409:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24409:32:12"
															},
															"nodeType": "YulIf",
															"src": "24406:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "24535:127:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "24550:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24564:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "24554:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "24579:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "24624:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "24635:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24620:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24620:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "24644:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "24589:30:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24589:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "24579:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24366:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "24377:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24389:6:12",
														"type": ""
													}
												],
												"src": "24320:349:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24801:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24811:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24823:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24834:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24819:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24819:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24811:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24891:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24904:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24915:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24900:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24900:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24847:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24847:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24847:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24972:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24985:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24996:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24981:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24981:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24928:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "24928:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24928:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24765:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24777:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24785:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24796:4:12",
														"type": ""
													}
												],
												"src": "24675:332:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f3575f3560e01c80634bf5bf3511610095578063a22cb46511610064578063a22cb46514610281578063b88d4fde1461029d578063c87b56dd146102b9578063e985e9c5146102e9576100f3565b80634bf5bf35146101e55780636352211e1461020357806370a082311461023357806395d89b4114610263576100f3565b8063095ea7b3116100d1578063095ea7b3146101755780630bdc90081461019157806323b872dd146101ad57806342842e0e146101c9576100f3565b806301ffc9a7146100f757806306fdde0314610127578063081812fc14610145575b5f80fd5b610111600480360381019061010c919061157c565b610319565b60405161011e91906115c1565b60405180910390f35b61012f6103fa565b60405161013c9190611664565b60405180910390f35b61015f600480360381019061015a91906116b7565b610489565b60405161016c9190611721565b60405180910390f35b61018f600480360381019061018a9190611764565b6104a4565b005b6101ab60048036038101906101a691906118ce565b6104ba565b005b6101c760048036038101906101c29190611915565b610570565b005b6101e360048036038101906101de9190611915565b61066f565b005b6101ed61068e565b6040516101fa9190611a68565b60405180910390f35b61021d600480360381019061021891906116b7565b6107c0565b60405161022a9190611721565b60405180910390f35b61024d60048036038101906102489190611a88565b6107d1565b60405161025a9190611ac2565b60405180910390f35b61026b610887565b6040516102789190611664565b60405180910390f35b61029b60048036038101906102969190611b05565b610917565b005b6102b760048036038101906102b29190611be1565b61092d565b005b6102d360048036038101906102ce91906116b7565b61094a565b6040516102e09190611664565b60405180910390f35b61030360048036038101906102fe9190611c61565b610993565b60405161031091906115c1565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f357506103f282610a21565b5b9050919050565b60605f805461040890611ccc565b80601f016020809104026020016040519081016040528092919081815260200182805461043490611ccc565b801561047f5780601f106104565761010080835404028352916020019161047f565b820191905f5260205f20905b81548152906001019060200180831161046257829003601f168201915b5050505050905090565b5f61049382610a8a565b5061049d82610b10565b9050919050565b6104b682826104b1610b49565b610b50565b5050565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f20015f9091909190915090816105269190611e99565b508060085f60065481526020019081526020015f2090816105479190611e99565b5061055433600654610b62565b600160065f8282546105669190611f95565b9250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105e0575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105d79190611721565b60405180910390fd5b5f6105f383836105ee610b49565b610c55565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610669578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161066093929190611fc8565b60405180910390fd5b50505050565b61068983838360405180602001604052805f81525061092d565b505050565b60605f60065467ffffffffffffffff8111156106ad576106ac6117aa565b5b6040519080825280602002602001820160405280156106e057816020015b60608152602001906001900390816106cb5790505b5090505f5b6006548110156107b85760085f8281526020019081526020015f20805461070b90611ccc565b80601f016020809104026020016040519081016040528092919081815260200182805461073790611ccc565b80156107825780601f1061075957610100808354040283529160200191610782565b820191905f5260205f20905b81548152906001019060200180831161076557829003601f168201915b505050505082828151811061079a57610799611ffd565b5b602002602001018190525080806107b09061202a565b9150506106e5565b508091505090565b5f6107ca82610a8a565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610842575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108399190611721565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461089690611ccc565b80601f01602080910402602001604051908101604052809291908181526020018280546108c290611ccc565b801561090d5780601f106108e45761010080835404028352916020019161090d565b820191905f5260205f20905b8154815290600101906020018083116108f057829003601f168201915b5050505050905090565b610929610922610b49565b8383610e60565b5050565b610938848484610570565b61094484848484610fc9565b50505050565b60605f61095561117b565b90508060085f60065481526020019081526020015f2060405160200161097c92919061212b565b604051602081830303815290604052915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610a958361119b565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b0757826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610afe9190611ac2565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610b5d83838360016111d4565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bd2575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610bc99190611721565b60405180910390fd5b5f610bde83835f610c55565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c50575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610c479190611721565b60405180910390fd5b505050565b5f80610c608461119b565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610ca157610ca0818486611393565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d2c57610ce05f855f806111d4565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610dab57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ed057816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610ec79190611721565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fbc91906115c1565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611175578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261100c610b49565b8685856040518563ffffffff1660e01b815260040161102e94939291906121a0565b6020604051808303815f875af192505050801561106957506040513d601f19601f8201168201806040525081019061106691906121fe565b60015b6110ea573d805f8114611097576040519150601f19603f3d011682016040523d82523d5f602084013e61109c565b606091505b505f8151036110e257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110d99190611721565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461117357836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161116a9190611721565b60405180910390fd5b505b50505050565b606060405180606001604052806038815260200161225160389139905090565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061120c57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561133e575f61121b84610a8a565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561128557508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561129857506112968184610993565b155b156112da57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016112d19190611721565b60405180910390fd5b811561133c57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61139e838383611456565b611451575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361141257806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016114099190611ac2565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611448929190612229565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561150d57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806114ce57506114cd8484610993565b5b8061150c57508273ffffffffffffffffffffffffffffffffffffffff166114f483610b10565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61155b81611527565b8114611565575f80fd5b50565b5f8135905061157681611552565b92915050565b5f602082840312156115915761159061151f565b5b5f61159e84828501611568565b91505092915050565b5f8115159050919050565b6115bb816115a7565b82525050565b5f6020820190506115d45f8301846115b2565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156116115780820151818401526020810190506115f6565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611636826115da565b61164081856115e4565b93506116508185602086016115f4565b6116598161161c565b840191505092915050565b5f6020820190508181035f83015261167c818461162c565b905092915050565b5f819050919050565b61169681611684565b81146116a0575f80fd5b50565b5f813590506116b18161168d565b92915050565b5f602082840312156116cc576116cb61151f565b5b5f6116d9848285016116a3565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61170b826116e2565b9050919050565b61171b81611701565b82525050565b5f6020820190506117345f830184611712565b92915050565b61174381611701565b811461174d575f80fd5b50565b5f8135905061175e8161173a565b92915050565b5f806040838503121561177a5761177961151f565b5b5f61178785828601611750565b9250506020611798858286016116a3565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6117e08261161c565b810181811067ffffffffffffffff821117156117ff576117fe6117aa565b5b80604052505050565b5f611811611516565b905061181d82826117d7565b919050565b5f67ffffffffffffffff82111561183c5761183b6117aa565b5b6118458261161c565b9050602081019050919050565b828183375f83830152505050565b5f61187261186d84611822565b611808565b90508281526020810184848401111561188e5761188d6117a6565b5b611899848285611852565b509392505050565b5f82601f8301126118b5576118b46117a2565b5b81356118c5848260208601611860565b91505092915050565b5f602082840312156118e3576118e261151f565b5b5f82013567ffffffffffffffff811115611900576118ff611523565b5b61190c848285016118a1565b91505092915050565b5f805f6060848603121561192c5761192b61151f565b5b5f61193986828701611750565b935050602061194a86828701611750565b925050604061195b868287016116a3565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f82825260208201905092915050565b5f6119a8826115da565b6119b2818561198e565b93506119c28185602086016115f4565b6119cb8161161c565b840191505092915050565b5f6119e1838361199e565b905092915050565b5f602082019050919050565b5f6119ff82611965565b611a09818561196f565b935083602082028501611a1b8561197f565b805f5b85811015611a565784840389528151611a3785826119d6565b9450611a42836119e9565b925060208a01995050600181019050611a1e565b50829750879550505050505092915050565b5f6020820190508181035f830152611a8081846119f5565b905092915050565b5f60208284031215611a9d57611a9c61151f565b5b5f611aaa84828501611750565b91505092915050565b611abc81611684565b82525050565b5f602082019050611ad55f830184611ab3565b92915050565b611ae4816115a7565b8114611aee575f80fd5b50565b5f81359050611aff81611adb565b92915050565b5f8060408385031215611b1b57611b1a61151f565b5b5f611b2885828601611750565b9250506020611b3985828601611af1565b9150509250929050565b5f67ffffffffffffffff821115611b5d57611b5c6117aa565b5b611b668261161c565b9050602081019050919050565b5f611b85611b8084611b43565b611808565b905082815260208101848484011115611ba157611ba06117a6565b5b611bac848285611852565b509392505050565b5f82601f830112611bc857611bc76117a2565b5b8135611bd8848260208601611b73565b91505092915050565b5f805f8060808587031215611bf957611bf861151f565b5b5f611c0687828801611750565b9450506020611c1787828801611750565b9350506040611c28878288016116a3565b925050606085013567ffffffffffffffff811115611c4957611c48611523565b5b611c5587828801611bb4565b91505092959194509250565b5f8060408385031215611c7757611c7661151f565b5b5f611c8485828601611750565b9250506020611c9585828601611750565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ce357607f821691505b602082108103611cf657611cf5611c9f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611d587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611d1d565b611d628683611d1d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611d9d611d98611d9384611684565b611d7a565b611684565b9050919050565b5f819050919050565b611db683611d83565b611dca611dc282611da4565b848454611d29565b825550505050565b5f90565b611dde611dd2565b611de9818484611dad565b505050565b5b81811015611e0c57611e015f82611dd6565b600181019050611def565b5050565b601f821115611e5157611e2281611cfc565b611e2b84611d0e565b81016020851015611e3a578190505b611e4e611e4685611d0e565b830182611dee565b50505b505050565b5f82821c905092915050565b5f611e715f1984600802611e56565b1980831691505092915050565b5f611e898383611e62565b9150826002028217905092915050565b611ea2826115da565b67ffffffffffffffff811115611ebb57611eba6117aa565b5b611ec58254611ccc565b611ed0828285611e10565b5f60209050601f831160018114611f01575f8415611eef578287015190505b611ef98582611e7e565b865550611f60565b601f198416611f0f86611cfc565b5f5b82811015611f3657848901518255600182019150602085019450602081019050611f11565b86831015611f535784890151611f4f601f891682611e62565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f9f82611684565b9150611faa83611684565b9250828201905080821115611fc257611fc1611f68565b5b92915050565b5f606082019050611fdb5f830186611712565b611fe86020830185611ab3565b611ff56040830184611712565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f61203482611684565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361206657612065611f68565b5b600182019050919050565b5f81905092915050565b5f612085826115da565b61208f8185612071565b935061209f8185602086016115f4565b80840191505092915050565b5f81546120b781611ccc565b6120c18186612071565b9450600182165f81146120db57600181146120f057612122565b60ff1983168652811515820286019350612122565b6120f985611cfc565b5f5b8381101561211a578154818901526001820191506020810190506120fb565b838801955050505b50505092915050565b5f612136828561207b565b915061214282846120ab565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6121728261214e565b61217c8185612158565b935061218c8185602086016115f4565b6121958161161c565b840191505092915050565b5f6080820190506121b35f830187611712565b6121c06020830186611712565b6121cd6040830185611ab3565b81810360608301526121df8184612168565b905095945050505050565b5f815190506121f881611552565b92915050565b5f602082840312156122135761221261151f565b5b5f612220848285016121ea565b91505092915050565b5f60408201905061223c5f830185611712565b6122496020830184611ab3565b939250505056fe68747470733a2f2f626c61636b2d656c6465726c792d776f6c766572696e652d3638352e6d7970696e6174612e636c6f75642f697066732fa26469706673582212200c330340eed74d6eb949969be5e39f5ab4ed92747f5a74cc53785447b286382164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4BF5BF35 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2E9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x4BF5BF35 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x263 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xBDC9008 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x157C JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x18CE JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST PUSH2 0x917 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E3 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F3 JUMPI POP PUSH2 0x3F2 DUP3 PUSH2 0xA21 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x408 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x434 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x456 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x462 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x493 DUP3 PUSH2 0xA8A JUMP JUMPDEST POP PUSH2 0x49D DUP3 PUSH2 0xB10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B6 DUP3 DUP3 PUSH2 0x4B1 PUSH2 0xB49 JUMP JUMPDEST PUSH2 0xB50 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 DUP2 PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST POP DUP1 PUSH1 0x8 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST POP PUSH2 0x554 CALLER PUSH1 0x6 SLOAD PUSH2 0xB62 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x1F95 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5F3 DUP4 DUP4 PUSH2 0x5EE PUSH2 0xB49 JUMP JUMPDEST PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x669 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x660 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x689 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x92D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x6 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6AD JUMPI PUSH2 0x6AC PUSH2 0x17AA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6E0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x6CB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x8 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x70B SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x737 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x782 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x759 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x782 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x765 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x79A JUMPI PUSH2 0x799 PUSH2 0x1FFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x7B0 SWAP1 PUSH2 0x202A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6E5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x7CA DUP3 PUSH2 0xA8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x842 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x896 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8C2 SWAP1 PUSH2 0x1CCC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x90D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x90D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x929 PUSH2 0x922 PUSH2 0xB49 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE60 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x938 DUP5 DUP5 DUP5 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x944 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFC9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x955 PUSH2 0x117B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 PUSH0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x97C SWAP3 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA95 DUP4 PUSH2 0x119B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB07 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB5D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBDE DUP4 DUP4 PUSH0 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC50 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC60 DUP5 PUSH2 0x119B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA1 JUMPI PUSH2 0xCA0 DUP2 DUP5 DUP7 PUSH2 0x1393 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD2C JUMPI PUSH2 0xCE0 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDAB JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED0 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC7 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x15C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1175 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x100C PUSH2 0xB49 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1069 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1066 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10EA JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x109C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x10E2 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1173 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116A SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2251 PUSH1 0x38 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x120C JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x133E JUMPI PUSH0 PUSH2 0x121B DUP5 PUSH2 0xA8A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1285 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1298 JUMPI POP PUSH2 0x1296 DUP2 DUP5 PUSH2 0x993 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x12DA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D1 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x133C JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x139E DUP4 DUP4 DUP4 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x1451 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1412 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1409 SWAP2 SWAP1 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1448 SWAP3 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x150D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x14CE JUMPI POP PUSH2 0x14CD DUP5 DUP5 PUSH2 0x993 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x150C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14F4 DUP4 PUSH2 0xB10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x155B DUP2 PUSH2 0x1527 JUMP JUMPDEST DUP2 EQ PUSH2 0x1565 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1576 DUP2 PUSH2 0x1552 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1591 JUMPI PUSH2 0x1590 PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x159E DUP5 DUP3 DUP6 ADD PUSH2 0x1568 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BB DUP2 PUSH2 0x15A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D4 PUSH0 DUP4 ADD DUP5 PUSH2 0x15B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1611 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15F6 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1636 DUP3 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x1640 DUP2 DUP6 PUSH2 0x15E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1650 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x1659 DUP2 PUSH2 0x161C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x167C DUP2 DUP5 PUSH2 0x162C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1696 DUP2 PUSH2 0x1684 JUMP JUMPDEST DUP2 EQ PUSH2 0x16A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B1 DUP2 PUSH2 0x168D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CC JUMPI PUSH2 0x16CB PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D9 DUP5 DUP3 DUP6 ADD PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x170B DUP3 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171B DUP2 PUSH2 0x1701 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1734 PUSH0 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1743 DUP2 PUSH2 0x1701 JUMP JUMPDEST DUP2 EQ PUSH2 0x174D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x175E DUP2 PUSH2 0x173A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1787 DUP6 DUP3 DUP7 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1798 DUP6 DUP3 DUP7 ADD PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x17E0 DUP3 PUSH2 0x161C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17FF JUMPI PUSH2 0x17FE PUSH2 0x17AA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1811 PUSH2 0x1516 JUMP JUMPDEST SWAP1 POP PUSH2 0x181D DUP3 DUP3 PUSH2 0x17D7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x183C JUMPI PUSH2 0x183B PUSH2 0x17AA JUMP JUMPDEST JUMPDEST PUSH2 0x1845 DUP3 PUSH2 0x161C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1872 PUSH2 0x186D DUP5 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x1808 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x188E JUMPI PUSH2 0x188D PUSH2 0x17A6 JUMP JUMPDEST JUMPDEST PUSH2 0x1899 DUP5 DUP3 DUP6 PUSH2 0x1852 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18B5 JUMPI PUSH2 0x18B4 PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18C5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1860 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E3 JUMPI PUSH2 0x18E2 PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1900 JUMPI PUSH2 0x18FF PUSH2 0x1523 JUMP JUMPDEST JUMPDEST PUSH2 0x190C DUP5 DUP3 DUP6 ADD PUSH2 0x18A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x192C JUMPI PUSH2 0x192B PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1939 DUP7 DUP3 DUP8 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x194A DUP7 DUP3 DUP8 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x195B DUP7 DUP3 DUP8 ADD PUSH2 0x16A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19A8 DUP3 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x19B2 DUP2 DUP6 PUSH2 0x198E JUMP JUMPDEST SWAP4 POP PUSH2 0x19C2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x19CB DUP2 PUSH2 0x161C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19E1 DUP4 DUP4 PUSH2 0x199E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19FF DUP3 PUSH2 0x1965 JUMP JUMPDEST PUSH2 0x1A09 DUP2 DUP6 PUSH2 0x196F JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x1A1B DUP6 PUSH2 0x197F JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A56 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1A37 DUP6 DUP3 PUSH2 0x19D6 JUMP JUMPDEST SWAP5 POP PUSH2 0x1A42 DUP4 PUSH2 0x19E9 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A1E JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A80 DUP2 DUP5 PUSH2 0x19F5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A9D JUMPI PUSH2 0x1A9C PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AAA DUP5 DUP3 DUP6 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ABC DUP2 PUSH2 0x1684 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AE4 DUP2 PUSH2 0x15A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AFF DUP2 PUSH2 0x1ADB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1B JUMPI PUSH2 0x1B1A PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B28 DUP6 DUP3 DUP7 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B39 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B5D JUMPI PUSH2 0x1B5C PUSH2 0x17AA JUMP JUMPDEST JUMPDEST PUSH2 0x1B66 DUP3 PUSH2 0x161C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B85 PUSH2 0x1B80 DUP5 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x1808 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BA1 JUMPI PUSH2 0x1BA0 PUSH2 0x17A6 JUMP JUMPDEST JUMPDEST PUSH2 0x1BAC DUP5 DUP3 DUP6 PUSH2 0x1852 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x17A2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BD8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B73 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C06 DUP8 DUP3 DUP9 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1C17 DUP8 DUP3 DUP9 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1C28 DUP8 DUP3 DUP9 ADD PUSH2 0x16A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C49 JUMPI PUSH2 0x1C48 PUSH2 0x1523 JUMP JUMPDEST JUMPDEST PUSH2 0x1C55 DUP8 DUP3 DUP9 ADD PUSH2 0x1BB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C77 JUMPI PUSH2 0x1C76 PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C84 DUP6 DUP3 DUP7 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C95 DUP6 DUP3 DUP7 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CE3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CF6 JUMPI PUSH2 0x1CF5 PUSH2 0x1C9F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1D58 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1D1D JUMP JUMPDEST PUSH2 0x1D62 DUP7 DUP4 PUSH2 0x1D1D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D9D PUSH2 0x1D98 PUSH2 0x1D93 DUP5 PUSH2 0x1684 JUMP JUMPDEST PUSH2 0x1D7A JUMP JUMPDEST PUSH2 0x1684 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB6 DUP4 PUSH2 0x1D83 JUMP JUMPDEST PUSH2 0x1DCA PUSH2 0x1DC2 DUP3 PUSH2 0x1DA4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1D29 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1DDE PUSH2 0x1DD2 JUMP JUMPDEST PUSH2 0x1DE9 DUP2 DUP5 DUP5 PUSH2 0x1DAD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E0C JUMPI PUSH2 0x1E01 PUSH0 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1E51 JUMPI PUSH2 0x1E22 DUP2 PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0x1E2B DUP5 PUSH2 0x1D0E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1E3A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1E4E PUSH2 0x1E46 DUP6 PUSH2 0x1D0E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1DEE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E71 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1E56 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E89 DUP4 DUP4 PUSH2 0x1E62 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EA2 DUP3 PUSH2 0x15DA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EBB JUMPI PUSH2 0x1EBA PUSH2 0x17AA JUMP JUMPDEST JUMPDEST PUSH2 0x1EC5 DUP3 SLOAD PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x1ED0 DUP3 DUP3 DUP6 PUSH2 0x1E10 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1F01 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1EEF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1EF9 DUP6 DUP3 PUSH2 0x1E7E JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1F60 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1F0F DUP7 PUSH2 0x1CFC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F36 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F11 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1F53 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1F4F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1E62 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F9F DUP3 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAA DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FC2 JUMPI PUSH2 0x1FC1 PUSH2 0x1F68 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FDB PUSH0 DUP4 ADD DUP7 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x1FE8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AB3 JUMP JUMPDEST PUSH2 0x1FF5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2034 DUP3 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2066 JUMPI PUSH2 0x2065 PUSH2 0x1F68 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2085 DUP3 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x208F DUP2 DUP6 PUSH2 0x2071 JUMP JUMPDEST SWAP4 POP PUSH2 0x209F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15F4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x20B7 DUP2 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x20C1 DUP2 DUP7 PUSH2 0x2071 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH0 DUP2 EQ PUSH2 0x20DB JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x20F0 JUMPI PUSH2 0x2122 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO DUP3 MUL DUP7 ADD SWAP4 POP PUSH2 0x2122 JUMP JUMPDEST PUSH2 0x20F9 DUP6 PUSH2 0x1CFC JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x211A JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20FB JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2136 DUP3 DUP6 PUSH2 0x207B JUMP JUMPDEST SWAP2 POP PUSH2 0x2142 DUP3 DUP5 PUSH2 0x20AB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2172 DUP3 PUSH2 0x214E JUMP JUMPDEST PUSH2 0x217C DUP2 DUP6 PUSH2 0x2158 JUMP JUMPDEST SWAP4 POP PUSH2 0x218C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15F4 JUMP JUMPDEST PUSH2 0x2195 DUP2 PUSH2 0x161C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x21B3 PUSH0 DUP4 ADD DUP8 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x21C0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x21CD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AB3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x21DF DUP2 DUP5 PUSH2 0x2168 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21F8 DUP2 PUSH2 0x1552 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2213 JUMPI PUSH2 0x2212 PUSH2 0x151F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2220 DUP5 DUP3 DUP6 ADD PUSH2 0x21EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x223C PUSH0 DUP4 ADD DUP6 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x2249 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH9 0x747470733A2F2F626C PUSH2 0x636B 0x2D PUSH6 0x6C6465726C79 0x2D PUSH24 0x6F6C766572696E652D3638352E6D7970696E6174612E636C PUSH16 0x75642F697066732FA264697066735822 SLT KECCAK256 0xC CALLER SUB BLOCKHASH 0xEE 0xD7 0x4D PUSH15 0xB949969BE5E39F5AB4ED92747F5A74 0xCC MSTORE8 PUSH25 0x5447B286382164736F6C634300081400330000000000000000 ",
							"sourceMap": "133:1106:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2666:300:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3761:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5647:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5473:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;364:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6293:578:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6937:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;990:247:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3536:118:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3114:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3914:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5868:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7135:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;568:263:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6078:153:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2666:300;2768:4;2818:25;2803:40;;;:11;:40;;;;:104;;;;2874:33;2859:48;;;:11;:48;;;;2803:104;:156;;;;2923:36;2947:11;2923:23;:36::i;:::-;2803:156;2784:175;;2666:300;;;:::o;3761:89::-;3806:13;3838:5;3831:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3761:89;:::o;5647:154::-;5714:7;5733:22;5747:7;5733:13;:22::i;:::-;;5773:21;5786:7;5773:12;:21::i;:::-;5766:28;;5647:154;;;:::o;5473:113::-;5544:35;5553:2;5557:7;5566:12;:10;:12::i;:::-;5544:8;:35::i;:::-;5473:113;;:::o;364:198:0:-;422:10;:22;433:10;422:22;;;;;;;;;;;;;;;450:9;422:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;488:9;470:6;:15;477:7;;470:15;;;;;;;;;;;:27;;;;;;:::i;:::-;;507:26;513:10;525:7;;507:5;:26::i;:::-;554:1;543:7;;:12;;;;;;;:::i;:::-;;;;;;;;364:198;:::o;6293:578:2:-;6401:1;6387:16;;:2;:16;;;6383:87;;6456:1;6426:33;;;;;;;;;;;:::i;:::-;;;;;;;;6383:87;6688:21;6712:34;6720:2;6724:7;6733:12;:10;:12::i;:::-;6712:7;:34::i;:::-;6688:58;;6777:4;6760:21;;:13;:21;;;6756:109;;6825:4;6831:7;6840:13;6804:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6756:109;6373:498;6293:578;;;:::o;6937:132::-;7023:39;7040:4;7046:2;7050:7;7023:39;;;;;;;;;;;;:16;:39::i;:::-;6937:132;;;:::o;990:247:0:-;1033:15;1059:25;1100:7;;1087:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1059:49;;1123:9;1118:87;1142:7;;1138:1;:11;1118:87;;;1185:6;:9;1192:1;1185:9;;;;;;;;;;;1170:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;1180:1;1170:12;;;;;;;;:::i;:::-;;;;;;;:24;;;;1151:3;;;;;:::i;:::-;;;;1118:87;;;;1221:9;1214:16;;;990:247;:::o;3536:118:2:-;3599:7;3625:22;3639:7;3625:13;:22::i;:::-;3618:29;;3536:118;;;:::o;3114:208::-;3177:7;3217:1;3200:19;;:5;:19;;;3196:87;;3269:1;3242:30;;;;;;;;;;;:::i;:::-;;;;;;;;3196:87;3299:9;:16;3309:5;3299:16;;;;;;;;;;;;;;;;3292:23;;3114:208;;;:::o;3914:93::-;3961:13;3993:7;3986:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3914:93;:::o;5868:144::-;5953:52;5972:12;:10;:12::i;:::-;5986:8;5996;5953:18;:52::i;:::-;5868:144;;:::o;7135:208::-;7248:31;7261:4;7267:2;7271:7;7248:12;:31::i;:::-;7289:47;7312:4;7318:2;7322:7;7331:4;7289:22;:47::i;:::-;7135:208;;;;:::o;568:263:0:-;633:13;734:21;758:10;:8;:10::i;:::-;734:34;;799:7;808:6;:15;815:7;;808:15;;;;;;;;;;;785:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;778:46;;;568:263;;;:::o;6078:153:2:-;6166:4;6189:18;:25;6208:5;6189:25;;;;;;;;;;;;;;;:35;6215:8;6189:35;;;;;;;;;;;;;;;;;;;;;;;;;6182:42;;6078:153;;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;18288:241:2:-;18351:7;18370:13;18386:17;18395:7;18386:8;:17::i;:::-;18370:33;;18434:1;18417:19;;:5;:19;;;18413:88;;18482:7;18459:31;;;;;;;;;;;:::i;:::-;;;;;;;;18413:88;18517:5;18510:12;;;18288:241;;;:::o;8088:127::-;8158:7;8184:15;:24;8200:7;8184:24;;;;;;;;;;;;;;;;;;;;;8177:31;;8088:127;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;16568:120:2:-;16648:33;16657:2;16661:7;16670:4;16676;16648:8;:33::i;:::-;16568:120;;;:::o;12105:327::-;12186:1;12172:16;;:2;:16;;;12168:87;;12241:1;12211:33;;;;;;;;;;;:::i;:::-;;;;;;;;12168:87;12264:21;12288:32;12296:2;12300:7;12317:1;12288:7;:32::i;:::-;12264:56;;12359:1;12334:27;;:13;:27;;;12330:96;;12412:1;12384:31;;;;;;;;;;;:::i;:::-;;;;;;;;12330:96;12158:274;12105:327;;:::o;10988:795::-;11074:7;11093:12;11108:17;11117:7;11108:8;:17::i;:::-;11093:32;;11201:1;11185:18;;:4;:18;;;11181:86;;11219:37;11236:4;11242;11248:7;11219:16;:37::i;:::-;11181:86;11327:1;11311:18;;:4;:18;;;11307:256;;11427:48;11444:1;11448:7;11465:1;11469:5;11427:8;:48::i;:::-;11537:1;11518:9;:15;11528:4;11518:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;11307:256;11591:1;11577:16;;:2;:16;;;11573:107;;11654:1;11637:9;:13;11647:2;11637:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;11573:107;11709:2;11690:7;:16;11698:7;11690:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;11746:7;11742:2;11727:27;;11736:4;11727:27;;;;;;;;;;;;11772:4;11765:11;;;10988:795;;;;;:::o;17741:312::-;17868:1;17848:22;;:8;:22;;;17844:91;;17915:8;17893:31;;;;;;;;;;;:::i;:::-;;;;;;;;17844:91;17982:8;17944:18;:25;17963:5;17944:25;;;;;;;;;;;;;;;:35;17970:8;17944:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;18027:8;18005:41;;18020:5;18005:41;;;18037:8;18005:41;;;;;;:::i;:::-;;;;;;;;17741:312;;;:::o;19068:782::-;19201:1;19184:2;:14;;;:18;19180:664;;;19238:2;19222:36;;;19259:12;:10;:12::i;:::-;19273:4;19279:7;19288:4;19222:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;19218:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19548:1;19531:6;:13;:18;19527:293;;19602:2;19580:25;;;;;;;;;;;:::i;:::-;;;;;;;;19527:293;19772:6;19766:13;19757:6;19753:2;19749:15;19742:38;19218:616;19350:41;;;19340:51;;;:6;:51;;;;19336:130;;19444:2;19422:25;;;;;;;;;;;:::i;:::-;;;;;;;;19336:130;19294:186;19180:664;19068:782;;;;:::o;837:147:0:-;888:13;912:65;;;;;;;;;;;;;;;;;;;837:147;:::o;7857:115:2:-;7923:7;7949;:16;7957:7;7949:16;;;;;;;;;;;;;;;;;;;;;7942:23;;7857:115;;;:::o;16870:662::-;17030:9;:31;;;;17059:1;17043:18;;:4;:18;;;;17030:31;17026:460;;;17077:13;17093:22;17107:7;17093:13;:22::i;:::-;17077:38;;17259:1;17243:18;;:4;:18;;;;:35;;;;;17274:4;17265:13;;:5;:13;;;;17243:35;:69;;;;;17283:29;17300:5;17307:4;17283:16;:29::i;:::-;17282:30;17243:69;17239:142;;;17361:4;17339:27;;;;;;;;;;;:::i;:::-;;;;;;;;17239:142;17399:9;17395:81;;;17453:7;17449:2;17433:28;;17442:5;17433:28;;;;;;;;;;;;17395:81;17063:423;17026:460;17523:2;17496:15;:24;17512:7;17496:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16870:662;;;;:::o;9232:368::-;9344:38;9358:5;9365:7;9374;9344:13;:38::i;:::-;9339:255;;9419:1;9402:19;;:5;:19;;;9398:186;;9471:7;9448:31;;;;;;;;;;;:::i;:::-;;;;;;;;9398:186;9552:7;9561;9525:44;;;;;;;;;;;;:::i;:::-;;;;;;;;9339:255;9232:368;;;:::o;8526:272::-;8629:4;8683:1;8664:21;;:7;:21;;;;:127;;;;;8711:7;8702:16;;:5;:16;;;:52;;;;8722:32;8739:5;8746:7;8722:16;:32::i;:::-;8702:52;:88;;;;8783:7;8758:32;;:21;8771:7;8758:12;:21::i;:::-;:32;;;8702:88;8664:127;8645:146;;8526:272;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:117;5122:1;5119;5112:12;5136:180;5184:77;5181:1;5174:88;5281:4;5278:1;5271:15;5305:4;5302:1;5295:15;5322:281;5405:27;5427:4;5405:27;:::i;:::-;5397:6;5393:40;5535:6;5523:10;5520:22;5499:18;5487:10;5484:34;5481:62;5478:88;;;5546:18;;:::i;:::-;5478:88;5586:10;5582:2;5575:22;5365:238;5322:281;;:::o;5609:129::-;5643:6;5670:20;;:::i;:::-;5660:30;;5699:33;5727:4;5719:6;5699:33;:::i;:::-;5609:129;;;:::o;5744:308::-;5806:4;5896:18;5888:6;5885:30;5882:56;;;5918:18;;:::i;:::-;5882:56;5956:29;5978:6;5956:29;:::i;:::-;5948:37;;6040:4;6034;6030:15;6022:23;;5744:308;;;:::o;6058:146::-;6155:6;6150:3;6145;6132:30;6196:1;6187:6;6182:3;6178:16;6171:27;6058:146;;;:::o;6210:425::-;6288:5;6313:66;6329:49;6371:6;6329:49;:::i;:::-;6313:66;:::i;:::-;6304:75;;6402:6;6395:5;6388:21;6440:4;6433:5;6429:16;6478:3;6469:6;6464:3;6460:16;6457:25;6454:112;;;6485:79;;:::i;:::-;6454:112;6575:54;6622:6;6617:3;6612;6575:54;:::i;:::-;6294:341;6210:425;;;;;:::o;6655:340::-;6711:5;6760:3;6753:4;6745:6;6741:17;6737:27;6727:122;;6768:79;;:::i;:::-;6727:122;6885:6;6872:20;6910:79;6985:3;6977:6;6970:4;6962:6;6958:17;6910:79;:::i;:::-;6901:88;;6717:278;6655:340;;;;:::o;7001:509::-;7070:6;7119:2;7107:9;7098:7;7094:23;7090:32;7087:119;;;7125:79;;:::i;:::-;7087:119;7273:1;7262:9;7258:17;7245:31;7303:18;7295:6;7292:30;7289:117;;;7325:79;;:::i;:::-;7289:117;7430:63;7485:7;7476:6;7465:9;7461:22;7430:63;:::i;:::-;7420:73;;7216:287;7001:509;;;;:::o;7516:619::-;7593:6;7601;7609;7658:2;7646:9;7637:7;7633:23;7629:32;7626:119;;;7664:79;;:::i;:::-;7626:119;7784:1;7809:53;7854:7;7845:6;7834:9;7830:22;7809:53;:::i;:::-;7799:63;;7755:117;7911:2;7937:53;7982:7;7973:6;7962:9;7958:22;7937:53;:::i;:::-;7927:63;;7882:118;8039:2;8065:53;8110:7;8101:6;8090:9;8086:22;8065:53;:::i;:::-;8055:63;;8010:118;7516:619;;;;;:::o;8141:124::-;8218:6;8252:5;8246:12;8236:22;;8141:124;;;:::o;8271:194::-;8380:11;8414:6;8409:3;8402:19;8454:4;8449:3;8445:14;8430:29;;8271:194;;;;:::o;8471:142::-;8548:4;8571:3;8563:11;;8601:4;8596:3;8592:14;8584:22;;8471:142;;;:::o;8619:159::-;8693:11;8727:6;8722:3;8715:19;8767:4;8762:3;8758:14;8743:29;;8619:159;;;;:::o;8784:357::-;8862:3;8890:39;8923:5;8890:39;:::i;:::-;8945:61;8999:6;8994:3;8945:61;:::i;:::-;8938:68;;9015:65;9073:6;9068:3;9061:4;9054:5;9050:16;9015:65;:::i;:::-;9105:29;9127:6;9105:29;:::i;:::-;9100:3;9096:39;9089:46;;8866:275;8784:357;;;;:::o;9147:196::-;9236:10;9271:66;9333:3;9325:6;9271:66;:::i;:::-;9257:80;;9147:196;;;;:::o;9349:123::-;9429:4;9461;9456:3;9452:14;9444:22;;9349:123;;;:::o;9506:991::-;9645:3;9674:64;9732:5;9674:64;:::i;:::-;9754:96;9843:6;9838:3;9754:96;:::i;:::-;9747:103;;9876:3;9921:4;9913:6;9909:17;9904:3;9900:27;9951:66;10011:5;9951:66;:::i;:::-;10040:7;10071:1;10056:396;10081:6;10078:1;10075:13;10056:396;;;10152:9;10146:4;10142:20;10137:3;10130:33;10203:6;10197:13;10231:84;10310:4;10295:13;10231:84;:::i;:::-;10223:92;;10338:70;10401:6;10338:70;:::i;:::-;10328:80;;10437:4;10432:3;10428:14;10421:21;;10116:336;10103:1;10100;10096:9;10091:14;;10056:396;;;10060:14;10468:4;10461:11;;10488:3;10481:10;;9650:847;;;;;9506:991;;;;:::o;10503:413::-;10666:4;10704:2;10693:9;10689:18;10681:26;;10753:9;10747:4;10743:20;10739:1;10728:9;10724:17;10717:47;10781:128;10904:4;10895:6;10781:128;:::i;:::-;10773:136;;10503:413;;;;:::o;10922:329::-;10981:6;11030:2;11018:9;11009:7;11005:23;11001:32;10998:119;;;11036:79;;:::i;:::-;10998:119;11156:1;11181:53;11226:7;11217:6;11206:9;11202:22;11181:53;:::i;:::-;11171:63;;11127:117;10922:329;;;;:::o;11257:118::-;11344:24;11362:5;11344:24;:::i;:::-;11339:3;11332:37;11257:118;;:::o;11381:222::-;11474:4;11512:2;11501:9;11497:18;11489:26;;11525:71;11593:1;11582:9;11578:17;11569:6;11525:71;:::i;:::-;11381:222;;;;:::o;11609:116::-;11679:21;11694:5;11679:21;:::i;:::-;11672:5;11669:32;11659:60;;11715:1;11712;11705:12;11659:60;11609:116;:::o;11731:133::-;11774:5;11812:6;11799:20;11790:29;;11828:30;11852:5;11828:30;:::i;:::-;11731:133;;;;:::o;11870:468::-;11935:6;11943;11992:2;11980:9;11971:7;11967:23;11963:32;11960:119;;;11998:79;;:::i;:::-;11960:119;12118:1;12143:53;12188:7;12179:6;12168:9;12164:22;12143:53;:::i;:::-;12133:63;;12089:117;12245:2;12271:50;12313:7;12304:6;12293:9;12289:22;12271:50;:::i;:::-;12261:60;;12216:115;11870:468;;;;;:::o;12344:307::-;12405:4;12495:18;12487:6;12484:30;12481:56;;;12517:18;;:::i;:::-;12481:56;12555:29;12577:6;12555:29;:::i;:::-;12547:37;;12639:4;12633;12629:15;12621:23;;12344:307;;;:::o;12657:423::-;12734:5;12759:65;12775:48;12816:6;12775:48;:::i;:::-;12759:65;:::i;:::-;12750:74;;12847:6;12840:5;12833:21;12885:4;12878:5;12874:16;12923:3;12914:6;12909:3;12905:16;12902:25;12899:112;;;12930:79;;:::i;:::-;12899:112;13020:54;13067:6;13062:3;13057;13020:54;:::i;:::-;12740:340;12657:423;;;;;:::o;13099:338::-;13154:5;13203:3;13196:4;13188:6;13184:17;13180:27;13170:122;;13211:79;;:::i;:::-;13170:122;13328:6;13315:20;13353:78;13427:3;13419:6;13412:4;13404:6;13400:17;13353:78;:::i;:::-;13344:87;;13160:277;13099:338;;;;:::o;13443:943::-;13538:6;13546;13554;13562;13611:3;13599:9;13590:7;13586:23;13582:33;13579:120;;;13618:79;;:::i;:::-;13579:120;13738:1;13763:53;13808:7;13799:6;13788:9;13784:22;13763:53;:::i;:::-;13753:63;;13709:117;13865:2;13891:53;13936:7;13927:6;13916:9;13912:22;13891:53;:::i;:::-;13881:63;;13836:118;13993:2;14019:53;14064:7;14055:6;14044:9;14040:22;14019:53;:::i;:::-;14009:63;;13964:118;14149:2;14138:9;14134:18;14121:32;14180:18;14172:6;14169:30;14166:117;;;14202:79;;:::i;:::-;14166:117;14307:62;14361:7;14352:6;14341:9;14337:22;14307:62;:::i;:::-;14297:72;;14092:287;13443:943;;;;;;;:::o;14392:474::-;14460:6;14468;14517:2;14505:9;14496:7;14492:23;14488:32;14485:119;;;14523:79;;:::i;:::-;14485:119;14643:1;14668:53;14713:7;14704:6;14693:9;14689:22;14668:53;:::i;:::-;14658:63;;14614:117;14770:2;14796:53;14841:7;14832:6;14821:9;14817:22;14796:53;:::i;:::-;14786:63;;14741:118;14392:474;;;;;:::o;14872:180::-;14920:77;14917:1;14910:88;15017:4;15014:1;15007:15;15041:4;15038:1;15031:15;15058:320;15102:6;15139:1;15133:4;15129:12;15119:22;;15186:1;15180:4;15176:12;15207:18;15197:81;;15263:4;15255:6;15251:17;15241:27;;15197:81;15325:2;15317:6;15314:14;15294:18;15291:38;15288:84;;15344:18;;:::i;:::-;15288:84;15109:269;15058:320;;;:::o;15384:141::-;15433:4;15456:3;15448:11;;15479:3;15476:1;15469:14;15513:4;15510:1;15500:18;15492:26;;15384:141;;;:::o;15531:93::-;15568:6;15615:2;15610;15603:5;15599:14;15595:23;15585:33;;15531:93;;;:::o;15630:107::-;15674:8;15724:5;15718:4;15714:16;15693:37;;15630:107;;;;:::o;15743:393::-;15812:6;15862:1;15850:10;15846:18;15885:97;15915:66;15904:9;15885:97;:::i;:::-;16003:39;16033:8;16022:9;16003:39;:::i;:::-;15991:51;;16075:4;16071:9;16064:5;16060:21;16051:30;;16124:4;16114:8;16110:19;16103:5;16100:30;16090:40;;15819:317;;15743:393;;;;;:::o;16142:60::-;16170:3;16191:5;16184:12;;16142:60;;;:::o;16208:142::-;16258:9;16291:53;16309:34;16318:24;16336:5;16318:24;:::i;:::-;16309:34;:::i;:::-;16291:53;:::i;:::-;16278:66;;16208:142;;;:::o;16356:75::-;16399:3;16420:5;16413:12;;16356:75;;;:::o;16437:269::-;16547:39;16578:7;16547:39;:::i;:::-;16608:91;16657:41;16681:16;16657:41;:::i;:::-;16649:6;16642:4;16636:11;16608:91;:::i;:::-;16602:4;16595:105;16513:193;16437:269;;;:::o;16712:73::-;16757:3;16712:73;:::o;16791:189::-;16868:32;;:::i;:::-;16909:65;16967:6;16959;16953:4;16909:65;:::i;:::-;16844:136;16791:189;;:::o;16986:186::-;17046:120;17063:3;17056:5;17053:14;17046:120;;;17117:39;17154:1;17147:5;17117:39;:::i;:::-;17090:1;17083:5;17079:13;17070:22;;17046:120;;;16986:186;;:::o;17178:543::-;17279:2;17274:3;17271:11;17268:446;;;17313:38;17345:5;17313:38;:::i;:::-;17397:29;17415:10;17397:29;:::i;:::-;17387:8;17383:44;17580:2;17568:10;17565:18;17562:49;;;17601:8;17586:23;;17562:49;17624:80;17680:22;17698:3;17680:22;:::i;:::-;17670:8;17666:37;17653:11;17624:80;:::i;:::-;17283:431;;17268:446;17178:543;;;:::o;17727:117::-;17781:8;17831:5;17825:4;17821:16;17800:37;;17727:117;;;;:::o;17850:169::-;17894:6;17927:51;17975:1;17971:6;17963:5;17960:1;17956:13;17927:51;:::i;:::-;17923:56;18008:4;18002;17998:15;17988:25;;17901:118;17850:169;;;;:::o;18024:295::-;18100:4;18246:29;18271:3;18265:4;18246:29;:::i;:::-;18238:37;;18308:3;18305:1;18301:11;18295:4;18292:21;18284:29;;18024:295;;;;:::o;18324:1395::-;18441:37;18474:3;18441:37;:::i;:::-;18543:18;18535:6;18532:30;18529:56;;;18565:18;;:::i;:::-;18529:56;18609:38;18641:4;18635:11;18609:38;:::i;:::-;18694:67;18754:6;18746;18740:4;18694:67;:::i;:::-;18788:1;18812:4;18799:17;;18844:2;18836:6;18833:14;18861:1;18856:618;;;;19518:1;19535:6;19532:77;;;19584:9;19579:3;19575:19;19569:26;19560:35;;19532:77;19635:67;19695:6;19688:5;19635:67;:::i;:::-;19629:4;19622:81;19491:222;18826:887;;18856:618;18908:4;18904:9;18896:6;18892:22;18942:37;18974:4;18942:37;:::i;:::-;19001:1;19015:208;19029:7;19026:1;19023:14;19015:208;;;19108:9;19103:3;19099:19;19093:26;19085:6;19078:42;19159:1;19151:6;19147:14;19137:24;;19206:2;19195:9;19191:18;19178:31;;19052:4;19049:1;19045:12;19040:17;;19015:208;;;19251:6;19242:7;19239:19;19236:179;;;19309:9;19304:3;19300:19;19294:26;19352:48;19394:4;19386:6;19382:17;19371:9;19352:48;:::i;:::-;19344:6;19337:64;19259:156;19236:179;19461:1;19457;19449:6;19445:14;19441:22;19435:4;19428:36;18863:611;;;18826:887;;18416:1303;;;18324:1395;;:::o;19725:180::-;19773:77;19770:1;19763:88;19870:4;19867:1;19860:15;19894:4;19891:1;19884:15;19911:191;19951:3;19970:20;19988:1;19970:20;:::i;:::-;19965:25;;20004:20;20022:1;20004:20;:::i;:::-;19999:25;;20047:1;20044;20040:9;20033:16;;20068:3;20065:1;20062:10;20059:36;;;20075:18;;:::i;:::-;20059:36;19911:191;;;;:::o;20108:442::-;20257:4;20295:2;20284:9;20280:18;20272:26;;20308:71;20376:1;20365:9;20361:17;20352:6;20308:71;:::i;:::-;20389:72;20457:2;20446:9;20442:18;20433:6;20389:72;:::i;:::-;20471;20539:2;20528:9;20524:18;20515:6;20471:72;:::i;:::-;20108:442;;;;;;:::o;20556:180::-;20604:77;20601:1;20594:88;20701:4;20698:1;20691:15;20725:4;20722:1;20715:15;20742:233;20781:3;20804:24;20822:5;20804:24;:::i;:::-;20795:33;;20850:66;20843:5;20840:77;20837:103;;20920:18;;:::i;:::-;20837:103;20967:1;20960:5;20956:13;20949:20;;20742:233;;;:::o;20981:148::-;21083:11;21120:3;21105:18;;20981:148;;;;:::o;21135:390::-;21241:3;21269:39;21302:5;21269:39;:::i;:::-;21324:89;21406:6;21401:3;21324:89;:::i;:::-;21317:96;;21422:65;21480:6;21475:3;21468:4;21461:5;21457:16;21422:65;:::i;:::-;21512:6;21507:3;21503:16;21496:23;;21245:280;21135:390;;;;:::o;21555:874::-;21658:3;21695:5;21689:12;21724:36;21750:9;21724:36;:::i;:::-;21776:89;21858:6;21853:3;21776:89;:::i;:::-;21769:96;;21896:1;21885:9;21881:17;21912:1;21907:166;;;;22087:1;22082:341;;;;21874:549;;21907:166;21991:4;21987:9;21976;21972:25;21967:3;21960:38;22053:6;22046:14;22039:22;22031:6;22027:35;22022:3;22018:45;22011:52;;21907:166;;22082:341;22149:38;22181:5;22149:38;:::i;:::-;22209:1;22223:154;22237:6;22234:1;22231:13;22223:154;;;22311:7;22305:14;22301:1;22296:3;22292:11;22285:35;22361:1;22352:7;22348:15;22337:26;;22259:4;22256:1;22252:12;22247:17;;22223:154;;;22406:6;22401:3;22397:16;22390:23;;22089:334;;21874:549;;21662:767;;21555:874;;;;:::o;22435:429::-;22612:3;22634:95;22725:3;22716:6;22634:95;:::i;:::-;22627:102;;22746:92;22834:3;22825:6;22746:92;:::i;:::-;22739:99;;22855:3;22848:10;;22435:429;;;;;:::o;22870:98::-;22921:6;22955:5;22949:12;22939:22;;22870:98;;;:::o;22974:168::-;23057:11;23091:6;23086:3;23079:19;23131:4;23126:3;23122:14;23107:29;;22974:168;;;;:::o;23148:373::-;23234:3;23262:38;23294:5;23262:38;:::i;:::-;23316:70;23379:6;23374:3;23316:70;:::i;:::-;23309:77;;23395:65;23453:6;23448:3;23441:4;23434:5;23430:16;23395:65;:::i;:::-;23485:29;23507:6;23485:29;:::i;:::-;23480:3;23476:39;23469:46;;23238:283;23148:373;;;;:::o;23527:640::-;23722:4;23760:3;23749:9;23745:19;23737:27;;23774:71;23842:1;23831:9;23827:17;23818:6;23774:71;:::i;:::-;23855:72;23923:2;23912:9;23908:18;23899:6;23855:72;:::i;:::-;23937;24005:2;23994:9;23990:18;23981:6;23937:72;:::i;:::-;24056:9;24050:4;24046:20;24041:2;24030:9;24026:18;24019:48;24084:76;24155:4;24146:6;24084:76;:::i;:::-;24076:84;;23527:640;;;;;;;:::o;24173:141::-;24229:5;24260:6;24254:13;24245:22;;24276:32;24302:5;24276:32;:::i;:::-;24173:141;;;;:::o;24320:349::-;24389:6;24438:2;24426:9;24417:7;24413:23;24409:32;24406:119;;;24444:79;;:::i;:::-;24406:119;24564:1;24589:63;24644:7;24635:6;24624:9;24620:22;24589:63;:::i;:::-;24579:73;;24535:127;24320:349;;;;:::o;24675:332::-;24796:4;24834:2;24823:9;24819:18;24811:26;;24847:71;24915:1;24904:9;24900:17;24891:6;24847:71;:::i;:::-;24928:72;24996:2;24985:9;24981:18;24972:6;24928:72;:::i;:::-;24675:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1778800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"minting(string)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"viewTokens()": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 133,
									"end": 1239,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 133,
									"end": 1239,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 133,
									"end": 1239,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 163,
									"end": 182,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 163,
									"end": 182,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 277,
									"end": 357,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 277,
									"end": 357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 277,
									"end": 357,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 277,
									"end": 357,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 277,
									"end": 357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 277,
									"end": 357,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 277,
									"end": 357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 277,
									"end": 357,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 340,
									"end": 345,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2446,
									"end": 2451,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2438,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2438,
									"end": 2451,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2438,
									"end": 2451,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2438,
									"end": 2451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2438,
									"end": 2451,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2438,
									"end": 2451,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2438,
									"end": 2451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2438,
									"end": 2451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2438,
									"end": 2451,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2438,
									"end": 2451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2438,
									"end": 2451,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2471,
									"end": 2478,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2461,
									"end": 2468,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2461,
									"end": 2478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2372,
									"end": 2485,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2372,
									"end": 2485,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 277,
									"end": 357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 277,
									"end": 357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 133,
									"end": 1239,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 133,
									"end": 1239,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 133,
									"end": 1239,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 133,
									"end": 1239,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 133,
									"end": 1239,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 1239,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 133,
									"end": 1239,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 1239,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 1239,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 133,
									"end": 1239,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 1239,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c330340eed74d6eb949969be5e39f5ab4ed92747f5a74cc53785447b286382164736f6c63430008140033",
									".code": [
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "4BF5BF35"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "4BF5BF35"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "BDC9008"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 1239,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2666,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2666,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2666,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3761,
											"end": 3850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3761,
											"end": 3850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5647,
											"end": 5801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5647,
											"end": 5801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5647,
											"end": 5801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5473,
											"end": 5586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5473,
											"end": 5586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 364,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 364,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 364,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 364,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 364,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 364,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 364,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 364,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 364,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6293,
											"end": 6871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 6293,
											"end": 6871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6937,
											"end": 7069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6937,
											"end": 7069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 990,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 990,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3536,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3536,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3536,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3114,
											"end": 3322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3114,
											"end": 3322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3114,
											"end": 3322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3914,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3914,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5868,
											"end": 6012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5868,
											"end": 6012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 7135,
											"end": 7343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 7135,
											"end": 7343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 568,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 568,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 568,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 568,
											"end": 831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 568,
											"end": 831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 568,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 568,
											"end": 831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 568,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 568,
											"end": 831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 568,
											"end": 831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 568,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 6078,
											"end": 6231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6078,
											"end": 6231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6078,
											"end": 6231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2768,
											"end": 2772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2843,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2803,
											"end": 2843,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2803,
											"end": 2843,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2814,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2843,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2803,
											"end": 2843,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2843,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2803,
											"end": 2907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2859,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2859,
											"end": 2907,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2859,
											"end": 2907,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2859,
											"end": 2870,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2859,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2859,
											"end": 2907,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2859,
											"end": 2907,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2859,
											"end": 2907,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2907,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2803,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2803,
											"end": 2959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2947,
											"end": 2958,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2923,
											"end": 2959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2959,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2803,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3806,
											"end": 3819,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3838,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3831,
											"end": 3843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3831,
											"end": 3843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3831,
											"end": 3843,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5714,
											"end": 5721,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5733,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5747,
											"end": 5754,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5733,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5733,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5733,
											"end": 5755,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5733,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5733,
											"end": 5755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5773,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5786,
											"end": 5793,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5773,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5773,
											"end": 5794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5773,
											"end": 5794,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5773,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5557,
											"end": 5564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5566,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5566,
											"end": 5578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5578,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5566,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5544,
											"end": 5579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5579,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5544,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 364,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 364,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 422,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 422,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 443,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 422,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 422,
											"end": 444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 422,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 422,
											"end": 444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 422,
											"end": 444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 422,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 422,
											"end": 444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 422,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 422,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 444,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 450,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 422,
											"end": 460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 422,
											"end": 460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 422,
											"end": 460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 422,
											"end": 460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 488,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 470,
											"end": 476,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 470,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 477,
											"end": 484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 470,
											"end": 485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 470,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 470,
											"end": 485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 470,
											"end": 485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 470,
											"end": 485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 470,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 470,
											"end": 485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 470,
											"end": 485,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 470,
											"end": 497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 470,
											"end": 497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 470,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 470,
											"end": 497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 470,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 470,
											"end": 497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 470,
											"end": 497,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 470,
											"end": 497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 470,
											"end": 497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 513,
											"end": 523,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 525,
											"end": 532,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 525,
											"end": 532,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 507,
											"end": 533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 533,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 507,
											"end": 533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 554,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 543,
											"end": 550,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 543,
											"end": 550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 543,
											"end": 555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 543,
											"end": 555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 543,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 543,
											"end": 555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 543,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 543,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 543,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 543,
											"end": 555,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 543,
											"end": 555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 543,
											"end": 555,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 543,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 543,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 543,
											"end": 555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 543,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 543,
											"end": 555,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 543,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6401,
											"end": 6402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6387,
											"end": 6403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6387,
											"end": 6403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6387,
											"end": 6389,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6387,
											"end": 6403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6387,
											"end": 6403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6387,
											"end": 6403,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6383,
											"end": 6470,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6456,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 6426,
											"end": 6459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6459,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6383,
											"end": 6470,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6383,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6688,
											"end": 6709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6720,
											"end": 6722,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6724,
											"end": 6731,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6733,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6733,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6733,
											"end": 6745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6733,
											"end": 6745,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6733,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6712,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6712,
											"end": 6746,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6712,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6688,
											"end": 6746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6688,
											"end": 6746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6777,
											"end": 6781,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 6781,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6760,
											"end": 6781,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 6773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 6781,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6760,
											"end": 6781,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6760,
											"end": 6781,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6756,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6756,
											"end": 6865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6825,
											"end": 6829,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6831,
											"end": 6838,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6840,
											"end": 6853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "PUSH",
											"source": 2,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6804,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6854,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6756,
											"end": 6865,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6756,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6373,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6293,
											"end": 6871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7040,
											"end": 7044,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7046,
											"end": 7048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7050,
											"end": 7057,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 7023,
											"end": 7062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7023,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 7069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1059,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1100,
											"end": 1107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1087,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1059,
											"end": 1108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1205,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1118,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1142,
											"end": 1149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1149,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1118,
											"end": 1205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1170,
											"end": 1194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1170,
											"end": 1194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1170,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1151,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1118,
											"end": 1205,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1205,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1118,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3599,
											"end": 3606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3639,
											"end": 3646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3625,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3625,
											"end": 3647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3625,
											"end": 3647,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3625,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3647,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3177,
											"end": 3184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3219,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3200,
											"end": 3219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3205,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3219,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3200,
											"end": 3219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3219,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3196,
											"end": 3283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "PUSH",
											"source": 2,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3242,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3283,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3196,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3308,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3314,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 3974,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3993,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3986,
											"end": 4000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3986,
											"end": 4000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 4007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5972,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5972,
											"end": 5984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5986,
											"end": 5994,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5953,
											"end": 6005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 6005,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5953,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5868,
											"end": 6012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7261,
											"end": 7265,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7267,
											"end": 7269,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7271,
											"end": 7278,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 7248,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7279,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7248,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7289,
											"end": 7336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7312,
											"end": 7316,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7322,
											"end": 7329,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7331,
											"end": 7335,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7289,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7289,
											"end": 7336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7289,
											"end": 7336,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7289,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7135,
											"end": 7343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 831,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 568,
											"end": 831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 734,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 758,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 758,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 758,
											"end": 768,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 758,
											"end": 768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 734,
											"end": 768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 734,
											"end": 768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 799,
											"end": 806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 808,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 815,
											"end": 822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 808,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 808,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 785,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 785,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 778,
											"end": 824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 778,
											"end": 824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 778,
											"end": 824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6207,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6213,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6214,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 6189,
											"end": 6224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6182,
											"end": 6224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6182,
											"end": 6224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18288,
											"end": 18529,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 18288,
											"end": 18529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18351,
											"end": 18358,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18370,
											"end": 18383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18386,
											"end": 18403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 18395,
											"end": 18402,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18386,
											"end": 18394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 18386,
											"end": 18403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18386,
											"end": 18403,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 18386,
											"end": 18403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18370,
											"end": 18403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18434,
											"end": 18435,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18417,
											"end": 18436,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18417,
											"end": 18436,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18417,
											"end": 18422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18417,
											"end": 18436,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18417,
											"end": 18436,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18417,
											"end": 18436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 18413,
											"end": 18501,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18482,
											"end": 18489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 18459,
											"end": 18490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18459,
											"end": 18490,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18413,
											"end": 18501,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 18413,
											"end": 18501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18517,
											"end": 18522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18510,
											"end": 18522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18510,
											"end": 18522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18510,
											"end": 18522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18288,
											"end": 18529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18288,
											"end": 18529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18288,
											"end": 18529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18288,
											"end": 18529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8088,
											"end": 8215,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 8088,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8184,
											"end": 8208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8177,
											"end": 8208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8177,
											"end": 8208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8088,
											"end": 8215,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8088,
											"end": 8215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8088,
											"end": 8215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8088,
											"end": 8215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16568,
											"end": 16688,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 16568,
											"end": 16688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16648,
											"end": 16681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 16657,
											"end": 16659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16661,
											"end": 16668,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16670,
											"end": 16674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16676,
											"end": 16680,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16648,
											"end": 16656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 16648,
											"end": 16681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16648,
											"end": 16681,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 16648,
											"end": 16681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 16688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 16688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 16688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16568,
											"end": 16688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12105,
											"end": 12432,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 12105,
											"end": 12432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12186,
											"end": 12187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12172,
											"end": 12188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12172,
											"end": 12188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12172,
											"end": 12174,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12172,
											"end": 12188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12172,
											"end": 12188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12172,
											"end": 12188,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12168,
											"end": 12255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 12168,
											"end": 12255,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12241,
											"end": 12242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 12211,
											"end": 12244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12244,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12168,
											"end": 12255,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 12168,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 12296,
											"end": 12298,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12300,
											"end": 12307,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12317,
											"end": 12318,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12288,
											"end": 12320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12320,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 12288,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12264,
											"end": 12320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12359,
											"end": 12360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12334,
											"end": 12361,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12334,
											"end": 12361,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12334,
											"end": 12347,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12334,
											"end": 12361,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12334,
											"end": 12361,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12334,
											"end": 12361,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12330,
											"end": 12426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 12330,
											"end": 12426,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12412,
											"end": 12413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "PUSH",
											"source": 2,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 12384,
											"end": 12415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12415,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12330,
											"end": 12426,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 12330,
											"end": 12426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12158,
											"end": 12432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12105,
											"end": 12432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12105,
											"end": 12432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12105,
											"end": 12432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10988,
											"end": 11783,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 10988,
											"end": 11783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11074,
											"end": 11081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11093,
											"end": 11105,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11108,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 11117,
											"end": 11124,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11108,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 11108,
											"end": 11125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11108,
											"end": 11125,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 11108,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11093,
											"end": 11125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11093,
											"end": 11125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11201,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11185,
											"end": 11189,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11181,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 11181,
											"end": 11267,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11219,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 11236,
											"end": 11240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11242,
											"end": 11246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11248,
											"end": 11255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11219,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 11219,
											"end": 11256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11219,
											"end": 11256,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 11219,
											"end": 11256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11181,
											"end": 11267,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 11181,
											"end": 11267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11327,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11311,
											"end": 11329,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11311,
											"end": 11329,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11329,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11311,
											"end": 11329,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11311,
											"end": 11329,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 11307,
											"end": 11563,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11427,
											"end": 11475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 11444,
											"end": 11445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11448,
											"end": 11455,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11465,
											"end": 11466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11469,
											"end": 11474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11427,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 11427,
											"end": 11475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11427,
											"end": 11475,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 11427,
											"end": 11475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11537,
											"end": 11538,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11518,
											"end": 11527,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11528,
											"end": 11532,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11518,
											"end": 11538,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11538,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11538,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11538,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11538,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11538,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11538,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11538,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11518,
											"end": 11538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11307,
											"end": 11563,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 11307,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11591,
											"end": 11592,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11577,
											"end": 11593,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11577,
											"end": 11593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11577,
											"end": 11579,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11577,
											"end": 11593,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11577,
											"end": 11593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11577,
											"end": 11593,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 11573,
											"end": 11680,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11654,
											"end": 11655,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11637,
											"end": 11646,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11647,
											"end": 11649,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11650,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11637,
											"end": 11655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11655,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11655,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11655,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11655,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11637,
											"end": 11655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11573,
											"end": 11680,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 11573,
											"end": 11680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11709,
											"end": 11711,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11697,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11690,
											"end": 11706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11698,
											"end": 11705,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11706,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11706,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11706,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11690,
											"end": 11706,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11706,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11706,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11706,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11690,
											"end": 11706,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11690,
											"end": 11706,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11690,
											"end": 11711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11746,
											"end": 11753,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11742,
											"end": 11744,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11736,
											"end": 11740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11727,
											"end": 11754,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 11772,
											"end": 11776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11765,
											"end": 11776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11765,
											"end": 11776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11765,
											"end": 11776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10988,
											"end": 11783,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10988,
											"end": 11783,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10988,
											"end": 11783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10988,
											"end": 11783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10988,
											"end": 11783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10988,
											"end": 11783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17741,
											"end": 18053,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 17741,
											"end": 18053,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17868,
											"end": 17869,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17848,
											"end": 17870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17848,
											"end": 17870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17848,
											"end": 17856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17848,
											"end": 17870,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17848,
											"end": 17870,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17848,
											"end": 17870,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17844,
											"end": 17935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 17844,
											"end": 17935,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17915,
											"end": 17923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "PUSH",
											"source": 2,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 17893,
											"end": 17924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17893,
											"end": 17924,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17844,
											"end": 17935,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 17844,
											"end": 17935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17982,
											"end": 17990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17963,
											"end": 17968,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17944,
											"end": 17969,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17970,
											"end": 17978,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17944,
											"end": 17990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18027,
											"end": 18035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18020,
											"end": 18025,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 18037,
											"end": 18045,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 18005,
											"end": 18046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18005,
											"end": 18046,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 17741,
											"end": 18053,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17741,
											"end": 18053,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17741,
											"end": 18053,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17741,
											"end": 18053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19068,
											"end": 19850,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 19068,
											"end": 19850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19201,
											"end": 19202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19184,
											"end": 19186,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19184,
											"end": 19198,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19184,
											"end": 19198,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19184,
											"end": 19198,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 19184,
											"end": 19202,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 19180,
											"end": 19844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19180,
											"end": 19844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 19180,
											"end": 19844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19238,
											"end": 19240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19258,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19222,
											"end": 19258,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19258,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 19259,
											"end": 19271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 19259,
											"end": 19269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 19259,
											"end": 19271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19259,
											"end": 19271,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 19259,
											"end": 19271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19273,
											"end": 19277,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 19279,
											"end": 19286,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19288,
											"end": 19292,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 19222,
											"end": 19293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 19222,
											"end": 19293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 19222,
											"end": 19293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19548,
											"end": 19549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19531,
											"end": 19537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19531,
											"end": 19549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19527,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 19527,
											"end": 19820,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19602,
											"end": 19604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 19580,
											"end": 19605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19580,
											"end": 19605,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19527,
											"end": 19820,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 19527,
											"end": 19820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19772,
											"end": 19778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19766,
											"end": 19779,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19757,
											"end": 19763,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19753,
											"end": 19755,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19749,
											"end": 19764,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19742,
											"end": 19780,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 19218,
											"end": 19834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19350,
											"end": 19391,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 19350,
											"end": 19391,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 19350,
											"end": 19391,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 19340,
											"end": 19391,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19340,
											"end": 19391,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 19340,
											"end": 19391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19340,
											"end": 19346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19340,
											"end": 19391,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19340,
											"end": 19391,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 19340,
											"end": 19391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19340,
											"end": 19391,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 19336,
											"end": 19466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 19336,
											"end": 19466,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19444,
											"end": 19446,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 19422,
											"end": 19447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19336,
											"end": 19466,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 19336,
											"end": 19466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19294,
											"end": 19480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19180,
											"end": 19844,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 19180,
											"end": 19844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19068,
											"end": 19850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19068,
											"end": 19850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19068,
											"end": 19850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19068,
											"end": 19850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19068,
											"end": 19850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 837,
											"end": 984,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 837,
											"end": 984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 912,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 912,
											"end": 977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 912,
											"end": 977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 912,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 912,
											"end": 977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 912,
											"end": 977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 912,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 912,
											"end": 977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 912,
											"end": 977,
											"name": "PUSH data",
											"source": 0,
											"value": "82B359026E8C4A10545B72ABCEF5B7323D4FF62DDA9910B7E947419E0F56EBC4"
										},
										{
											"begin": 912,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 912,
											"end": 977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 977,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 912,
											"end": 977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7857,
											"end": 7972,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 7857,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7923,
											"end": 7930,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7949,
											"end": 7956,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7964,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7949,
											"end": 7965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 7965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 7965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7857,
											"end": 7972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7857,
											"end": 7972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7857,
											"end": 7972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7857,
											"end": 7972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 17532,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 16870,
											"end": 17532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17039,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 17030,
											"end": 17061,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17059,
											"end": 17060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17043,
											"end": 17061,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17043,
											"end": 17061,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17043,
											"end": 17047,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17043,
											"end": 17061,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17043,
											"end": 17061,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17043,
											"end": 17061,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17043,
											"end": 17061,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17061,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 17030,
											"end": 17061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17026,
											"end": 17486,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17026,
											"end": 17486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 17026,
											"end": 17486,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17077,
											"end": 17090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17093,
											"end": 17115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 17107,
											"end": 17114,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17093,
											"end": 17106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 17093,
											"end": 17115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17093,
											"end": 17115,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 17093,
											"end": 17115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17077,
											"end": 17115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17077,
											"end": 17115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17259,
											"end": 17260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17243,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17243,
											"end": 17261,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17247,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17243,
											"end": 17261,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17261,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17261,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17278,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 17243,
											"end": 17278,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17274,
											"end": 17278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17265,
											"end": 17278,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17265,
											"end": 17278,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17265,
											"end": 17270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17265,
											"end": 17278,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17265,
											"end": 17278,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17265,
											"end": 17278,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17265,
											"end": 17278,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17278,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 17243,
											"end": 17278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17312,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 17243,
											"end": 17312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17283,
											"end": 17312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 17300,
											"end": 17305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17307,
											"end": 17311,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17283,
											"end": 17299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 17283,
											"end": 17312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17283,
											"end": 17312,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 17283,
											"end": 17312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17282,
											"end": 17312,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17243,
											"end": 17312,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 17243,
											"end": 17312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17239,
											"end": 17381,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17239,
											"end": 17381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 17239,
											"end": 17381,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17361,
											"end": 17365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "PUSH",
											"source": 2,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 17339,
											"end": 17366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17339,
											"end": 17366,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17239,
											"end": 17381,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 17239,
											"end": 17381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17399,
											"end": 17408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17395,
											"end": 17476,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17395,
											"end": 17476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 17395,
											"end": 17476,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17453,
											"end": 17460,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17449,
											"end": 17451,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17442,
											"end": 17447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17433,
											"end": 17461,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 17395,
											"end": 17476,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 17395,
											"end": 17476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17063,
											"end": 17486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17026,
											"end": 17486,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 17026,
											"end": 17486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17523,
											"end": 17525,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17511,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17512,
											"end": 17519,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17496,
											"end": 17525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 17532,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 17532,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 17532,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 17532,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16870,
											"end": 17532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9232,
											"end": 9600,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9232,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9344,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 9358,
											"end": 9363,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9365,
											"end": 9372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9381,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9344,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 9344,
											"end": 9382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9344,
											"end": 9382,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 9344,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9339,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 9339,
											"end": 9594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9419,
											"end": 9420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9402,
											"end": 9421,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9402,
											"end": 9421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9402,
											"end": 9407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9402,
											"end": 9421,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9402,
											"end": 9421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9402,
											"end": 9421,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9398,
											"end": 9584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9471,
											"end": 9478,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 9448,
											"end": 9479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9479,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9584,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9398,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9552,
											"end": 9559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9561,
											"end": 9568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "PUSH",
											"source": 2,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 9525,
											"end": 9569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9525,
											"end": 9569,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9339,
											"end": 9594,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 9339,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9232,
											"end": 9600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9232,
											"end": 9600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9232,
											"end": 9600,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9232,
											"end": 9600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8798,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8526,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8629,
											"end": 8633,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8683,
											"end": 8684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8685,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8664,
											"end": 8685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8671,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8685,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8664,
											"end": 8685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8685,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8685,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 8664,
											"end": 8791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8711,
											"end": 8718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8718,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8702,
											"end": 8718,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8707,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8718,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8702,
											"end": 8718,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8718,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8754,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 8702,
											"end": 8754,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8754,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8722,
											"end": 8754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8746,
											"end": 8753,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8722,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 8722,
											"end": 8754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8722,
											"end": 8754,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 8722,
											"end": 8754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8754,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 8702,
											"end": 8754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 8702,
											"end": 8790,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8783,
											"end": 8790,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8790,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8758,
											"end": 8790,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 8771,
											"end": 8778,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 8758,
											"end": 8779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8779,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 8758,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8790,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8758,
											"end": 8790,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8790,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8790,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 8702,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8791,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 8664,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8645,
											"end": 8791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8645,
											"end": 8791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8798,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5001,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5013,
											"end": 5130,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 5013,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5120,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5124,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5136,
											"end": 5316,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 5136,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5184,
											"end": 5261,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5262,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5281,
											"end": 5285,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5271,
											"end": 5286,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5305,
											"end": 5309,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5302,
											"end": 5303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5310,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 5427,
											"end": 5431,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 5405,
											"end": 5432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 5405,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5403,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5393,
											"end": 5433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5535,
											"end": 5541,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5523,
											"end": 5533,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5520,
											"end": 5542,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5518,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5481,
											"end": 5543,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 5546,
											"end": 5564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 5546,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 5478,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5586,
											"end": 5596,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5582,
											"end": 5584,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5575,
											"end": 5597,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5365,
											"end": 5603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5643,
											"end": 5649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 5670,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5660,
											"end": 5690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5660,
											"end": 5690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 5727,
											"end": 5731,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5725,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 5699,
											"end": 5732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 5699,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5738,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5609,
											"end": 5738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5888,
											"end": 5894,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5885,
											"end": 5915,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 5918,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 5882,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 5978,
											"end": 5984,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 5956,
											"end": 5985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 5956,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6040,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6038,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6030,
											"end": 6045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6022,
											"end": 6045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6022,
											"end": 6045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5744,
											"end": 6052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5744,
											"end": 6052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6155,
											"end": 6161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6150,
											"end": 6153,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6145,
											"end": 6148,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6132,
											"end": 6162,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6182,
											"end": 6185,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6178,
											"end": 6194,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6171,
											"end": 6198,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6288,
											"end": 6293,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 6371,
											"end": 6377,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 6329,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 6329,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 6313,
											"end": 6379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 6313,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6304,
											"end": 6379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6304,
											"end": 6379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6402,
											"end": 6408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6400,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6388,
											"end": 6409,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6440,
											"end": 6444,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6438,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6429,
											"end": 6445,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6478,
											"end": 6481,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6469,
											"end": 6475,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6464,
											"end": 6467,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6460,
											"end": 6476,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6482,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 6485,
											"end": 6564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 6485,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 6454,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6612,
											"end": 6615,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 6575,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 6575,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6294,
											"end": 6635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6711,
											"end": 6716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6757,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6745,
											"end": 6751,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6741,
											"end": 6758,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6737,
											"end": 6764,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 6768,
											"end": 6847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 6727,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6885,
											"end": 6891,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 6985,
											"end": 6988,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6977,
											"end": 6983,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6970,
											"end": 6974,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6962,
											"end": 6968,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6958,
											"end": 6975,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 6910,
											"end": 6989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 6910,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6901,
											"end": 6989,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6901,
											"end": 6989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6655,
											"end": 6995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7070,
											"end": 7076,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7107,
											"end": 7116,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7098,
											"end": 7105,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7094,
											"end": 7117,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7090,
											"end": 7122,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 7125,
											"end": 7204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 7125,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 7087,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7245,
											"end": 7276,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7295,
											"end": 7301,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7322,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 7325,
											"end": 7404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 7325,
											"end": 7404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 7289,
											"end": 7406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 7485,
											"end": 7492,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7482,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7465,
											"end": 7474,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7461,
											"end": 7483,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 7430,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 7430,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7420,
											"end": 7493,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7420,
											"end": 7493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7216,
											"end": 7503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7510,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7599,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7607,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7658,
											"end": 7660,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7646,
											"end": 7655,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7644,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7633,
											"end": 7656,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7629,
											"end": 7661,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 7664,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 7664,
											"end": 7743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7743,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 7664,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 7626,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7784,
											"end": 7785,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 7854,
											"end": 7861,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7834,
											"end": 7843,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7830,
											"end": 7852,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7809,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 7809,
											"end": 7862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7809,
											"end": 7862,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 7809,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7799,
											"end": 7862,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7799,
											"end": 7862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7755,
											"end": 7872,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7913,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7937,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 7982,
											"end": 7989,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7973,
											"end": 7979,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7962,
											"end": 7971,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 7958,
											"end": 7980,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7937,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 7937,
											"end": 7990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7937,
											"end": 7990,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 7937,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7927,
											"end": 7990,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7927,
											"end": 7990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7882,
											"end": 8000,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8039,
											"end": 8041,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8065,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 8110,
											"end": 8117,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8101,
											"end": 8107,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8090,
											"end": 8099,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8086,
											"end": 8108,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8065,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 8065,
											"end": 8118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8065,
											"end": 8118,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 8065,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8118,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8118,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8010,
											"end": 8128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 8135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8141,
											"end": 8265,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 8141,
											"end": 8265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8218,
											"end": 8224,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8252,
											"end": 8257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8246,
											"end": 8258,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8141,
											"end": 8265,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8141,
											"end": 8265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8141,
											"end": 8265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8141,
											"end": 8265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8271,
											"end": 8465,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 8271,
											"end": 8465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8380,
											"end": 8391,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8420,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8409,
											"end": 8412,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 8421,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8454,
											"end": 8458,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8449,
											"end": 8452,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8445,
											"end": 8459,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8430,
											"end": 8459,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8430,
											"end": 8459,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8271,
											"end": 8465,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8271,
											"end": 8465,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8271,
											"end": 8465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8271,
											"end": 8465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8271,
											"end": 8465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8613,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 8471,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8548,
											"end": 8552,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8574,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8574,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8563,
											"end": 8574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8601,
											"end": 8605,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8596,
											"end": 8599,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8592,
											"end": 8606,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 8606,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 8606,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8613,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8613,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8613,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8778,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 8619,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8693,
											"end": 8704,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8727,
											"end": 8733,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8722,
											"end": 8725,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8715,
											"end": 8734,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8767,
											"end": 8771,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8762,
											"end": 8765,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8758,
											"end": 8772,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8743,
											"end": 8772,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8743,
											"end": 8772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8778,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8778,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8778,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8778,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8619,
											"end": 8778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8784,
											"end": 9141,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 8784,
											"end": 9141,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8862,
											"end": 8865,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8890,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 8923,
											"end": 8928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8890,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 8890,
											"end": 8929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8890,
											"end": 8929,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 8890,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 8999,
											"end": 9005,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8994,
											"end": 8997,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 8945,
											"end": 9006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 9006,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 8945,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 9006,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8938,
											"end": 9006,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9015,
											"end": 9080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 9073,
											"end": 9079,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9068,
											"end": 9071,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9061,
											"end": 9065,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9054,
											"end": 9059,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9050,
											"end": 9066,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9015,
											"end": 9080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 9015,
											"end": 9080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9015,
											"end": 9080,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 9015,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9105,
											"end": 9134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 9127,
											"end": 9133,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9105,
											"end": 9134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 9105,
											"end": 9134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9105,
											"end": 9134,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 9105,
											"end": 9134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9100,
											"end": 9103,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9096,
											"end": 9135,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9089,
											"end": 9135,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9089,
											"end": 9135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8866,
											"end": 9141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8784,
											"end": 9141,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8784,
											"end": 9141,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8784,
											"end": 9141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8784,
											"end": 9141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8784,
											"end": 9141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9343,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 9147,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9236,
											"end": 9246,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9271,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 9333,
											"end": 9336,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9325,
											"end": 9331,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9271,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 9271,
											"end": 9337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9271,
											"end": 9337,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 9271,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9257,
											"end": 9337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9257,
											"end": 9337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9343,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9343,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9349,
											"end": 9472,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 9349,
											"end": 9472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9429,
											"end": 9433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9461,
											"end": 9465,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9456,
											"end": 9459,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9452,
											"end": 9466,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9444,
											"end": 9466,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9444,
											"end": 9466,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9349,
											"end": 9472,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9349,
											"end": 9472,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9349,
											"end": 9472,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9349,
											"end": 9472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9506,
											"end": 10497,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 9506,
											"end": 10497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9645,
											"end": 9648,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9674,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 9732,
											"end": 9737,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9674,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 9674,
											"end": 9738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9674,
											"end": 9738,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 9674,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9754,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 9843,
											"end": 9849,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9838,
											"end": 9841,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9754,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 9754,
											"end": 9850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9754,
											"end": 9850,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 9754,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9747,
											"end": 9850,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9747,
											"end": 9850,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9879,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9925,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9913,
											"end": 9919,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9909,
											"end": 9926,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 9904,
											"end": 9907,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9900,
											"end": 9927,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9951,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 10011,
											"end": 10016,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9951,
											"end": 10017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 9951,
											"end": 10017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9951,
											"end": 10017,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 9951,
											"end": 10017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10040,
											"end": 10047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10056,
											"end": 10452,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 10056,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10081,
											"end": 10087,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10075,
											"end": 10088,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10056,
											"end": 10452,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10056,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 10056,
											"end": 10452,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10152,
											"end": 10161,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10146,
											"end": 10150,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10142,
											"end": 10162,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10137,
											"end": 10140,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10163,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10203,
											"end": 10209,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10197,
											"end": 10210,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 10310,
											"end": 10314,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10295,
											"end": 10308,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 10231,
											"end": 10315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10231,
											"end": 10315,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 10231,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10315,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10338,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 10401,
											"end": 10407,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10338,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 10338,
											"end": 10408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10338,
											"end": 10408,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 10338,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10328,
											"end": 10408,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10328,
											"end": 10408,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10437,
											"end": 10441,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10432,
											"end": 10435,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 10428,
											"end": 10442,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10421,
											"end": 10442,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 10421,
											"end": 10442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10116,
											"end": 10452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10103,
											"end": 10104,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10100,
											"end": 10101,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10096,
											"end": 10105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10091,
											"end": 10105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10091,
											"end": 10105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10056,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 10056,
											"end": 10452,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10056,
											"end": 10452,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 10056,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10060,
											"end": 10074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10468,
											"end": 10472,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10461,
											"end": 10472,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 10461,
											"end": 10472,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10488,
											"end": 10491,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 10481,
											"end": 10491,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 10481,
											"end": 10491,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9650,
											"end": 10497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9650,
											"end": 10497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9650,
											"end": 10497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9650,
											"end": 10497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9650,
											"end": 10497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9506,
											"end": 10497,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9506,
											"end": 10497,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9506,
											"end": 10497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9506,
											"end": 10497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9506,
											"end": 10497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10503,
											"end": 10916,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 10503,
											"end": 10916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10666,
											"end": 10670,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10704,
											"end": 10706,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10693,
											"end": 10702,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10689,
											"end": 10707,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10681,
											"end": 10707,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10681,
											"end": 10707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10753,
											"end": 10762,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10747,
											"end": 10751,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10743,
											"end": 10763,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10739,
											"end": 10740,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10728,
											"end": 10737,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10724,
											"end": 10741,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10717,
											"end": 10764,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10781,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 10904,
											"end": 10908,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10895,
											"end": 10901,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10781,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 10781,
											"end": 10909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10781,
											"end": 10909,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 10781,
											"end": 10909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10773,
											"end": 10909,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10773,
											"end": 10909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10503,
											"end": 10916,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10503,
											"end": 10916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10503,
											"end": 10916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10503,
											"end": 10916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10503,
											"end": 10916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10922,
											"end": 11251,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 10922,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10981,
											"end": 10987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11030,
											"end": 11032,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11027,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11009,
											"end": 11016,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11005,
											"end": 11028,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11001,
											"end": 11033,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10998,
											"end": 11117,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10998,
											"end": 11117,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 10998,
											"end": 11117,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11036,
											"end": 11115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 11036,
											"end": 11115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 11036,
											"end": 11115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11036,
											"end": 11115,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 11036,
											"end": 11115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10998,
											"end": 11117,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 10998,
											"end": 11117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11156,
											"end": 11157,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11181,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 11226,
											"end": 11233,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11217,
											"end": 11223,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11206,
											"end": 11215,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11202,
											"end": 11224,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11181,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 11181,
											"end": 11234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11181,
											"end": 11234,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 11181,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11171,
											"end": 11234,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11171,
											"end": 11234,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11127,
											"end": 11244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10922,
											"end": 11251,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10922,
											"end": 11251,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10922,
											"end": 11251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10922,
											"end": 11251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10922,
											"end": 11251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11257,
											"end": 11375,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 11257,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11344,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 11362,
											"end": 11367,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11344,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 11344,
											"end": 11368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11344,
											"end": 11368,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 11344,
											"end": 11368,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11339,
											"end": 11342,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11332,
											"end": 11369,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11257,
											"end": 11375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11257,
											"end": 11375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11257,
											"end": 11375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11381,
											"end": 11603,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 11381,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11474,
											"end": 11478,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11512,
											"end": 11514,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11501,
											"end": 11510,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11497,
											"end": 11515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11489,
											"end": 11515,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11489,
											"end": 11515,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11525,
											"end": 11596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 11593,
											"end": 11594,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11582,
											"end": 11591,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11578,
											"end": 11595,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11569,
											"end": 11575,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11525,
											"end": 11596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 11525,
											"end": 11596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11525,
											"end": 11596,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 11525,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11381,
											"end": 11603,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11381,
											"end": 11603,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11381,
											"end": 11603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11381,
											"end": 11603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11381,
											"end": 11603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11609,
											"end": 11725,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 11609,
											"end": 11725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11679,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 11694,
											"end": 11699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11679,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 11679,
											"end": 11700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11679,
											"end": 11700,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 11679,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11672,
											"end": 11677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11669,
											"end": 11701,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 11659,
											"end": 11719,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11715,
											"end": 11716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11712,
											"end": 11713,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11705,
											"end": 11717,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11719,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 11659,
											"end": 11719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11609,
											"end": 11725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11609,
											"end": 11725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11731,
											"end": 11864,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 11731,
											"end": 11864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11774,
											"end": 11779,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11812,
											"end": 11818,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11799,
											"end": 11819,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 11790,
											"end": 11819,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11790,
											"end": 11819,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11828,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 11852,
											"end": 11857,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11828,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 11828,
											"end": 11858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11828,
											"end": 11858,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 11828,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11731,
											"end": 11864,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11731,
											"end": 11864,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11731,
											"end": 11864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11731,
											"end": 11864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11731,
											"end": 11864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11870,
											"end": 12338,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 11870,
											"end": 12338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11935,
											"end": 11941,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11943,
											"end": 11949,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11992,
											"end": 11994,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11980,
											"end": 11989,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11971,
											"end": 11978,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11967,
											"end": 11990,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11963,
											"end": 11995,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11960,
											"end": 12079,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11960,
											"end": 12079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 11960,
											"end": 12079,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11998,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 11998,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 11998,
											"end": 12077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11998,
											"end": 12077,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 11998,
											"end": 12077,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11960,
											"end": 12079,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 11960,
											"end": 12079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12118,
											"end": 12119,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12143,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 12188,
											"end": 12195,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12179,
											"end": 12185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12164,
											"end": 12186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12143,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 12143,
											"end": 12196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12143,
											"end": 12196,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 12143,
											"end": 12196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12133,
											"end": 12196,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12133,
											"end": 12196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12089,
											"end": 12206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12247,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12271,
											"end": 12321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 12313,
											"end": 12320,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12310,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12293,
											"end": 12302,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12289,
											"end": 12311,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12271,
											"end": 12321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 12271,
											"end": 12321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12271,
											"end": 12321,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 12271,
											"end": 12321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12261,
											"end": 12321,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12261,
											"end": 12321,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12216,
											"end": 12331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11870,
											"end": 12338,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11870,
											"end": 12338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11870,
											"end": 12338,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11870,
											"end": 12338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11870,
											"end": 12338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11870,
											"end": 12338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12344,
											"end": 12651,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 12344,
											"end": 12651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12405,
											"end": 12409,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12487,
											"end": 12493,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12484,
											"end": 12514,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12481,
											"end": 12537,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12481,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 12481,
											"end": 12537,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 12517,
											"end": 12535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12481,
											"end": 12537,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 12481,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12555,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 12577,
											"end": 12583,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12555,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 12555,
											"end": 12584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12555,
											"end": 12584,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 12555,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12547,
											"end": 12584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12547,
											"end": 12584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12639,
											"end": 12643,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12633,
											"end": 12637,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12629,
											"end": 12644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12621,
											"end": 12644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12621,
											"end": 12644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12344,
											"end": 12651,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12344,
											"end": 12651,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12344,
											"end": 12651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12344,
											"end": 12651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12657,
											"end": 13080,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 12657,
											"end": 13080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12734,
											"end": 12739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12759,
											"end": 12824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 12775,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 12816,
											"end": 12822,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12775,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 12775,
											"end": 12823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12775,
											"end": 12823,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 12775,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12759,
											"end": 12824,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 12759,
											"end": 12824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12759,
											"end": 12824,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 12759,
											"end": 12824,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12750,
											"end": 12824,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12750,
											"end": 12824,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12847,
											"end": 12853,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12840,
											"end": 12845,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12833,
											"end": 12854,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12885,
											"end": 12889,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12878,
											"end": 12883,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12874,
											"end": 12890,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12923,
											"end": 12926,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12914,
											"end": 12920,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12909,
											"end": 12912,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12905,
											"end": 12921,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12902,
											"end": 12927,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12899,
											"end": 13011,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12899,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 12899,
											"end": 13011,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12930,
											"end": 13009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 12930,
											"end": 13009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 12930,
											"end": 13009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12930,
											"end": 13009,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 12930,
											"end": 13009,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12899,
											"end": 13011,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 12899,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13020,
											"end": 13074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 13067,
											"end": 13073,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13062,
											"end": 13065,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13057,
											"end": 13060,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13020,
											"end": 13074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 13020,
											"end": 13074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13020,
											"end": 13074,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 13020,
											"end": 13074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12740,
											"end": 13080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12657,
											"end": 13080,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12657,
											"end": 13080,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12657,
											"end": 13080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12657,
											"end": 13080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12657,
											"end": 13080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12657,
											"end": 13080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13099,
											"end": 13437,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 13099,
											"end": 13437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13154,
											"end": 13159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13203,
											"end": 13206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13196,
											"end": 13200,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 13188,
											"end": 13194,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13184,
											"end": 13201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13180,
											"end": 13207,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 13170,
											"end": 13292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 13170,
											"end": 13292,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13211,
											"end": 13290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 13211,
											"end": 13290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 13211,
											"end": 13290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13211,
											"end": 13290,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 13211,
											"end": 13290,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13170,
											"end": 13292,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 13170,
											"end": 13292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13328,
											"end": 13334,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13315,
											"end": 13335,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 13353,
											"end": 13431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 13427,
											"end": 13430,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13419,
											"end": 13425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13412,
											"end": 13416,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13404,
											"end": 13410,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13400,
											"end": 13417,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13353,
											"end": 13431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 13353,
											"end": 13431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13353,
											"end": 13431,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 13353,
											"end": 13431,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13344,
											"end": 13431,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13344,
											"end": 13431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13160,
											"end": 13437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13099,
											"end": 13437,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13099,
											"end": 13437,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13099,
											"end": 13437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13099,
											"end": 13437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13099,
											"end": 13437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 14386,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 13443,
											"end": 14386,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13538,
											"end": 13544,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13546,
											"end": 13552,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13554,
											"end": 13560,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13562,
											"end": 13568,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13611,
											"end": 13614,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 13599,
											"end": 13608,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13590,
											"end": 13597,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13586,
											"end": 13609,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13582,
											"end": 13615,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 13579,
											"end": 13699,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13579,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 13579,
											"end": 13699,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13618,
											"end": 13697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 13618,
											"end": 13697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 13618,
											"end": 13697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13618,
											"end": 13697,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 13618,
											"end": 13697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13579,
											"end": 13699,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 13579,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13738,
											"end": 13739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13763,
											"end": 13816,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 13808,
											"end": 13815,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13799,
											"end": 13805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13788,
											"end": 13797,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13784,
											"end": 13806,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13763,
											"end": 13816,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 13763,
											"end": 13816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13763,
											"end": 13816,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 13763,
											"end": 13816,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13753,
											"end": 13816,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 13753,
											"end": 13816,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13709,
											"end": 13826,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13865,
											"end": 13867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13891,
											"end": 13944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 13936,
											"end": 13943,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13927,
											"end": 13933,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13916,
											"end": 13925,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 13934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13891,
											"end": 13944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 13891,
											"end": 13944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13891,
											"end": 13944,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 13891,
											"end": 13944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13881,
											"end": 13944,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13881,
											"end": 13944,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13836,
											"end": 13954,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13993,
											"end": 13995,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14019,
											"end": 14072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 14055,
											"end": 14061,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14044,
											"end": 14053,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 14040,
											"end": 14062,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14019,
											"end": 14072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 14019,
											"end": 14072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14019,
											"end": 14072,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 14019,
											"end": 14072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14009,
											"end": 14072,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14009,
											"end": 14072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13964,
											"end": 14082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14149,
											"end": 14151,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 14138,
											"end": 14147,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14134,
											"end": 14152,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14121,
											"end": 14153,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 14180,
											"end": 14198,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14172,
											"end": 14178,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14169,
											"end": 14199,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14166,
											"end": 14283,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14166,
											"end": 14283,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 14166,
											"end": 14283,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 14202,
											"end": 14281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 14202,
											"end": 14281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14281,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 14202,
											"end": 14281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14166,
											"end": 14283,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 14166,
											"end": 14283,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14307,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 14361,
											"end": 14368,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 14352,
											"end": 14358,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14341,
											"end": 14350,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 14337,
											"end": 14359,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14307,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 14307,
											"end": 14369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14307,
											"end": 14369,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 14307,
											"end": 14369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14297,
											"end": 14369,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14297,
											"end": 14369,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14092,
											"end": 14379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 14386,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 14386,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 14386,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 14386,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 14386,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 14386,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 14386,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 14386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14392,
											"end": 14866,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 14392,
											"end": 14866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14460,
											"end": 14466,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14468,
											"end": 14474,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14517,
											"end": 14519,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14505,
											"end": 14514,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14496,
											"end": 14503,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14492,
											"end": 14515,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14488,
											"end": 14520,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 14485,
											"end": 14604,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14485,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 14485,
											"end": 14604,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14523,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 14523,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 14523,
											"end": 14602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14523,
											"end": 14602,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 14523,
											"end": 14602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14485,
											"end": 14604,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 14485,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14643,
											"end": 14644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14668,
											"end": 14721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 14713,
											"end": 14720,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14704,
											"end": 14710,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14693,
											"end": 14702,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14689,
											"end": 14711,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14668,
											"end": 14721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 14668,
											"end": 14721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14668,
											"end": 14721,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 14668,
											"end": 14721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14658,
											"end": 14721,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14658,
											"end": 14721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14614,
											"end": 14731,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14770,
											"end": 14772,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14796,
											"end": 14849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 14841,
											"end": 14848,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14832,
											"end": 14838,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14821,
											"end": 14830,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14817,
											"end": 14839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14796,
											"end": 14849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 14796,
											"end": 14849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14796,
											"end": 14849,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 14796,
											"end": 14849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14786,
											"end": 14849,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14786,
											"end": 14849,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14741,
											"end": 14859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14392,
											"end": 14866,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14392,
											"end": 14866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14392,
											"end": 14866,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14392,
											"end": 14866,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14392,
											"end": 14866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14392,
											"end": 14866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14872,
											"end": 15052,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 14872,
											"end": 15052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14920,
											"end": 14997,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14917,
											"end": 14918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14910,
											"end": 14998,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15017,
											"end": 15021,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 15014,
											"end": 15015,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15007,
											"end": 15022,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15041,
											"end": 15045,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15038,
											"end": 15039,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15031,
											"end": 15046,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15058,
											"end": 15378,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 15058,
											"end": 15378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15102,
											"end": 15108,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15139,
											"end": 15140,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 15133,
											"end": 15137,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15129,
											"end": 15141,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15119,
											"end": 15141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15119,
											"end": 15141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15186,
											"end": 15187,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15180,
											"end": 15184,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15176,
											"end": 15188,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15207,
											"end": 15225,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15197,
											"end": 15278,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 15197,
											"end": 15278,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15263,
											"end": 15267,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 15255,
											"end": 15261,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15251,
											"end": 15268,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15241,
											"end": 15268,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15241,
											"end": 15268,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15197,
											"end": 15278,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 15197,
											"end": 15278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15325,
											"end": 15327,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15317,
											"end": 15323,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15314,
											"end": 15328,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15294,
											"end": 15312,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15291,
											"end": 15329,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15288,
											"end": 15372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 15288,
											"end": 15372,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15344,
											"end": 15362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 15344,
											"end": 15362,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 15344,
											"end": 15362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15344,
											"end": 15362,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 15344,
											"end": 15362,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15288,
											"end": 15372,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 15288,
											"end": 15372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15109,
											"end": 15378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15058,
											"end": 15378,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15058,
											"end": 15378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15058,
											"end": 15378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15058,
											"end": 15378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15384,
											"end": 15525,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 15384,
											"end": 15525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15433,
											"end": 15437,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15456,
											"end": 15459,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15448,
											"end": 15459,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15448,
											"end": 15459,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15479,
											"end": 15482,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15476,
											"end": 15477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15469,
											"end": 15483,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15513,
											"end": 15517,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15500,
											"end": 15518,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 15492,
											"end": 15518,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15492,
											"end": 15518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15384,
											"end": 15525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15384,
											"end": 15525,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15384,
											"end": 15525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15384,
											"end": 15525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15531,
											"end": 15624,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 15531,
											"end": 15624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15568,
											"end": 15574,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15615,
											"end": 15617,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15610,
											"end": 15612,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 15603,
											"end": 15608,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15599,
											"end": 15613,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15595,
											"end": 15618,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15585,
											"end": 15618,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15585,
											"end": 15618,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15531,
											"end": 15624,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15531,
											"end": 15624,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15531,
											"end": 15624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15531,
											"end": 15624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15630,
											"end": 15737,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 15630,
											"end": 15737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15674,
											"end": 15682,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15724,
											"end": 15729,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15718,
											"end": 15722,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15714,
											"end": 15730,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 15693,
											"end": 15730,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15693,
											"end": 15730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15630,
											"end": 15737,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15630,
											"end": 15737,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15630,
											"end": 15737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15630,
											"end": 15737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15630,
											"end": 15737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15743,
											"end": 16136,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 15743,
											"end": 16136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15812,
											"end": 15818,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15862,
											"end": 15863,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 15850,
											"end": 15860,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15846,
											"end": 15864,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 15885,
											"end": 15982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 15915,
											"end": 15981,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15904,
											"end": 15913,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15885,
											"end": 15982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 15885,
											"end": 15982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15885,
											"end": 15982,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 15885,
											"end": 15982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16003,
											"end": 16042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 16033,
											"end": 16041,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16022,
											"end": 16031,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16003,
											"end": 16042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 16003,
											"end": 16042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16003,
											"end": 16042,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 16003,
											"end": 16042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15991,
											"end": 16042,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15991,
											"end": 16042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16075,
											"end": 16079,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16071,
											"end": 16080,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 16064,
											"end": 16069,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16060,
											"end": 16081,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16051,
											"end": 16081,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16051,
											"end": 16081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16124,
											"end": 16128,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16114,
											"end": 16122,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16110,
											"end": 16129,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16103,
											"end": 16108,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16100,
											"end": 16130,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 16090,
											"end": 16130,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16090,
											"end": 16130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15819,
											"end": 16136,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15819,
											"end": 16136,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15743,
											"end": 16136,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15743,
											"end": 16136,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15743,
											"end": 16136,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15743,
											"end": 16136,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15743,
											"end": 16136,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15743,
											"end": 16136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16142,
											"end": 16202,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 16142,
											"end": 16202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16170,
											"end": 16173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16191,
											"end": 16196,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16184,
											"end": 16196,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16184,
											"end": 16196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16142,
											"end": 16202,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16142,
											"end": 16202,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16142,
											"end": 16202,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16142,
											"end": 16202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16208,
											"end": 16350,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 16208,
											"end": 16350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16258,
											"end": 16267,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16291,
											"end": 16344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 16309,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 16318,
											"end": 16342,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 16336,
											"end": 16341,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16318,
											"end": 16342,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 16318,
											"end": 16342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16318,
											"end": 16342,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 16318,
											"end": 16342,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16309,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 16309,
											"end": 16343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16309,
											"end": 16343,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 16309,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16291,
											"end": 16344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 16291,
											"end": 16344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16291,
											"end": 16344,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 16291,
											"end": 16344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16278,
											"end": 16344,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16278,
											"end": 16344,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16208,
											"end": 16350,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16208,
											"end": 16350,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16208,
											"end": 16350,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16208,
											"end": 16350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16356,
											"end": 16431,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 16356,
											"end": 16431,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16399,
											"end": 16402,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16420,
											"end": 16425,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16413,
											"end": 16425,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16413,
											"end": 16425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16356,
											"end": 16431,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16356,
											"end": 16431,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16356,
											"end": 16431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16356,
											"end": 16431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16437,
											"end": 16706,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 16437,
											"end": 16706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16547,
											"end": 16586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 16578,
											"end": 16585,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16547,
											"end": 16586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 16547,
											"end": 16586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16547,
											"end": 16586,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 16547,
											"end": 16586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16608,
											"end": 16699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 16657,
											"end": 16698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 16681,
											"end": 16697,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16657,
											"end": 16698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 16657,
											"end": 16698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16657,
											"end": 16698,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 16657,
											"end": 16698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16649,
											"end": 16655,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16642,
											"end": 16646,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16636,
											"end": 16647,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16608,
											"end": 16699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 16608,
											"end": 16699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16608,
											"end": 16699,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 16608,
											"end": 16699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16602,
											"end": 16606,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16595,
											"end": 16700,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 16513,
											"end": 16706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16437,
											"end": 16706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16437,
											"end": 16706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16437,
											"end": 16706,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16437,
											"end": 16706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16712,
											"end": 16785,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 16712,
											"end": 16785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16757,
											"end": 16760,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16712,
											"end": 16785,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16712,
											"end": 16785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16791,
											"end": 16980,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 16791,
											"end": 16980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16868,
											"end": 16900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 16868,
											"end": 16900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 16868,
											"end": 16900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16868,
											"end": 16900,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 16868,
											"end": 16900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 16967,
											"end": 16973,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16959,
											"end": 16965,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16953,
											"end": 16957,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 16909,
											"end": 16974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16909,
											"end": 16974,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 16909,
											"end": 16974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16844,
											"end": 16980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16791,
											"end": 16980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16791,
											"end": 16980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16791,
											"end": 16980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16986,
											"end": 17172,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 16986,
											"end": 17172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17046,
											"end": 17166,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 17046,
											"end": 17166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17063,
											"end": 17066,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17056,
											"end": 17061,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17053,
											"end": 17067,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 17046,
											"end": 17166,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17046,
											"end": 17166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 17046,
											"end": 17166,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17117,
											"end": 17156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 17154,
											"end": 17155,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17147,
											"end": 17152,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17117,
											"end": 17156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 17117,
											"end": 17156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17117,
											"end": 17156,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 17117,
											"end": 17156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17090,
											"end": 17091,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 17083,
											"end": 17088,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17079,
											"end": 17092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17070,
											"end": 17092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17070,
											"end": 17092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17046,
											"end": 17166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 17046,
											"end": 17166,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17046,
											"end": 17166,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 17046,
											"end": 17166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16986,
											"end": 17172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16986,
											"end": 17172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16986,
											"end": 17172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17178,
											"end": 17721,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 17178,
											"end": 17721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17279,
											"end": 17281,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 17274,
											"end": 17277,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17271,
											"end": 17282,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17268,
											"end": 17714,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17268,
											"end": 17714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 17268,
											"end": 17714,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17313,
											"end": 17351,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 17345,
											"end": 17350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17313,
											"end": 17351,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 17313,
											"end": 17351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17313,
											"end": 17351,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 17313,
											"end": 17351,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17397,
											"end": 17426,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 17415,
											"end": 17425,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17397,
											"end": 17426,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 17397,
											"end": 17426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17397,
											"end": 17426,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 17397,
											"end": 17426,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17387,
											"end": 17395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17383,
											"end": 17427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17580,
											"end": 17582,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17568,
											"end": 17578,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17565,
											"end": 17583,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 17562,
											"end": 17611,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17562,
											"end": 17611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 17562,
											"end": 17611,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17601,
											"end": 17609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17586,
											"end": 17609,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17586,
											"end": 17609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17562,
											"end": 17611,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 17562,
											"end": 17611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17624,
											"end": 17704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 17680,
											"end": 17702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 17698,
											"end": 17701,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17680,
											"end": 17702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 17680,
											"end": 17702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17680,
											"end": 17702,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 17680,
											"end": 17702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17670,
											"end": 17678,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17666,
											"end": 17703,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17653,
											"end": 17664,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17624,
											"end": 17704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 17624,
											"end": 17704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17624,
											"end": 17704,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 17624,
											"end": 17704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17283,
											"end": 17714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17283,
											"end": 17714,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17268,
											"end": 17714,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 17268,
											"end": 17714,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17178,
											"end": 17721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17178,
											"end": 17721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17178,
											"end": 17721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17178,
											"end": 17721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17727,
											"end": 17844,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 17727,
											"end": 17844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17781,
											"end": 17789,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17831,
											"end": 17836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17825,
											"end": 17829,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17821,
											"end": 17837,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 17800,
											"end": 17837,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17800,
											"end": 17837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17727,
											"end": 17844,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17727,
											"end": 17844,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17727,
											"end": 17844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17727,
											"end": 17844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17727,
											"end": 17844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 18019,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 17850,
											"end": 18019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17894,
											"end": 17900,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17927,
											"end": 17978,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 17975,
											"end": 17976,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17971,
											"end": 17977,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 17963,
											"end": 17968,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17960,
											"end": 17961,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 17956,
											"end": 17969,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 17927,
											"end": 17978,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 17927,
											"end": 17978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17927,
											"end": 17978,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 17927,
											"end": 17978,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17923,
											"end": 17979,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 18008,
											"end": 18012,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18002,
											"end": 18006,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17998,
											"end": 18013,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17988,
											"end": 18013,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17988,
											"end": 18013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17901,
											"end": 18019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 18019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 18019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 18019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 18019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 18019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18024,
											"end": 18319,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 18024,
											"end": 18319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18100,
											"end": 18104,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18246,
											"end": 18275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 18271,
											"end": 18274,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18265,
											"end": 18269,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18246,
											"end": 18275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 18246,
											"end": 18275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18246,
											"end": 18275,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 18246,
											"end": 18275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18238,
											"end": 18275,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18238,
											"end": 18275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18308,
											"end": 18311,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18305,
											"end": 18306,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 18301,
											"end": 18312,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 18295,
											"end": 18299,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18292,
											"end": 18313,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 18284,
											"end": 18313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18284,
											"end": 18313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18024,
											"end": 18319,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18024,
											"end": 18319,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18024,
											"end": 18319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18024,
											"end": 18319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18024,
											"end": 18319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18324,
											"end": 19719,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 18324,
											"end": 19719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18441,
											"end": 18478,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 18474,
											"end": 18477,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18441,
											"end": 18478,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 18441,
											"end": 18478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18441,
											"end": 18478,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 18441,
											"end": 18478,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18543,
											"end": 18561,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18535,
											"end": 18541,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18532,
											"end": 18562,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 18529,
											"end": 18585,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18529,
											"end": 18585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 18529,
											"end": 18585,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18565,
											"end": 18583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 18565,
											"end": 18583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 18565,
											"end": 18583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18565,
											"end": 18583,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 18565,
											"end": 18583,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18529,
											"end": 18585,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 18529,
											"end": 18585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18609,
											"end": 18647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 18641,
											"end": 18645,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18635,
											"end": 18646,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 18609,
											"end": 18647,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 18609,
											"end": 18647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18609,
											"end": 18647,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 18609,
											"end": 18647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18694,
											"end": 18761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 18754,
											"end": 18760,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18746,
											"end": 18752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18740,
											"end": 18744,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18694,
											"end": 18761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 18694,
											"end": 18761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18694,
											"end": 18761,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 18694,
											"end": 18761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18788,
											"end": 18789,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18812,
											"end": 18816,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18799,
											"end": 18816,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18799,
											"end": 18816,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18844,
											"end": 18846,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 18836,
											"end": 18842,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18833,
											"end": 18847,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 18861,
											"end": 18862,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 18856,
											"end": 19474,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18856,
											"end": 19474,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 18856,
											"end": 19474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 18856,
											"end": 19474,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19518,
											"end": 19519,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19535,
											"end": 19541,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19532,
											"end": 19609,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19532,
											"end": 19609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 19532,
											"end": 19609,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19584,
											"end": 19593,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19579,
											"end": 19582,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 19575,
											"end": 19594,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19569,
											"end": 19595,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19560,
											"end": 19595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19560,
											"end": 19595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19532,
											"end": 19609,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 19532,
											"end": 19609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19635,
											"end": 19702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 19695,
											"end": 19701,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19688,
											"end": 19693,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19635,
											"end": 19702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 19635,
											"end": 19702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19635,
											"end": 19702,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 19635,
											"end": 19702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19629,
											"end": 19633,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19622,
											"end": 19703,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19491,
											"end": 19713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18826,
											"end": 19713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 18826,
											"end": 19713,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18856,
											"end": 19474,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 18856,
											"end": 19474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18908,
											"end": 18912,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 18904,
											"end": 18913,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 18896,
											"end": 18902,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18892,
											"end": 18914,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 18942,
											"end": 18979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 18974,
											"end": 18978,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18942,
											"end": 18979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 18942,
											"end": 18979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18942,
											"end": 18979,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 18942,
											"end": 18979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19001,
											"end": 19002,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19015,
											"end": 19223,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 19015,
											"end": 19223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19029,
											"end": 19036,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19026,
											"end": 19027,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19023,
											"end": 19037,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 19015,
											"end": 19223,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19015,
											"end": 19223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 19015,
											"end": 19223,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19108,
											"end": 19117,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19103,
											"end": 19106,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 19099,
											"end": 19118,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19093,
											"end": 19119,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19085,
											"end": 19091,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19078,
											"end": 19120,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19159,
											"end": 19160,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 19151,
											"end": 19157,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19147,
											"end": 19161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19137,
											"end": 19161,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19137,
											"end": 19161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19206,
											"end": 19208,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19195,
											"end": 19204,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19191,
											"end": 19209,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19178,
											"end": 19209,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 19178,
											"end": 19209,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19052,
											"end": 19056,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19049,
											"end": 19050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19045,
											"end": 19057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19040,
											"end": 19057,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19040,
											"end": 19057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19015,
											"end": 19223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 19015,
											"end": 19223,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19015,
											"end": 19223,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 19015,
											"end": 19223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19251,
											"end": 19257,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19242,
											"end": 19249,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19239,
											"end": 19258,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 19236,
											"end": 19415,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19236,
											"end": 19415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 19236,
											"end": 19415,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19309,
											"end": 19318,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19304,
											"end": 19307,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 19300,
											"end": 19319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19294,
											"end": 19320,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 19352,
											"end": 19400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 19394,
											"end": 19398,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 19386,
											"end": 19392,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 19382,
											"end": 19399,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19371,
											"end": 19380,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19352,
											"end": 19400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 19352,
											"end": 19400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19352,
											"end": 19400,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 19352,
											"end": 19400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19344,
											"end": 19350,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19337,
											"end": 19401,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 19259,
											"end": 19415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19236,
											"end": 19415,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 19236,
											"end": 19415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19461,
											"end": 19462,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 19457,
											"end": 19458,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 19449,
											"end": 19455,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 19445,
											"end": 19459,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 19441,
											"end": 19463,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19435,
											"end": 19439,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 19428,
											"end": 19464,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 18863,
											"end": 19474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18863,
											"end": 19474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18863,
											"end": 19474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18826,
											"end": 19713,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 18826,
											"end": 19713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18826,
											"end": 19713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18416,
											"end": 19719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18416,
											"end": 19719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18416,
											"end": 19719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18324,
											"end": 19719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18324,
											"end": 19719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18324,
											"end": 19719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19725,
											"end": 19905,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 19725,
											"end": 19905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19773,
											"end": 19850,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19770,
											"end": 19771,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19763,
											"end": 19851,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19870,
											"end": 19874,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 19867,
											"end": 19868,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19860,
											"end": 19875,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19894,
											"end": 19898,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 19891,
											"end": 19892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19884,
											"end": 19899,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 19911,
											"end": 20102,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 19911,
											"end": 20102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19951,
											"end": 19954,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19970,
											"end": 19990,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 19988,
											"end": 19989,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19970,
											"end": 19990,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 19970,
											"end": 19990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19970,
											"end": 19990,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 19970,
											"end": 19990,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19965,
											"end": 19990,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19965,
											"end": 19990,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20004,
											"end": 20024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 20022,
											"end": 20023,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20004,
											"end": 20024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 20004,
											"end": 20024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20004,
											"end": 20024,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 20004,
											"end": 20024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19999,
											"end": 20024,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19999,
											"end": 20024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20047,
											"end": 20048,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20044,
											"end": 20045,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20040,
											"end": 20049,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20033,
											"end": 20049,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20033,
											"end": 20049,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20068,
											"end": 20071,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 20065,
											"end": 20066,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20062,
											"end": 20072,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 20059,
											"end": 20095,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20059,
											"end": 20095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 20059,
											"end": 20095,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20075,
											"end": 20093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 20075,
											"end": 20093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 20075,
											"end": 20093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20075,
											"end": 20093,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 20075,
											"end": 20093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20059,
											"end": 20095,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 20059,
											"end": 20095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19911,
											"end": 20102,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19911,
											"end": 20102,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19911,
											"end": 20102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19911,
											"end": 20102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19911,
											"end": 20102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20108,
											"end": 20550,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 20108,
											"end": 20550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20257,
											"end": 20261,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20295,
											"end": 20297,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 20284,
											"end": 20293,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20280,
											"end": 20298,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20272,
											"end": 20298,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20272,
											"end": 20298,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20308,
											"end": 20379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 20376,
											"end": 20377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20365,
											"end": 20374,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20361,
											"end": 20378,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20352,
											"end": 20358,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20308,
											"end": 20379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 20308,
											"end": 20379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20308,
											"end": 20379,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 20308,
											"end": 20379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20389,
											"end": 20461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 20457,
											"end": 20459,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20446,
											"end": 20455,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20442,
											"end": 20460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20433,
											"end": 20439,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20389,
											"end": 20461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 20389,
											"end": 20461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20389,
											"end": 20461,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 20389,
											"end": 20461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20471,
											"end": 20543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 20539,
											"end": 20541,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20528,
											"end": 20537,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20524,
											"end": 20542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20515,
											"end": 20521,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20471,
											"end": 20543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 20471,
											"end": 20543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20471,
											"end": 20543,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 20471,
											"end": 20543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20108,
											"end": 20550,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 20108,
											"end": 20550,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20108,
											"end": 20550,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20108,
											"end": 20550,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20108,
											"end": 20550,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20108,
											"end": 20550,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20108,
											"end": 20550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20556,
											"end": 20736,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 20556,
											"end": 20736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20604,
											"end": 20681,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20601,
											"end": 20602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20594,
											"end": 20682,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20701,
											"end": 20705,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 20698,
											"end": 20699,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 20691,
											"end": 20706,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20725,
											"end": 20729,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 20722,
											"end": 20723,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20715,
											"end": 20730,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 20742,
											"end": 20975,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 20742,
											"end": 20975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20781,
											"end": 20784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20804,
											"end": 20828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 20822,
											"end": 20827,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20804,
											"end": 20828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 20804,
											"end": 20828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20804,
											"end": 20828,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 20804,
											"end": 20828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20795,
											"end": 20828,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20795,
											"end": 20828,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20850,
											"end": 20916,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20843,
											"end": 20848,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20840,
											"end": 20917,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20837,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 20837,
											"end": 20940,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 20920,
											"end": 20938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 20920,
											"end": 20938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 20920,
											"end": 20938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20920,
											"end": 20938,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 20920,
											"end": 20938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20837,
											"end": 20940,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 20837,
											"end": 20940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20967,
											"end": 20968,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 20960,
											"end": 20965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20956,
											"end": 20969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20949,
											"end": 20969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20949,
											"end": 20969,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20742,
											"end": 20975,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20742,
											"end": 20975,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20742,
											"end": 20975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20742,
											"end": 20975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20981,
											"end": 21129,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 20981,
											"end": 21129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21083,
											"end": 21094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21120,
											"end": 21123,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21105,
											"end": 21123,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21105,
											"end": 21123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20981,
											"end": 21129,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20981,
											"end": 21129,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20981,
											"end": 21129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20981,
											"end": 21129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20981,
											"end": 21129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21135,
											"end": 21525,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 21135,
											"end": 21525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21241,
											"end": 21244,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21269,
											"end": 21308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 21302,
											"end": 21307,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21269,
											"end": 21308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 21269,
											"end": 21308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21269,
											"end": 21308,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 21269,
											"end": 21308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21324,
											"end": 21413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 21406,
											"end": 21412,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21401,
											"end": 21404,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21324,
											"end": 21413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 21324,
											"end": 21413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21324,
											"end": 21413,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 21324,
											"end": 21413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21317,
											"end": 21413,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 21317,
											"end": 21413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21422,
											"end": 21487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 21480,
											"end": 21486,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21475,
											"end": 21478,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21468,
											"end": 21472,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21461,
											"end": 21466,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21457,
											"end": 21473,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21422,
											"end": 21487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 21422,
											"end": 21487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21422,
											"end": 21487,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 21422,
											"end": 21487,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21512,
											"end": 21518,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21507,
											"end": 21510,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21503,
											"end": 21519,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21496,
											"end": 21519,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21496,
											"end": 21519,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21245,
											"end": 21525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21135,
											"end": 21525,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21135,
											"end": 21525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21135,
											"end": 21525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21135,
											"end": 21525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21135,
											"end": 21525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21555,
											"end": 22429,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 21555,
											"end": 22429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21658,
											"end": 21661,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21695,
											"end": 21700,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21689,
											"end": 21701,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 21724,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 21750,
											"end": 21759,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21724,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 21724,
											"end": 21760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21724,
											"end": 21760,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 21724,
											"end": 21760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21776,
											"end": 21865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 21858,
											"end": 21864,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21853,
											"end": 21856,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21776,
											"end": 21865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 21776,
											"end": 21865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21776,
											"end": 21865,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 21776,
											"end": 21865,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21769,
											"end": 21865,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 21769,
											"end": 21865,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21896,
											"end": 21897,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 21885,
											"end": 21894,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21881,
											"end": 21898,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 21912,
											"end": 21913,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21907,
											"end": 22073,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21907,
											"end": 22073,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 21907,
											"end": 22073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 21907,
											"end": 22073,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22087,
											"end": 22088,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 22082,
											"end": 22423,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22082,
											"end": 22423,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 22082,
											"end": 22423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 22082,
											"end": 22423,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21874,
											"end": 22423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 21874,
											"end": 22423,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21907,
											"end": 22073,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 21907,
											"end": 22073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21991,
											"end": 21995,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 21987,
											"end": 21996,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 21976,
											"end": 21985,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21972,
											"end": 21997,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 21967,
											"end": 21970,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21960,
											"end": 21998,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22053,
											"end": 22059,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22046,
											"end": 22060,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 22039,
											"end": 22061,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 22031,
											"end": 22037,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22027,
											"end": 22062,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 22022,
											"end": 22025,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 22018,
											"end": 22063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22011,
											"end": 22063,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 22011,
											"end": 22063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21907,
											"end": 22073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 21907,
											"end": 22073,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22082,
											"end": 22423,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 22082,
											"end": 22423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22149,
											"end": 22187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 22181,
											"end": 22186,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22149,
											"end": 22187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 22149,
											"end": 22187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22149,
											"end": 22187,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 22149,
											"end": 22187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22209,
											"end": 22210,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22223,
											"end": 22377,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 22223,
											"end": 22377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22237,
											"end": 22243,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22234,
											"end": 22235,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22231,
											"end": 22244,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 22223,
											"end": 22377,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 22223,
											"end": 22377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 22223,
											"end": 22377,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22311,
											"end": 22318,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22305,
											"end": 22319,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 22301,
											"end": 22302,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22296,
											"end": 22299,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 22292,
											"end": 22303,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22285,
											"end": 22320,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22361,
											"end": 22362,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 22352,
											"end": 22359,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22348,
											"end": 22363,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22337,
											"end": 22363,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22337,
											"end": 22363,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22259,
											"end": 22263,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22256,
											"end": 22257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22252,
											"end": 22264,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22247,
											"end": 22264,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22247,
											"end": 22264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22223,
											"end": 22377,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 22223,
											"end": 22377,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22223,
											"end": 22377,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 22223,
											"end": 22377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22406,
											"end": 22412,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22401,
											"end": 22404,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 22397,
											"end": 22413,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22390,
											"end": 22413,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 22390,
											"end": 22413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22089,
											"end": 22423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22089,
											"end": 22423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21874,
											"end": 22423,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 21874,
											"end": 22423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21874,
											"end": 22423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21662,
											"end": 22429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21662,
											"end": 22429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21555,
											"end": 22429,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21555,
											"end": 22429,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21555,
											"end": 22429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21555,
											"end": 22429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21555,
											"end": 22429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22435,
											"end": 22864,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 22435,
											"end": 22864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22612,
											"end": 22615,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22634,
											"end": 22729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 22725,
											"end": 22728,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22716,
											"end": 22722,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22634,
											"end": 22729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 22634,
											"end": 22729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22634,
											"end": 22729,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 22634,
											"end": 22729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22627,
											"end": 22729,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22627,
											"end": 22729,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22746,
											"end": 22838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 22834,
											"end": 22837,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22825,
											"end": 22831,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22746,
											"end": 22838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 22746,
											"end": 22838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22746,
											"end": 22838,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 22746,
											"end": 22838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22739,
											"end": 22838,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22739,
											"end": 22838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22855,
											"end": 22858,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22848,
											"end": 22858,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22848,
											"end": 22858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22435,
											"end": 22864,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 22435,
											"end": 22864,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22435,
											"end": 22864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22435,
											"end": 22864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22435,
											"end": 22864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22435,
											"end": 22864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22870,
											"end": 22968,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 22870,
											"end": 22968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22921,
											"end": 22927,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22955,
											"end": 22960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22949,
											"end": 22961,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 22939,
											"end": 22961,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22939,
											"end": 22961,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22870,
											"end": 22968,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22870,
											"end": 22968,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22870,
											"end": 22968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22870,
											"end": 22968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22974,
											"end": 23142,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 22974,
											"end": 23142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23057,
											"end": 23068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23091,
											"end": 23097,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23086,
											"end": 23089,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23079,
											"end": 23098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23131,
											"end": 23135,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23126,
											"end": 23129,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23122,
											"end": 23136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23107,
											"end": 23136,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23107,
											"end": 23136,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22974,
											"end": 23142,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22974,
											"end": 23142,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22974,
											"end": 23142,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22974,
											"end": 23142,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22974,
											"end": 23142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23148,
											"end": 23521,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 23148,
											"end": 23521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23234,
											"end": 23237,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23262,
											"end": 23300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 23294,
											"end": 23299,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23262,
											"end": 23300,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 23262,
											"end": 23300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23262,
											"end": 23300,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 23262,
											"end": 23300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23316,
											"end": 23386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 23379,
											"end": 23385,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23374,
											"end": 23377,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23316,
											"end": 23386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 23316,
											"end": 23386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23316,
											"end": 23386,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 23316,
											"end": 23386,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23309,
											"end": 23386,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 23309,
											"end": 23386,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23395,
											"end": 23460,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 23453,
											"end": 23459,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23448,
											"end": 23451,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23441,
											"end": 23445,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23434,
											"end": 23439,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 23430,
											"end": 23446,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23395,
											"end": 23460,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 23395,
											"end": 23460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23395,
											"end": 23460,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 23395,
											"end": 23460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23485,
											"end": 23514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 23507,
											"end": 23513,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23485,
											"end": 23514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 23485,
											"end": 23514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23485,
											"end": 23514,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 23485,
											"end": 23514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23480,
											"end": 23483,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23476,
											"end": 23515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23469,
											"end": 23515,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23469,
											"end": 23515,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23238,
											"end": 23521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23148,
											"end": 23521,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23148,
											"end": 23521,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23148,
											"end": 23521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23148,
											"end": 23521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23148,
											"end": 23521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23527,
											"end": 24167,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 23527,
											"end": 24167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23722,
											"end": 23726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23760,
											"end": 23763,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 23749,
											"end": 23758,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23745,
											"end": 23764,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23737,
											"end": 23764,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23737,
											"end": 23764,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23774,
											"end": 23845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 23842,
											"end": 23843,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23831,
											"end": 23840,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23827,
											"end": 23844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23818,
											"end": 23824,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 23774,
											"end": 23845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 23774,
											"end": 23845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23774,
											"end": 23845,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 23774,
											"end": 23845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23855,
											"end": 23927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 23923,
											"end": 23925,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23912,
											"end": 23921,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23908,
											"end": 23926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23899,
											"end": 23905,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 23855,
											"end": 23927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 23855,
											"end": 23927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23855,
											"end": 23927,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 23855,
											"end": 23927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23937,
											"end": 24009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 24005,
											"end": 24007,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 23994,
											"end": 24003,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23990,
											"end": 24008,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23981,
											"end": 23987,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23937,
											"end": 24009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 23937,
											"end": 24009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23937,
											"end": 24009,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 23937,
											"end": 24009,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24056,
											"end": 24065,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24050,
											"end": 24054,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24046,
											"end": 24066,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24041,
											"end": 24043,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 24030,
											"end": 24039,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24026,
											"end": 24044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24019,
											"end": 24067,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24084,
											"end": 24160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 24155,
											"end": 24159,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24146,
											"end": 24152,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24084,
											"end": 24160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 24084,
											"end": 24160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24084,
											"end": 24160,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 24084,
											"end": 24160,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24076,
											"end": 24160,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24076,
											"end": 24160,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23527,
											"end": 24167,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 23527,
											"end": 24167,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 23527,
											"end": 24167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23527,
											"end": 24167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23527,
											"end": 24167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23527,
											"end": 24167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23527,
											"end": 24167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23527,
											"end": 24167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24173,
											"end": 24314,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 24173,
											"end": 24314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24229,
											"end": 24234,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24260,
											"end": 24266,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24254,
											"end": 24267,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 24245,
											"end": 24267,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24245,
											"end": 24267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24276,
											"end": 24308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 24302,
											"end": 24307,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24276,
											"end": 24308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 24276,
											"end": 24308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24276,
											"end": 24308,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 24276,
											"end": 24308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24173,
											"end": 24314,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24173,
											"end": 24314,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24173,
											"end": 24314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24173,
											"end": 24314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24173,
											"end": 24314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24320,
											"end": 24669,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 24320,
											"end": 24669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24389,
											"end": 24395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24438,
											"end": 24440,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24426,
											"end": 24435,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24417,
											"end": 24424,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24413,
											"end": 24436,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24409,
											"end": 24441,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 24406,
											"end": 24525,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 24406,
											"end": 24525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 24406,
											"end": 24525,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24444,
											"end": 24523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 24444,
											"end": 24523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 24444,
											"end": 24523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24444,
											"end": 24523,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 24444,
											"end": 24523,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24406,
											"end": 24525,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 24406,
											"end": 24525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24564,
											"end": 24565,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24589,
											"end": 24652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 24644,
											"end": 24651,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24635,
											"end": 24641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24624,
											"end": 24633,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 24620,
											"end": 24642,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24589,
											"end": 24652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 24589,
											"end": 24652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24589,
											"end": 24652,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 24589,
											"end": 24652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24579,
											"end": 24652,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24579,
											"end": 24652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24535,
											"end": 24662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24320,
											"end": 24669,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24320,
											"end": 24669,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24320,
											"end": 24669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24320,
											"end": 24669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24320,
											"end": 24669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24675,
											"end": 25007,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 24675,
											"end": 25007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24796,
											"end": 24800,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24834,
											"end": 24836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 24823,
											"end": 24832,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24819,
											"end": 24837,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24811,
											"end": 24837,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24811,
											"end": 24837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24847,
											"end": 24918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 24915,
											"end": 24916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24904,
											"end": 24913,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24900,
											"end": 24917,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24891,
											"end": 24897,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 24847,
											"end": 24918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 24847,
											"end": 24918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24847,
											"end": 24918,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 24847,
											"end": 24918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24928,
											"end": 25000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 24996,
											"end": 24998,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24985,
											"end": 24994,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24981,
											"end": 24999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24972,
											"end": 24978,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24928,
											"end": 25000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 24928,
											"end": 25000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24928,
											"end": 25000,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 24928,
											"end": 25000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24675,
											"end": 25007,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 24675,
											"end": 25007,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 24675,
											"end": 25007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24675,
											"end": 25007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24675,
											"end": 25007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24675,
											"end": 25007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									],
									".data": {
										"82B359026E8C4A10545B72ABCEF5B7323D4FF62DDA9910B7E947419E0F56EBC4": "68747470733a2f2f626c61636b2d656c6465726c792d776f6c766572696e652d3638352e6d7970696e6174612e636c6f75642f697066732f"
									}
								}
							},
							"sourceList": [
								"myNFT.sol",
								"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"minting(string)": "0bdc9008",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"viewTokens()": "4bf5bf35"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_jsonhash\",\"type\":\"string\"}],\"name\":\"minting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewTokens\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"myNFT.sol\":\"MyNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"myNFT.sol\":{\"keccak256\":\"0xcdfdb74fd2a3d9eb0a6b74fccafb89a7b2f21cf4497c9298cee2d8202c4cc37a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd4d29d488d256416da7c41e992305f4e54faf662be50e4a2b55d18d14132b1b\",\"dweb:/ipfs/QmUwkY3GHoUTF8cpePQEhkZKLhiB36jGvhuu4DLPRSayAy\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x3c157ba79d7fb76132f82b70d1990e10d5496e5c80e6970b84595823674edb2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e159e8ed2da809f02b24022d7245f036c8aa1e26165f1ef868c28911c182870\",\"dweb:/ipfs/QmYY8vwENVeMnrYj1swSvRpxGKj7kZNrGHuC4bWkPJsof6\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 301,
								"contract": "myNFT.sol:MyNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 303,
								"contract": "myNFT.sol:MyNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 307,
								"contract": "myNFT.sol:MyNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 311,
								"contract": "myNFT.sol:MyNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 315,
								"contract": "myNFT.sol:MyNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 321,
								"contract": "myNFT.sol:MyNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 7,
								"contract": "myNFT.sol:MyNFT",
								"label": "tokenID",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 12,
								"contract": "myNFT.sol:MyNFT",
								"label": "tokenHashs",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
							},
							{
								"astId": 16,
								"contract": "myNFT.sol:MyNFT",
								"label": "tokens",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_string_storage)dyn_storage": {
								"base": "t_string_storage",
								"encoding": "dynamic_array",
								"label": "string[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => string[])",
								"numberOfBytes": "32",
								"value": "t_array(t_string_storage)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x3c157ba79d7fb76132f82b70d1990e10d5496e5c80e6970b84595823674edb2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e159e8ed2da809f02b24022d7245f036c8aa1e26165f1ef868c28911c182870\",\"dweb:/ipfs/QmYY8vwENVeMnrYj1swSvRpxGKj7kZNrGHuC4bWkPJsof6\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 301,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 303,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 307,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 311,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 315,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 321,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122052a01ba16b501de2139fdd8ae251f0184f585f1bce75fb632a360c419f55104964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122052a01ba16b501de2139fdd8ae251f0184f585f1bce75fb632a360c419f55104964736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE LOG0 SHL LOG1 PUSH12 0x501DE2139FDD8AE251F0184F PC PUSH0 SHL 0xCE PUSH22 0xFB632A360C419F55104964736F6C6343000814003300 ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122052a01ba16b501de2139fdd8ae251f0184f585f1bce75fb632a360c419f55104964736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE LOG0 SHL LOG1 PUSH12 0x501DE2139FDD8AE251F0184F PC PUSH0 SHL 0xCE PUSH22 0xFB632A360C419F55104964736F6C6343000814003300 ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052a01ba16b501de2139fdd8ae251f0184f585f1bce75fb632a360c419f55104964736f6c63430008140033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"myNFT.sol",
								"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d0c463f2230c88b9244129f67f18c20b5efef73beebd82f6ae01811f8f237f9364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d0c463f2230c88b9244129f67f18c20b5efef73beebd82f6ae01811f8f237f9364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xC4 PUSH4 0xF2230C88 0xB9 0x24 COINBASE 0x29 0xF6 PUSH32 0x18C20B5EFEF73BEEBD82F6AE01811F8F237F9364736F6C634300081400330000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d0c463f2230c88b9244129f67f18c20b5efef73beebd82f6ae01811f8f237f9364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xC4 PUSH4 0xF2230C88 0xB9 0x24 COINBASE 0x29 0xF6 PUSH32 0x18C20B5EFEF73BEEBD82F6AE01811F8F237F9364736F6C634300081400330000 ",
							"sourceMap": "203:14914:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0c463f2230c88b9244129f67f18c20b5efef73beebd82f6ae01811f8f237f9364736f6c63430008140033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"myNFT.sol",
								"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f1e571920df3d3b9837fa8cc61487e189feacb6e85002f98d3dd00e9aa4c60d464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f1e571920df3d3b9837fa8cc61487e189feacb6e85002f98d3dd00e9aa4c60d464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xE5 PUSH18 0x920DF3D3B9837FA8CC61487E189FEACB6E85 STOP 0x2F SWAP9 0xD3 0xDD STOP 0xE9 0xAA 0x4C PUSH1 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f1e571920df3d3b9837fa8cc61487e189feacb6e85002f98d3dd00e9aa4c60d464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xE5 PUSH18 0x920DF3D3B9837FA8CC61487E189FEACB6E85 STOP 0x2F SWAP9 0xD3 0xDD STOP 0xE9 0xAA 0x4C PUSH1 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "216:1047:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1e571920df3d3b9837fa8cc61487e189feacb6e85002f98d3dd00e9aa4c60d464736f6c63430008140033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"myNFT.sol",
								"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"node_modules/@openzeppelin/contracts/utils/Strings.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"node_modules/@openzeppelin/contracts/utils/math/Math.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> myNFT.sol:22:23:\n   |\n22 |     function tokenURI(uint256 _tokenId) public view override returns(string memory){\n   |                       ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 602,
					"file": "myNFT.sol",
					"start": 586
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> myNFT.sol:30:5:\n   |\n30 |     function _baseURI() internal view override returns(string memory){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 984,
					"file": "myNFT.sol",
					"start": 837
				},
				"type": "Warning"
			}
		],
		"sources": {
			"myNFT.sol": {
				"ast": {
					"absolutePath": "myNFT.sol",
					"exportedSymbols": {
						"Context": [
							1462
						],
						"ERC165": [
							1741
						],
						"ERC721": [
							1277
						],
						"IERC165": [
							1753
						],
						"IERC721": [
							1394
						],
						"IERC721Errors": [
							221
						],
						"IERC721Metadata": [
							1440
						],
						"IERC721Receiver": [
							1412
						],
						"MyNFT": [
							131
						],
						"Strings": [
							1717
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "./node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 1278,
							"src": "59:72:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC721",
										"nameLocations": [
											"151:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1277,
										"src": "151:6:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "151:6:0"
								}
							],
							"canonicalName": "MyNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								1277,
								221,
								1440,
								1394,
								1741,
								1753,
								1462
							],
							"name": "MyNFT",
							"nameLocation": "142:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "tokenID",
									"nameLocation": "171:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "163:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "163:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "181:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "tokenHashs",
									"nameLocation": "220:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "188:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
										"typeString": "mapping(address => string[])"
									},
									"typeName": {
										"id": 11,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 8,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "197:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "188:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
											"typeString": "mapping(address => string[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 9,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "209:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"id": 10,
											"nodeType": "ArrayTypeName",
											"src": "209:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
												"typeString": "string[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "tokens",
									"nameLocation": "264:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "236:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 15,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "245:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "236:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 14,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "256:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "355:2:0",
										"statements": []
									},
									"id": 28,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 23,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "340:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 24,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 20,
													"src": "347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 25,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 22,
												"name": "ERC721",
												"nameLocations": [
													"333:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1277,
												"src": "333:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "333:22:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "303:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "289:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 17,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "289:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "324:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "310:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 19,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "310:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:44:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:0:0"
									},
									"scope": 131,
									"src": "277:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "412:150:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "_jsonhash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "450:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 33,
																"name": "tokenHashs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "422:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$",
																	"typeString": "mapping(address => string storage ref[] storage ref)"
																}
															},
															"id": 36,
															"indexExpression": {
																"expression": {
																	"id": 34,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "433:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "437:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "433:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "422:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																"typeString": "string storage ref[] storage ref"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "445:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "422:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
															"typeString": "function (string storage ref[] storage pointer,string storage ref)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "422:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "422:38:0"
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 41,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "470:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 43,
														"indexExpression": {
															"id": 42,
															"name": "tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "477:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "470:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "_jsonhash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "488:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "470:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "470:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 48,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "513:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "517:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "513:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 50,
															"name": "tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "525:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 47,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "507:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "507:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "507:26:0"
											},
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "tokenID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "543:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "554:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "543:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "543:12:0"
											}
										]
									},
									"functionSelector": "0bdc9008",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "minting",
									"nameLocation": "373:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "_jsonhash",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "381:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "381:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:25:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:0:0"
									},
									"scope": 131,
									"src": "364:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										464
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "647:184:0",
										"statements": [
											{
												"assignments": [
													67
												],
												"declarations": [
													{
														"constant": false,
														"id": 67,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "748:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 80,
														"src": "734:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 66,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "734:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 70,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 68,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															90
														],
														"referencedDeclaration": 90,
														"src": "758:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "758:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "734:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 74,
															"name": "baseURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "799:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"baseExpression": {
																"id": 75,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "808:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																	"typeString": "mapping(uint256 => string storage ref)"
																}
															},
															"id": 77,
															"indexExpression": {
																"id": 76,
																"name": "tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "815:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "808:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "785:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 71,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "785:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "792:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "785:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 65,
												"id": 79,
												"nodeType": "Return",
												"src": "778:46:0"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "577:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 62,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "616:8:0"
									},
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "594:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "586:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:18:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "633:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 63,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "632:15:0"
									},
									"scope": 131,
									"src": "568:263:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										473
									],
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "902:82:0",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f626c61636b2d656c6465726c792d776f6c766572696e652d3638352e6d7970696e6174612e636c6f75642f697066732f",
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "919:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_82b359026e8c4a10545b72abcef5b7323d4ff62dda9910b7e947419e0f56ebc4",
														"typeString": "literal_string \"https://black-elderly-wolverine-685.mypinata.cloud/ipfs/\""
													},
													"value": "https://black-elderly-wolverine-685.mypinata.cloud/ipfs/"
												},
												"functionReturnParameters": 86,
												"id": 88,
												"nodeType": "Return",
												"src": "912:65:0"
											}
										]
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "846:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "871:8:0"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "888:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:15:0"
									},
									"scope": 131,
									"src": "837:147:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1049:188:0",
										"statements": [
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"mutability": "mutable",
														"name": "allTokens",
														"nameLocation": "1075:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "1059:25:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
															"typeString": "string[]"
														},
														"typeName": {
															"baseType": {
																"id": 98,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1059:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string"
																}
															},
															"id": 99,
															"nodeType": "ArrayTypeName",
															"src": "1059:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
																"typeString": "string[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [
														{
															"id": 104,
															"name": "tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1100:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1087:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 101,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1091:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string"
																}
															},
															"id": 102,
															"nodeType": "ArrayTypeName",
															"src": "1091:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
																"typeString": "string[]"
															}
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
														"typeString": "string memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1059:49:0"
											},
											{
												"body": {
													"id": 125,
													"nodeType": "Block",
													"src": "1156:49:0",
													"statements": [
														{
															"expression": {
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 117,
																		"name": "allTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "1170:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"typeString": "string memory[] memory"
																		}
																	},
																	"id": 119,
																	"indexExpression": {
																		"id": 118,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 108,
																		"src": "1180:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1170:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 120,
																		"name": "tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1185:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 122,
																	"indexExpression": {
																		"id": 121,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 108,
																		"src": "1192:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1185:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"src": "1170:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 124,
															"nodeType": "ExpressionStatement",
															"src": "1170:24:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 111,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "1138:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 112,
														"name": "tokenID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1142:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1138:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 126,
												"initializationExpression": {
													"assignments": [
														108
													],
													"declarations": [
														{
															"constant": false,
															"id": 108,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1131:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 126,
															"src": "1123:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 107,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1123:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 110,
													"initialValue": {
														"hexValue": "30",
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1135:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1123:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1151:3:0",
														"subExpression": {
															"id": 114,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1151:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 116,
													"nodeType": "ExpressionStatement",
													"src": "1151:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1118:87:0"
											},
											{
												"expression": {
													"id": 127,
													"name": "allTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 100,
													"src": "1221:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
														"typeString": "string memory[] memory"
													}
												},
												"functionReturnParameters": 95,
												"id": 128,
												"nodeType": "Return",
												"src": "1214:16:0"
											}
										]
									},
									"functionSelector": "4bf5bf35",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewTokens",
									"nameLocation": "999:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:2:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1033:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 92,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1033:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 93,
													"nodeType": "ArrayTypeName",
													"src": "1033:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:17:0"
									},
									"scope": 131,
									"src": "990:247:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 132,
							"src": "133:1106:0",
							"usedErrors": [
								179,
								184,
								193,
								198,
								203,
								210,
								215,
								220
							],
							"usedEvents": [
								1293,
								1302,
								1311
							]
						}
					],
					"src": "33:1206:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							268
						],
						"IERC20Errors": [
							173
						],
						"IERC721Errors": [
							221
						]
					},
					"id": 269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 173,
							"linearizedBaseContracts": [
								173
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 143,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 148,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 153,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 162,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 167,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 172,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 269,
							"src": "278:1764:1",
							"usedErrors": [
								143,
								148,
								153,
								162,
								167,
								172
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 174,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 179,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 184,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 193,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 198,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 203,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 210,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 215,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 220,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 269,
							"src": "2186:2092:1",
							"usedErrors": [
								179,
								184,
								193,
								198,
								203,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 268,
							"linearizedBaseContracts": [
								268
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 233,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 238,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 243,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 250,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 255,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 260,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 267,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 269,
							"src": "4424:2107:1",
							"usedErrors": [
								233,
								238,
								243,
								250,
								255,
								260,
								267
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1462
						],
						"ERC165": [
							1741
						],
						"ERC721": [
							1277
						],
						"IERC165": [
							1753
						],
						"IERC721": [
							1394
						],
						"IERC721Errors": [
							221
						],
						"IERC721Metadata": [
							1440
						],
						"IERC721Receiver": [
							1412
						],
						"Strings": [
							1717
						]
					},
					"id": 1278,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 272,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1278,
							"sourceUnit": 1395,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 271,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1394,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 274,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1278,
							"sourceUnit": 1413,
							"src": "172:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 273,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1412,
										"src": "180:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1278,
							"sourceUnit": 1441,
							"src": "227:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 275,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1440,
										"src": "235:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 278,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1278,
							"sourceUnit": 1463,
							"src": "293:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 277,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1462,
										"src": "301:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 280,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1278,
							"sourceUnit": 1718,
							"src": "342:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 279,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1717,
										"src": "350:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1278,
							"sourceUnit": 1742,
							"src": "391:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 281,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1753,
										"src": "399:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 282,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1741,
										"src": "408:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1278,
							"sourceUnit": 269,
							"src": "461:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 284,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 221,
										"src": "469:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 287,
										"name": "Context",
										"nameLocations": [
											"804:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1462,
										"src": "804:7:2"
									},
									"id": 288,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:2"
								},
								{
									"baseName": {
										"id": 289,
										"name": "ERC165",
										"nameLocations": [
											"813:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1741,
										"src": "813:6:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:2"
								},
								{
									"baseName": {
										"id": 291,
										"name": "IERC721",
										"nameLocations": [
											"821:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1394,
										"src": "821:7:2"
									},
									"id": 292,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:2"
								},
								{
									"baseName": {
										"id": 293,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1440,
										"src": "830:15:2"
									},
									"id": 294,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:2"
								},
								{
									"baseName": {
										"id": 295,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 221,
										"src": "847:13:2"
									},
									"id": 296,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1277,
							"linearizedBaseContracts": [
								1277,
								221,
								1440,
								1394,
								1741,
								1753,
								1462
							],
							"name": "ERC721",
							"nameLocation": "794:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 299,
									"libraryName": {
										"id": 297,
										"name": "Strings",
										"nameLocations": [
											"873:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1717,
										"src": "873:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:2",
									"typeName": {
										"id": 298,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 301,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "950:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "935:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 300,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "935:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 303,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1015:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "1000:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 302,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1000:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1434:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "1390:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 306,
										"keyName": "tokenId",
										"keyNameLocation": "1406:7:2",
										"keyType": {
											"id": 304,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1398:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1390:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1417:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 311,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1656:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "1614:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 310,
										"keyName": "owner",
										"keyNameLocation": "1630:5:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1622:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1614:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 309,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1639:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1898:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "1854:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 314,
										"keyName": "tokenId",
										"keyNameLocation": "1870:7:2",
										"keyType": {
											"id": 312,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1862:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1854:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 313,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1881:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 321,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "2234:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1277,
									"src": "2166:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 320,
										"keyName": "owner",
										"keyNameLocation": "2182:5:2",
										"keyType": {
											"id": 316,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2174:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2166:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 319,
											"keyName": "operator",
											"keyNameLocation": "2207:8:2",
											"keyType": {
												"id": 317,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2199:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2191:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 318,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2219:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "2428:57:2",
										"statements": [
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "2438:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 330,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "2446:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2438:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2438:13:2"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 333,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2461:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 334,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2471:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2461:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "2461:17:2"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "2259:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 338,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2398:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2384:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2384:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2419:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2405:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 325,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2405:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2383:44:2"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2428:0:2"
									},
									"scope": 1277,
									"src": "2372:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1740,
										1752
									],
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2774:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 349,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2803:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 351,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "2823:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1394_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1394_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 350,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2818:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2818:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1394",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2832:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2818:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2803:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2859:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 357,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "2879:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1440_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1440_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 356,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2874:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2874:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1440",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2896:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2874:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2859:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2803:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 364,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2947:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 362,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2923:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1277_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2929:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1740,
															"src": "2923:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2923:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2803:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 348,
												"id": 367,
												"nodeType": "Return",
												"src": "2784:175:2"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "2491:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2675:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 345,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 343,
												"name": "ERC165",
												"nameLocations": [
													"2742:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1741,
												"src": "2742:6:2"
											},
											{
												"id": 344,
												"name": "IERC165",
												"nameLocations": [
													"2750:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1753,
												"src": "2750:7:2"
											}
										],
										"src": "2733:25:2"
									},
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2700:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2693:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 340,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2693:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:20:2"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2768:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 346,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2768:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:6:2"
									},
									"scope": 1277,
									"src": "2666:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1319
									],
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "3186:136:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 377,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3200:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3217:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3209:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 378,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3209:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3209:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3200:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 391,
												"nodeType": "IfStatement",
												"src": "3196:87:2",
												"trueBody": {
													"id": 390,
													"nodeType": "Block",
													"src": "3221:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 386,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3269:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3261:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 384,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3261:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3261:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 383,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "3242:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3242:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 389,
															"nodeType": "RevertStatement",
															"src": "3235:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 392,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "3299:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 394,
													"indexExpression": {
														"id": 393,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3309:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3299:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 376,
												"id": 395,
												"nodeType": "Return",
												"src": "3292:23:2"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2972:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3123:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3141:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3133:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3133:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3132:15:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3177:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:9:2"
									},
									"scope": 1277,
									"src": "3114:208:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "3608:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "3639:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 405,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "3625:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3625:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 404,
												"id": 408,
												"nodeType": "Return",
												"src": "3618:29:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "3328:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "3545:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3561:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3553:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3553:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3552:17:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3599:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3599:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3598:9:2"
									},
									"scope": 1277,
									"src": "3536:118:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1425
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "3821:29:2",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 301,
													"src": "3838:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "3831:12:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "3660:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3770:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3774:2:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "3806:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3806:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3805:15:2"
									},
									"scope": 1277,
									"src": "3761:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "3976:31:2",
										"statements": [
											{
												"expression": {
													"id": 425,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 303,
													"src": "3993:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "3986:14:2"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "3856:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3923:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3929:2:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "3961:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3961:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3960:15:2"
									},
									"scope": 1277,
									"src": "3914:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1439
									],
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "4268:176:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 437,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4292:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 436,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "4278:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4278:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "4278:22:2"
											},
											{
												"assignments": [
													441
												],
												"declarations": [
													{
														"constant": false,
														"id": 441,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "4325:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "4311:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 440,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4311:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 442,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "4335:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4335:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4311:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 447,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "4368:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4362:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 445,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "4362:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4362:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4377:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4362:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4386:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4362:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4435:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4362:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 455,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "4404:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 456,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "4413:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4421:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1530,
																	"src": "4413:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4413:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4390:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 452,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "4390:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4397:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "4390:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4390:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 435,
												"id": 462,
												"nodeType": "Return",
												"src": "4355:82:2"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "4013:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "4198:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4215:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4207:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4206:17:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4253:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 433,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4253:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:15:2"
									},
									"scope": 1277,
									"src": "4189:255:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "5390:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5407:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 469,
												"id": 471,
												"nodeType": "Return",
												"src": "5400:9:2"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "4450:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "5333:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5341:2:2"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "5375:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5375:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5374:15:2"
									},
									"scope": 1277,
									"src": "5324:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "5534:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 482,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5553:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 484,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "5566:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5566:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 481,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1080,
															1146
														],
														"referencedDeclaration": 1080,
														"src": "5544:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5544:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "5544:35:2"
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "5422:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5482:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5498:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5490:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5510:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5502:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5502:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5489:29:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5534:0:2"
									},
									"scope": 1277,
									"src": "5473:113:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1383
									],
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "5723:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 498,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "5733:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5733:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "5733:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 502,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "5786:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 501,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "5773:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5773:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 496,
												"id": 504,
												"nodeType": "Return",
												"src": "5766:28:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "5592:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5656:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "5668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5667:17:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "5714:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5714:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:9:2"
									},
									"scope": 1277,
									"src": "5647:154:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "5943:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 515,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "5972:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5972:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "5986:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "5996:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 514,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "5953:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5953:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "5953:52:2"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "5807:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5877:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5903:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5895:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5895:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5918:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5913:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5913:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5894:33:2"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5943:0:2"
									},
									"scope": 1277,
									"src": "5868:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1393
									],
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "6172:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 532,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "6189:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 534,
														"indexExpression": {
															"id": 533,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "6208:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6189:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 536,
													"indexExpression": {
														"id": 535,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "6215:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6189:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 531,
												"id": 537,
												"nodeType": "Return",
												"src": "6182:42:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "6018:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "6087:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6112:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "6104:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6127:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "6119:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6119:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6103:33:2"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "6166:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 529,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6166:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6165:6:2"
									},
									"scope": 1277,
									"src": "6078:153:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1359
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "6373:498:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 549,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "6387:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6401:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6393:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 550,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6393:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6393:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6387:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 563,
												"nodeType": "IfStatement",
												"src": "6383:87:2",
												"trueBody": {
													"id": 562,
													"nodeType": "Block",
													"src": "6405:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6456:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6448:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 556,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6448:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6448:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 555,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "6426:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6426:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 561,
															"nodeType": "RevertStatement",
															"src": "6419:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													565
												],
												"declarations": [
													{
														"constant": false,
														"id": 565,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "6696:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 584,
														"src": "6688:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 564,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6688:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"arguments": [
														{
															"id": 567,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "6720:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "6724:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 569,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "6733:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6733:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 566,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "6712:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6712:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6688:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 573,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "6760:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 574,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "6777:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6760:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "6756:109:2",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "6783:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 577,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 542,
																		"src": "6825:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 578,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "6831:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 579,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 565,
																		"src": "6840:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 576,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "6804:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6804:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "6797:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "6237:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6302:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6323:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "6315:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6315:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6337:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "6329:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6349:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "6341:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6341:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6314:43:2"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6373:0:2"
									},
									"scope": 1277,
									"src": "6293:578:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1349
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "7013:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 596,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "7040:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 597,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "7046:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "7050:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7059:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 595,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															603,
															629
														],
														"referencedDeclaration": 629,
														"src": "7023:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7023:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "7023:39:2"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "6877:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6946:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6971:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "6963:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6963:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6985:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "6977:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6997:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "6989:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6989:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6962:43:2"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7013:0:2"
									},
									"scope": 1277,
									"src": "6937:132:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1339
									],
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "7238:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "7267:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "7271:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "7248:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7248:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "7248:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 622,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7312:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "7318:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "7322:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 625,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "7331:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 621,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "7289:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "7289:47:2"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "7075:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "7144:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7169:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "7161:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7161:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7183:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "7175:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "7187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7217:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "7204:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7204:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7160:62:2"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7238:0:2"
									},
									"scope": 1277,
									"src": "7135:208:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "7932:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 637,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "7949:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 639,
													"indexExpression": {
														"id": 638,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "7957:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7949:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 636,
												"id": 640,
												"nodeType": "Return",
												"src": "7942:23:2"
											}
										]
									},
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "7349:503:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "7866:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7883:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "7875:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7875:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7874:17:2"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "7923:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7923:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7922:9:2"
									},
									"scope": 1277,
									"src": "7857:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "8167:48:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 650,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "8184:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 652,
													"indexExpression": {
														"id": 651,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "8200:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8184:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 649,
												"id": 653,
												"nodeType": "Return",
												"src": "8177:31:2"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "7978:105:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "8097:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8118:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "8110:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8110:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8109:17:2"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "8158:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8157:9:2"
									},
									"scope": 1277,
									"src": "8088:127:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "8635:163:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 667,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "8664:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8683:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8675:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 668,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8675:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8675:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8664:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 673,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 658,
																			"src": "8702:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 674,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 660,
																			"src": "8711:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "8702:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 677,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 658,
																				"src": "8739:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 678,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 660,
																				"src": "8746:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 676,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "8722:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8722:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "8702:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 682,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "8771:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 681,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 655,
																			"src": "8758:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8758:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 684,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "8783:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "8758:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8702:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 687,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8701:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8664:127:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 666,
												"id": 689,
												"nodeType": "Return",
												"src": "8645:146:2"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "8221:300:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "8535:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8557:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "8549:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8549:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8572:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "8564:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8564:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "8581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8581:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8548:49:2"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "8629:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8629:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8628:6:2"
									},
									"scope": 1277,
									"src": "8526:272:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "9329:271:2",
										"statements": [
											{
												"condition": {
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9343:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 702,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "9358:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 703,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "9365:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 704,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "9374:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 701,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "9344:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9344:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "9339:255:2",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "9384:210:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 707,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "9402:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9419:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9411:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 708,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9411:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9411:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9402:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 723,
																"nodeType": "Block",
																"src": "9500:84:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 719,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 696,
																					"src": "9552:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 720,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 698,
																					"src": "9561:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 718,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 210,
																				"src": "9525:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9525:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 722,
																		"nodeType": "RevertStatement",
																		"src": "9518:51:2"
																	}
																]
															},
															"id": 724,
															"nodeType": "IfStatement",
															"src": "9398:186:2",
															"trueBody": {
																"id": 717,
																"nodeType": "Block",
																"src": "9423:71:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 714,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 698,
																					"src": "9471:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 713,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "9448:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9448:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 716,
																		"nodeType": "RevertStatement",
																		"src": "9441:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "8804:423:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "9241:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9266:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "9258:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9281:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "9273:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9273:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9298:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "9290:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9290:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9257:49:2"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9329:0:2"
									},
									"scope": 1277,
									"src": "9232:368:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "10317:78:2",
										"statements": [
											{
												"id": 742,
												"nodeType": "UncheckedBlock",
												"src": "10327:62:2",
												"statements": [
													{
														"expression": {
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 736,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "10351:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 738,
																"indexExpression": {
																	"id": 737,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "10361:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10351:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 739,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "10373:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "10351:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 741,
														"nodeType": "ExpressionStatement",
														"src": "10351:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "9606:631:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "10251:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10276:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "10268:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10268:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10293:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "10285:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 732,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "10285:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10267:32:2"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10317:0:2"
									},
									"scope": 1277,
									"src": "10242:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "11083:700:2",
										"statements": [
											{
												"assignments": [
													757
												],
												"declarations": [
													{
														"constant": false,
														"id": 757,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "11101:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "11093:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 756,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11093:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"arguments": [
														{
															"id": 759,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "11117:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 758,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "11108:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11108:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11093:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 762,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "11185:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11201:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11193:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 763,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11193:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11193:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11185:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 775,
												"nodeType": "IfStatement",
												"src": "11181:86:2",
												"trueBody": {
													"id": 774,
													"nodeType": "Block",
													"src": "11205:62:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 769,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "11236:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 770,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 751,
																		"src": "11242:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 771,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "11248:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 768,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "11219:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11219:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 773,
															"nodeType": "ExpressionStatement",
															"src": "11219:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 776,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "11311:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11327:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11319:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 777,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11319:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11319:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11311:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 803,
												"nodeType": "IfStatement",
												"src": "11307:256:2",
												"trueBody": {
													"id": 802,
													"nodeType": "Block",
													"src": "11331:232:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11444:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11436:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 783,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11436:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11436:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 787,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "11448:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11465:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11457:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 788,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11457:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11457:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11469:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 782,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1080,
																		1146
																	],
																	"referencedDeclaration": 1146,
																	"src": "11427:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11427:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 794,
															"nodeType": "ExpressionStatement",
															"src": "11427:48:2"
														},
														{
															"id": 801,
															"nodeType": "UncheckedBlock",
															"src": "11490:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 795,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 311,
																				"src": "11518:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 797,
																			"indexExpression": {
																				"id": 796,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "11528:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "11518:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11537:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11518:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 800,
																	"nodeType": "ExpressionStatement",
																	"src": "11518:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 804,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "11577:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11591:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11583:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 805,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11583:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11583:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11577:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 818,
												"nodeType": "IfStatement",
												"src": "11573:107:2",
												"trueBody": {
													"id": 817,
													"nodeType": "Block",
													"src": "11595:85:2",
													"statements": [
														{
															"id": 816,
															"nodeType": "UncheckedBlock",
															"src": "11609:61:2",
															"statements": [
																{
																	"expression": {
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 810,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 311,
																				"src": "11637:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 812,
																			"indexExpression": {
																				"id": 811,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 747,
																				"src": "11647:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "11637:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11654:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11637:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 815,
																	"nodeType": "ExpressionStatement",
																	"src": "11637:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 819,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "11690:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 821,
														"indexExpression": {
															"id": 820,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "11698:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11690:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 822,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "11709:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11690:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "11690:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 826,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "11736:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 827,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "11742:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 828,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "11746:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 825,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "11727:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11727:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "EmitStatement",
												"src": "11722:32:2"
											},
											{
												"expression": {
													"id": 831,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 757,
													"src": "11772:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 755,
												"id": 832,
												"nodeType": "Return",
												"src": "11765:11:2"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "10401:582:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "10997:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11013:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "11005:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11025:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "11017:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11017:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "11042:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "11034:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11034:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:43:2"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "11074:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11074:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11073:9:2"
									},
									"scope": 1277,
									"src": "10988:795:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "12158:274:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 842,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "12172:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12186:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12178:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 843,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12178:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12178:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12172:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "12168:87:2",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "12190:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 851,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12241:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12233:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 849,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12233:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12233:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 848,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "12211:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12211:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 854,
															"nodeType": "RevertStatement",
															"src": "12204:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12272:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 883,
														"src": "12264:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 857,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12264:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 867,
												"initialValue": {
													"arguments": [
														{
															"id": 860,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "12296:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "12300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12317:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12309:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 862,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12309:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12309:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 859,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "12288:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12288:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12264:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 868,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "12334:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12359:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12351:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 869,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12351:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12351:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12334:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "12330:96:2",
												"trueBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "12363:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12412:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12404:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 875,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12404:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12404:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 874,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "12384:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12384:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 880,
															"nodeType": "RevertStatement",
															"src": "12377:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "11789:311:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12114:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12128:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "12120:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12120:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12140:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "12132:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12132:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12119:29:2"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12158:0:2"
									},
									"scope": 1277,
									"src": "12105:327:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "12840:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "12860:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "12864:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12873:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 892,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															899,
															925
														],
														"referencedDeclaration": 925,
														"src": "12850:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12850:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "12850:26:2"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "12438:340:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "12792:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12810:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "12802:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12822:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "12814:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12801:29:2"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:2"
									},
									"scope": 1277,
									"src": "12783:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "13188:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "13204:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "13208:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "13198:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13198:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "13198:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13257:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13249:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 915,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13249:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13249:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "13261:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 920,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "13265:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 921,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "13274:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 914,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "13226:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13226:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "13226:53:2"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "12889:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "13113:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13131:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "13123:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13123:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13143:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "13135:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13165:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "13152:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 905,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13152:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13122:48:2"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13188:0:2"
									},
									"scope": 1277,
									"src": "13104:182:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "13653:186:2",
										"statements": [
											{
												"assignments": [
													932
												],
												"declarations": [
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "13671:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 957,
														"src": "13663:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 931,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13663:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 944,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13703:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13695:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 934,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13695:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13695:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 938,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "13707:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13724:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13716:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 939,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13716:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13716:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 933,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "13687:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13687:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13663:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 945,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "13741:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13766:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13758:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 946,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13758:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13758:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13741:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 956,
												"nodeType": "IfStatement",
												"src": "13737:96:2",
												"trueBody": {
													"id": 955,
													"nodeType": "Block",
													"src": "13770:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 952,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "13814:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 951,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "13791:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13791:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 954,
															"nodeType": "RevertStatement",
															"src": "13784:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "13292:315:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13621:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13635:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "13627:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13627:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13626:17:2"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13653:0:2"
									},
									"scope": 1277,
									"src": "13612:227:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "14234:389:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 968,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "14248:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14254:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 969,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14254:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14254:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14248:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "14244:87:2",
												"trueBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "14266:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 977,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14317:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14309:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 975,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "14309:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14309:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 974,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "14287:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14287:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 980,
															"nodeType": "RevertStatement",
															"src": "14280:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "14348:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "14340:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 983,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14340:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [
														{
															"id": 986,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "14372:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "14376:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14393:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14385:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 988,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14385:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14385:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 985,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "14364:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14364:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14340:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 994,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "14410:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14435:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14427:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 995,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14427:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14427:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14410:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1005,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "14512:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1006,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "14529:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14512:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1015,
													"nodeType": "IfStatement",
													"src": "14508:109:2",
													"trueBody": {
														"id": 1014,
														"nodeType": "Block",
														"src": "14535:82:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1009,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "14577:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1010,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 965,
																			"src": "14583:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1011,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 984,
																			"src": "14592:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1008,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "14556:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14556:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1013,
																"nodeType": "RevertStatement",
																"src": "14549:57:2"
															}
														]
													}
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "14406:211:2",
												"trueBody": {
													"id": 1004,
													"nodeType": "Block",
													"src": "14439:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1001,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "14483:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1000,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "14460:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14460:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1003,
															"nodeType": "RevertStatement",
															"src": "14453:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "13845:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "14172:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14190:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "14182:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14182:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14204:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "14196:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14196:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14216:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "14208:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14208:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14181:43:2"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14234:0:2"
									},
									"scope": 1277,
									"src": "14163:460:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "15631:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1029,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "15655:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1030,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "15661:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1031,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "15665:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15674:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1028,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1036,
															1062
														],
														"referencedDeclaration": 1062,
														"src": "15641:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15641:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "15641:36:2"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "14629:922:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "15565:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15587:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "15579:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15579:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15601:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "15593:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15593:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15613:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "15605:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15605:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15578:43:2"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15631:0:2"
									},
									"scope": 1277,
									"src": "15556:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "16023:102:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "16043:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "16049:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1051,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "16053:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "16033:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16033:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "16033:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1055,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "16094:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "16100:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1057,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "16104:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1058,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "16113:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1054,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "16071:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16071:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "16071:47:2"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "15690:226:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "15930:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15952:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "15944:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15944:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15966:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "15958:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15958:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15978:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "15970:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16000:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "15987:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15987:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15943:62:2"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16023:0:2"
									},
									"scope": 1277,
									"src": "15921:204:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "16638:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1073,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "16657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "16661:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1075,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "16670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16676:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1072,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1080,
															1146
														],
														"referencedDeclaration": 1146,
														"src": "16648:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16648:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "16648:33:2"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "16131:432:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "16577:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16594:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16586:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16586:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16606:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16598:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16598:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "16623:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16615:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16615:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16585:43:2"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16638:0:2"
									},
									"scope": 1277,
									"src": "16568:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "16964:568:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1092,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "17030:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1093,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "17043:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17059:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17051:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1094,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17051:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17051:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "17043:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17030:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1138,
												"nodeType": "IfStatement",
												"src": "17026:460:2",
												"trueBody": {
													"id": 1137,
													"nodeType": "Block",
													"src": "17063:423:2",
													"statements": [
														{
															"assignments": [
																1101
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1101,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "17085:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1137,
																	"src": "17077:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17077:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1105,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1103,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "17107:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1102,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "17093:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17093:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17077:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1106,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "17243:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "17259:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "17251:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1107,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "17251:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17251:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "17243:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1112,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "17265:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1113,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "17274:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "17265:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "17243:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "17282:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1117,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "17300:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1118,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1087,
																				"src": "17307:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1116,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "17283:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17283:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "17243:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1127,
															"nodeType": "IfStatement",
															"src": "17239:142:2",
															"trueBody": {
																"id": 1126,
																"nodeType": "Block",
																"src": "17314:67:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1123,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1087,
																					"src": "17361:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1122,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 215,
																				"src": "17339:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17339:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1125,
																		"nodeType": "RevertStatement",
																		"src": "17332:34:2"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1128,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "17399:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1136,
															"nodeType": "IfStatement",
															"src": "17395:81:2",
															"trueBody": {
																"id": 1135,
																"nodeType": "Block",
																"src": "17410:66:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1130,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "17442:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1131,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1083,
																					"src": "17449:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1132,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "17453:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1129,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1302,
																				"src": "17433:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17433:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1134,
																		"nodeType": "EmitStatement",
																		"src": "17428:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1139,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "17496:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1141,
														"indexExpression": {
															"id": 1140,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "17512:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17496:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1142,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "17523:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17496:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "17496:29:2"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "16694:171:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "16879:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16896:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "16888:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16888:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16908:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "16900:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16900:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "16925:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "16917:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16917:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "16936:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "16931:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1088,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16931:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16887:59:2"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16964:0:2"
									},
									"scope": 1277,
									"src": "16870:662:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "17834:219:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1156,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "17848:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17868:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17860:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1157,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17860:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17860:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17848:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1167,
												"nodeType": "IfStatement",
												"src": "17844:91:2",
												"trueBody": {
													"id": 1166,
													"nodeType": "Block",
													"src": "17872:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1163,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "17915:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1162,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "17893:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17893:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1165,
															"nodeType": "RevertStatement",
															"src": "17886:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1168,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "17944:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1171,
															"indexExpression": {
																"id": 1169,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "17963:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17944:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1172,
														"indexExpression": {
															"id": 1170,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "17970:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17944:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1173,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "17982:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17944:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "17944:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1177,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "18020:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1178,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "18027:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1179,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "18037:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1176,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "18005:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18005:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "EmitStatement",
												"src": "18000:46:2"
											}
										]
									},
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "17538:198:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "17750:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17777:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "17769:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17769:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17792:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "17784:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17784:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17807:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "17802:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17802:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17768:48:2"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17834:0:2"
									},
									"scope": 1277,
									"src": "17741:312:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "18360:169:2",
										"statements": [
											{
												"assignments": [
													1192
												],
												"declarations": [
													{
														"constant": false,
														"id": 1192,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "18378:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1211,
														"src": "18370:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1191,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "18370:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1196,
												"initialValue": {
													"arguments": [
														{
															"id": 1194,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "18395:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1193,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "18386:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18386:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18370:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1197,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "18417:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18434:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18426:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1198,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18426:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18426:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18417:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1208,
												"nodeType": "IfStatement",
												"src": "18413:88:2",
												"trueBody": {
													"id": 1207,
													"nodeType": "Block",
													"src": "18438:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1204,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "18482:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1203,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "18459:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18459:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1206,
															"nodeType": "RevertStatement",
															"src": "18452:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1209,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1192,
													"src": "18517:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1190,
												"id": 1210,
												"nodeType": "Return",
												"src": "18510:12:2"
											}
										]
									},
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "18059:224:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "18297:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18319:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "18311:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18311:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18310:17:2"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "18351:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18351:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18350:9:2"
									},
									"scope": 1277,
									"src": "18288:241:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "19170:680:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1224,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "19184:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19187:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "19184:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19192:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19184:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19201:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19184:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1274,
												"nodeType": "IfStatement",
												"src": "19180:664:2",
												"trueBody": {
													"id": 1273,
													"nodeType": "Block",
													"src": "19204:640:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1253,
																		"nodeType": "Block",
																		"src": "19318:162:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1246,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1242,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1240,
																						"src": "19340:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1243,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1412,
																								"src": "19350:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1412_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1244,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "19366:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1411,
																							"src": "19350:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1245,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "19383:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "19350:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "19340:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1252,
																				"nodeType": "IfStatement",
																				"src": "19336:130:2",
																				"trueBody": {
																					"id": 1251,
																					"nodeType": "Block",
																					"src": "19393:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1248,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1217,
																										"src": "19444:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1247,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 203,
																									"src": "19422:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1249,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "19422:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1250,
																							"nodeType": "RevertStatement",
																							"src": "19415:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1254,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1241,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1240,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "19310:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1254,
																				"src": "19303:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1239,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "19303:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "19302:15:2"
																	},
																	"src": "19294:186:2"
																},
																{
																	"block": {
																		"id": 1270,
																		"nodeType": "Block",
																		"src": "19509:325:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1258,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1256,
																							"src": "19531:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1259,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "19538:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "19531:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1260,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "19548:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "19531:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1268,
																					"nodeType": "Block",
																					"src": "19630:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "19716:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "19753:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "19757:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "19749:3:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "19749:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "19772:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "19766:5:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "19766:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "19742:6:2"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "19742:38:2"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "19742:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1256,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "19757:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1256,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "19772:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1267,
																							"nodeType": "InlineAssembly",
																							"src": "19707:95:2"
																						}
																					]
																				},
																				"id": 1269,
																				"nodeType": "IfStatement",
																				"src": "19527:293:2",
																				"trueBody": {
																					"id": 1266,
																					"nodeType": "Block",
																					"src": "19551:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1263,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1217,
																										"src": "19602:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1262,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 203,
																									"src": "19580:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1264,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "19580:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1265,
																							"nodeType": "RevertStatement",
																							"src": "19573:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1271,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1257,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1256,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "19501:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1271,
																				"src": "19488:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1255,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "19488:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "19487:21:2"
																	},
																	"src": "19481:353:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1233,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "19259:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19259:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1235,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "19273:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1236,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "19279:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1237,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "19288:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1230,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1217,
																				"src": "19238:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1229,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1412,
																			"src": "19222:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1412_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19222:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1412",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "19242:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1411,
																	"src": "19222:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19222:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1272,
															"nodeType": "TryStatement",
															"src": "19218:616:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "18535:528:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "19077:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19108:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "19100:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19100:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19122:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "19114:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "19126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19126:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19156:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "19143:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19143:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19099:62:2"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19170:0:2"
									},
									"scope": 1277,
									"src": "19068:782:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1278,
							"src": "776:19076:2",
							"usedErrors": [
								179,
								184,
								193,
								198,
								203,
								210,
								215,
								220
							],
							"usedEvents": [
								1293,
								1302,
								1311
							]
						}
					],
					"src": "107:19746:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1753
						],
						"IERC721": [
							1394
						]
					},
					"id": 1395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1279,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1281,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1395,
							"sourceUnit": 1754,
							"src": "134:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1280,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1753,
										"src": "142:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1283,
										"name": "IERC165",
										"nameLocations": [
											"287:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1753,
										"src": "287:7:3"
									},
									"id": 1284,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1282,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1394,
							"linearizedBaseContracts": [
								1394,
								1753
							],
							"name": "IERC721",
							"nameLocation": "276:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1293,
									"name": "Transfer",
									"nameLocation": "400:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "409:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "431:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "451:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:3"
									},
									"src": "394:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1302,
									"name": "Approval",
									"nameLocation": "587:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "596:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "619:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "645:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:3"
									},
									"src": "581:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1311,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "819:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "842:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "868:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:3"
									},
									"src": "798:85:3"
								},
								{
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "989:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:3"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "1027:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:3"
									},
									"scope": 1394,
									"src": "970:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1203:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:3"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1243:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:3"
									},
									"scope": 1394,
									"src": "1186:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1860:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1874:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1903:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:3"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:3"
									},
									"scope": 1394,
									"src": "1834:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2701:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:3"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:3"
									},
									"scope": 1394,
									"src": "2649:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "3492:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "3506:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:3"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:3"
									},
									"scope": 1394,
									"src": "3470:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "4024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "4036:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:3"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:3"
									},
									"scope": 1394,
									"src": "4007:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4415:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "4433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:3"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:3"
									},
									"scope": 1394,
									"src": "4388:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4628:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:3"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4668:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:3"
									},
									"scope": 1394,
									"src": "4607:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "4861:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "4876:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:3"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "4917:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:3"
									},
									"scope": 1394,
									"src": "4835:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1395,
							"src": "266:4659:3",
							"usedErrors": [],
							"usedEvents": [
								1293,
								1302,
								1311
							]
						}
					],
					"src": "108:4818:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1412
						]
					},
					"id": 1413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1397,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1412,
							"linearizedBaseContracts": [
								1412
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "867:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "893:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "915:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "940:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:4"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "984:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1408,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:4"
									},
									"scope": 1412,
									"src": "832:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1413,
							"src": "295:699:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1394
						],
						"IERC721Metadata": [
							1440
						]
					},
					"id": 1441,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1414,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:5"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1416,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1441,
							"sourceUnit": 1395,
							"src": "153:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1415,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1394,
										"src": "161:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1418,
										"name": "IERC721",
										"nameLocations": [
											"357:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1394,
										"src": "357:7:5"
									},
									"id": 1419,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:5"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1417,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1440,
							"linearizedBaseContracts": [
								1440,
								1394,
								1753
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:5"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "473:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:5"
									},
									"scope": 1440,
									"src": "434:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:5"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "600:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1428,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:5"
									},
									"scope": 1440,
									"src": "559:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:5"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1436,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:5"
									},
									"scope": 1440,
									"src": "716:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1441,
							"src": "328:463:5",
							"usedErrors": [],
							"usedEvents": [
								1293,
								1302,
								1311
							]
						}
					],
					"src": "127:665:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1462
						]
					},
					"id": 1463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1442,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1443,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1462,
							"linearizedBaseContracts": [
								1462
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1448,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1447,
												"id": 1450,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1462,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1457,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1456,
												"id": 1459,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1462,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1463,
							"src": "624:235:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2807
						],
						"SignedMath": [
							2912
						],
						"Strings": [
							1717
						]
					},
					"id": 1718,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 2808,
							"src": "127:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1465,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2807,
										"src": "135:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1718,
							"sourceUnit": 2913,
							"src": "165:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1467,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2912,
										"src": "173:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1469,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1717,
							"linearizedBaseContracts": [
								1717
							],
							"name": "Strings",
							"nameLocation": "259:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1472,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "273:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1470,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1475,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "335:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1473,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1474,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:7",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1482,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "520:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:7"
									},
									"src": "470:66:7"
								},
								{
									"body": {
										"id": 1529,
										"nodeType": "Block",
										"src": "708:627:7",
										"statements": [
											{
												"id": 1528,
												"nodeType": "UncheckedBlock",
												"src": "718:611:7",
												"statements": [
													{
														"assignments": [
															1491
														],
														"declarations": [
															{
																"constant": false,
																"id": 1491,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1528,
																"src": "742:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1490,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1498,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1494,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "770:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1492,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2807,
																		"src": "759:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2807_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2627,
																	"src": "759:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:7"
													},
													{
														"assignments": [
															1500
														],
														"declarations": [
															{
																"constant": false,
																"id": 1500,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1528,
																"src": "794:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1499,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1505,
														"initialValue": {
															"arguments": [
																{
																	"id": 1503,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "828:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1501,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:7"
													},
													{
														"assignments": [
															1507
														],
														"declarations": [
															{
																"constant": false,
																"id": 1507,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1528,
																"src": "849:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1506,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1508,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "930:67:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "948:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "971:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1500,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1491,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1507,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:7",
																"valueSize": 1
															}
														],
														"id": 1509,
														"nodeType": "InlineAssembly",
														"src": "921:76:7"
													},
													{
														"body": {
															"id": 1524,
															"nodeType": "Block",
															"src": "1023:269:7",
															"statements": [
																{
																	"expression": {
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:7",
																		"subExpression": {
																			"id": 1511,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1507,
																			"src": "1041:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1513,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:7"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "1124:86:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:7"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1472,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1507,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1485,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1514,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:7"
																},
																{
																	"expression": {
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1515,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "1227:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1518,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1519,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "1260:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1523,
																	"nodeType": "IfStatement",
																	"src": "1256:21:7",
																	"trueBody": {
																		"id": 1522,
																		"nodeType": "Break",
																		"src": "1272:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1525,
														"nodeType": "WhileStatement",
														"src": "1010:282:7"
													},
													{
														"expression": {
															"id": 1526,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "1312:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1489,
														"id": 1527,
														"nodeType": "Return",
														"src": "1305:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "655:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:7"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "693:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:7"
									},
									"scope": 1717,
									"src": "637:698:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "1511:92:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1541,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "1542:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:7",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1550,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "1588:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1548,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2912,
																			"src": "1573:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2912_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:7",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2911,
																		"src": "1573:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1547,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1530,
																"src": "1564:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1538,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:7",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1537,
												"id": 1554,
												"nodeType": "Return",
												"src": "1521:75:7"
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "1459:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1532,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:7"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "1496:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1535,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:7"
									},
									"scope": 1717,
									"src": "1435:168:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "1782:100:7",
										"statements": [
											{
												"id": 1574,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1565,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "1835:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1568,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1559,
																				"src": "1854:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1566,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2807,
																				"src": "1842:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2807_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2749,
																			"src": "1842:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1564,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1576,
																	1659,
																	1679
																],
																"referencedDeclaration": 1659,
																"src": "1823:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1563,
														"id": 1573,
														"nodeType": "Return",
														"src": "1816:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "1729:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:7"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "1767:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:7"
									},
									"scope": 1717,
									"src": "1708:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "2095:435:7",
										"statements": [
											{
												"assignments": [
													1587
												],
												"declarations": [
													{
														"constant": false,
														"id": 1587,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "2105:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1586,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1589,
												"initialValue": {
													"id": 1588,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1579,
													"src": "2126:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:7"
											},
											{
												"assignments": [
													1591
												],
												"declarations": [
													{
														"constant": false,
														"id": 1591,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "2141:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1590,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1600,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1595,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1581,
																	"src": "2177:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:7"
											},
											{
												"expression": {
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1601,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "2198:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1603,
														"indexExpression": {
															"hexValue": "30",
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:7"
											},
											{
												"expression": {
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1607,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "2223:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1609,
														"indexExpression": {
															"hexValue": "31",
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:7"
											},
											{
												"body": {
													"id": 1641,
													"nodeType": "Block",
													"src": "2293:95:7",
													"statements": [
														{
															"expression": {
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1627,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1591,
																		"src": "2307:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1629,
																	"indexExpression": {
																		"id": 1628,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "2314:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1630,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "2319:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1634,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1631,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1587,
																			"src": "2330:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1636,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:7"
														},
														{
															"expression": {
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1637,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1587,
																	"src": "2361:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1640,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1621,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "2281:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1642,
												"initializationExpression": {
													"assignments": [
														1614
													],
													"declarations": [
														{
															"constant": false,
															"id": 1614,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1642,
															"src": "2253:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1613,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1620,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1616,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "2269:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:7",
														"subExpression": {
															"id": 1624,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "2290:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1626,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1643,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "2401:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1652,
												"nodeType": "IfStatement",
												"src": "2397:96:7",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "2418:75:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1647,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1579,
																		"src": "2468:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1648,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "2475:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1646,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "2439:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1650,
															"nodeType": "RevertStatement",
															"src": "2432:50:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1655,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "2516:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1653,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1585,
												"id": 1657,
												"nodeType": "Return",
												"src": "2502:21:7"
											}
										]
									},
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "2026:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "2041:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:7"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "2080:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1583,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:7"
									},
									"scope": 1717,
									"src": "2005:525:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "2762:75:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1672,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1662,
																			"src": "2807:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1670,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1668,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1675,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "2815:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1667,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1576,
															1659,
															1679
														],
														"referencedDeclaration": 1659,
														"src": "2779:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1666,
												"id": 1677,
												"nodeType": "Return",
												"src": "2772:58:7"
											}
										]
									},
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "2710:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:7"
									},
									"returnParameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "2747:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1664,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:7"
									},
									"scope": 1717,
									"src": "2689:148:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "2992:104:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1691,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1682,
																		"src": "3015:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1689,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1696,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1684,
																		"src": "3034:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1694,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1703,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1682,
																			"src": "3063:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1701,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1700,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1709,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1684,
																			"src": "3086:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1707,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1706,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1688,
												"id": 1714,
												"nodeType": "Return",
												"src": "3002:87:7"
											}
										]
									},
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "2929:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1681,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "2946:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1683,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:7"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "2986:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:7"
									},
									"scope": 1717,
									"src": "2914:182:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1718,
							"src": "251:2847:7",
							"usedErrors": [
								1482
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1741
						],
						"IERC165": [
							1753
						]
					},
					"id": 1742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1719,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1721,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 1754,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1720,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1753,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1723,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1753,
										"src": "687:7:8"
									},
									"id": 1724,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1722,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1741,
							"linearizedBaseContracts": [
								1741,
								1753
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1752
									],
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1732,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1734,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1753,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1753_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1753_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1733,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1753",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1731,
												"id": 1738,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1741,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1742,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1753
						]
					},
					"id": 1754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1744,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1753,
							"linearizedBaseContracts": [
								1753
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1745,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1746,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1753,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1754,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2807
						]
					},
					"id": 2808,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1755,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1756,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2807,
							"linearizedBaseContracts": [
								2807
							],
							"name": "Math",
							"nameLocation": "211:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:10",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1759,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:10"
									},
									"src": "277:29:10"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1764,
									"members": [
										{
											"id": 1760,
											"name": "Floor",
											"nameLocation": "336:5:10",
											"nodeType": "EnumValue",
											"src": "336:5:10"
										},
										{
											"id": 1761,
											"name": "Ceil",
											"nameLocation": "379:4:10",
											"nodeType": "EnumValue",
											"src": "379:4:10"
										},
										{
											"id": 1762,
											"name": "Trunc",
											"nameLocation": "421:5:10",
											"nodeType": "EnumValue",
											"src": "421:5:10"
										},
										{
											"id": 1763,
											"name": "Expand",
											"nameLocation": "451:6:10",
											"nodeType": "EnumValue",
											"src": "451:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:10",
									"nodeType": "EnumDefinition",
									"src": "312:169:10"
								},
								{
									"body": {
										"id": 1795,
										"nodeType": "Block",
										"src": "661:140:10",
										"statements": [
											{
												"id": 1794,
												"nodeType": "UncheckedBlock",
												"src": "671:124:10",
												"statements": [
													{
														"assignments": [
															1777
														],
														"declarations": [
															{
																"constant": false,
																"id": 1777,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1794,
																"src": "695:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1776,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1781,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1778,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "707:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1779,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1769,
																"src": "711:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1782,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "730:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1783,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "734:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1789,
														"nodeType": "IfStatement",
														"src": "726:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1775,
															"id": 1788,
															"nodeType": "Return",
															"src": "737:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1791,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "782:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1792,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1775,
														"id": 1793,
														"nodeType": "Return",
														"src": "768:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "646:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "652:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:10"
									},
									"scope": 2807,
									"src": "585:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "984:113:10",
										"statements": [
											{
												"id": 1822,
												"nodeType": "UncheckedBlock",
												"src": "994:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1808,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "1022:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1809,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1799,
																"src": "1026:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1815,
														"nodeType": "IfStatement",
														"src": "1018:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1813,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1807,
															"id": 1814,
															"nodeType": "Return",
															"src": "1029:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1817,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1799,
																		"src": "1074:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1818,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1801,
																		"src": "1078:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1820,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1807,
														"id": 1821,
														"nodeType": "Return",
														"src": "1060:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "924:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "935:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:10"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "969:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1803,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "975:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:10"
									},
									"scope": 2807,
									"src": "908:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1865,
										"nodeType": "Block",
										"src": "1283:417:10",
										"statements": [
											{
												"id": 1864,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1836,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "1551:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1843,
														"nodeType": "IfStatement",
														"src": "1547:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1841,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1835,
															"id": 1842,
															"nodeType": "Return",
															"src": "1559:16:10"
														}
													},
													{
														"assignments": [
															1845
														],
														"declarations": [
															{
																"constant": false,
																"id": 1845,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1864,
																"src": "1589:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1844,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1849,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1846,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "1601:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1847,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "1605:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1850,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1845,
																	"src": "1624:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1851,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1827,
																	"src": "1628:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1853,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "1633:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1859,
														"nodeType": "IfStatement",
														"src": "1620:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1857,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1835,
															"id": 1858,
															"nodeType": "Return",
															"src": "1636:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1861,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1845,
																	"src": "1681:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1862,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1835,
														"id": 1863,
														"nodeType": "Return",
														"src": "1667:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1223:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1234:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:10"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1268:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1274:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:10"
									},
									"scope": 2807,
									"src": "1207:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "1887:114:10",
										"statements": [
											{
												"id": 1892,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1878,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1871,
																"src": "1925:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1885,
														"nodeType": "IfStatement",
														"src": "1921:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1877,
															"id": 1884,
															"nodeType": "Return",
															"src": "1933:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1887,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1869,
																		"src": "1978:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1888,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1871,
																		"src": "1982:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1890,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1877,
														"id": 1891,
														"nodeType": "Return",
														"src": "1964:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "1827:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "1838:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:10"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "1872:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "1878:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:10"
									},
									"scope": 2807,
									"src": "1811:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "2198:114:10",
										"statements": [
											{
												"id": 1920,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1906,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1899,
																"src": "2236:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1913,
														"nodeType": "IfStatement",
														"src": "2232:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1911,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1905,
															"id": 1912,
															"nodeType": "Return",
															"src": "2244:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1915,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "2289:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1916,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1899,
																		"src": "2293:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1918,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1905,
														"id": 1919,
														"nodeType": "Return",
														"src": "2275:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "2138:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "2149:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:10"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "2183:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1901,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "2189:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:10"
									},
									"scope": 2807,
									"src": "2122:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1939,
										"nodeType": "Block",
										"src": "2449:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1932,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "2466:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1933,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "2470:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1936,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "2478:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:10",
													"trueExpression": {
														"id": 1935,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1925,
														"src": "2474:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1931,
												"id": 1938,
												"nodeType": "Return",
												"src": "2459:20:10"
											}
										]
									},
									"documentation": {
										"id": 1923,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "2395:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "2406:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:10"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "2440:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:10"
									},
									"scope": 2807,
									"src": "2382:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1957,
										"nodeType": "Block",
										"src": "2624:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1950,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "2641:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1951,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "2645:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1954,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "2653:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:10",
													"trueExpression": {
														"id": 1953,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1943,
														"src": "2649:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1949,
												"id": 1956,
												"nodeType": "Return",
												"src": "2634:20:10"
											}
										]
									},
									"documentation": {
										"id": 1941,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2570:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2581:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:10"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2615:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:10"
									},
									"scope": 2807,
									"src": "2557:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "2845:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1968,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1961,
																	"src": "2900:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1969,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "2904:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1971,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1972,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1961,
																		"src": "2910:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1973,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1963,
																		"src": "2914:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1975,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1967,
												"id": 1979,
												"nodeType": "Return",
												"src": "2892:28:10"
											}
										]
									},
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "2791:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "2802:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:10"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "2836:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:10"
									},
									"scope": 2807,
									"src": "2774:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "3219:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1991,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1986,
														"src": "3233:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1999,
												"nodeType": "IfStatement",
												"src": "3229:127:10",
												"trueBody": {
													"id": 1998,
													"nodeType": "Block",
													"src": "3241:115:10",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1994,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "3340:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1995,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1986,
																	"src": "3344:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1990,
															"id": 1997,
															"nodeType": "Return",
															"src": "3333:12:10"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2000,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1984,
															"src": "3444:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2004,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1984,
																			"src": "3458:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2007,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2008,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "3467:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1990,
												"id": 2013,
												"nodeType": "Return",
												"src": "3437:35:10"
											}
										]
									},
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "3165:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "3176:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:10"
									},
									"returnParameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "3210:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:10"
									},
									"scope": 2807,
									"src": "3148:331:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "3901:4018:10",
										"statements": [
											{
												"id": 2139,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:10",
												"statements": [
													{
														"assignments": [
															2028
														],
														"declarations": [
															{
																"constant": false,
																"id": 2028,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2139,
																"src": "4232:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2027,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2032,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2029,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2018,
																"src": "4248:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2030,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2020,
																"src": "4252:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:10"
													},
													{
														"assignments": [
															2034
														],
														"declarations": [
															{
																"constant": false,
																"id": 2034,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2139,
																"src": "4312:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2033,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2035,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4392:122:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4457:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2028,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2028,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2034,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2018,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2020,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:10",
																"valueSize": 1
															}
														],
														"id": 2036,
														"nodeType": "InlineAssembly",
														"src": "4383:131:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2037,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2034,
																"src": "4595:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2045,
														"nodeType": "IfStatement",
														"src": "4591:368:10",
														"trueBody": {
															"id": 2044,
															"nodeType": "Block",
															"src": "4607:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2040,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2028,
																			"src": "4925:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2041,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2022,
																			"src": "4933:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2026,
																	"id": 2043,
																	"nodeType": "Return",
																	"src": "4918:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2046,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2022,
																"src": "5065:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2047,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2034,
																"src": "5080:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2053,
														"nodeType": "IfStatement",
														"src": "5061:88:10",
														"trueBody": {
															"id": 2052,
															"nodeType": "Block",
															"src": "5087:62:10",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2049,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1759,
																			"src": "5112:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2051,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:10"
																}
															]
														}
													},
													{
														"assignments": [
															2055
														],
														"declarations": [
															{
																"constant": false,
																"id": 2055,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2139,
																"src": "5404:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2054,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2056,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5444:291:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5513:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:10"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5633:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5691:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:10"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2022,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2028,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2028,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2028,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2034,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2034,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2055,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2055,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2055,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:10",
																"valueSize": 1
															},
															{
																"declaration": 2018,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:10",
																"valueSize": 1
															},
															{
																"declaration": 2020,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:10",
																"valueSize": 1
															}
														],
														"id": 2057,
														"nodeType": "InlineAssembly",
														"src": "5435:300:10"
													},
													{
														"assignments": [
															2059
														],
														"declarations": [
															{
																"constant": false,
																"id": 2059,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2139,
																"src": "5939:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2058,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2066,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2060,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2022,
																"src": "5954:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2062,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2022,
																			"src": "5973:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2064,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6008:362:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6073:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6177:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:10"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2022,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2022,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:10",
																"valueSize": 1
															},
															{
																"declaration": 2028,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2028,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2059,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2059,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2059,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2059,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2059,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:10",
																"valueSize": 1
															}
														],
														"id": 2067,
														"nodeType": "InlineAssembly",
														"src": "5999:371:10"
													},
													{
														"expression": {
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2068,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2028,
																"src": "6436:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2069,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "6445:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2070,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2059,
																	"src": "6453:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2073,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:10"
													},
													{
														"assignments": [
															2075
														],
														"declarations": [
															{
																"constant": false,
																"id": 2075,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2139,
																"src": "6775:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2074,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2082,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2077,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2022,
																			"src": "6798:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2079,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:10"
													},
													{
														"expression": {
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2083,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "7031:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2085,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2022,
																		"src": "7046:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2086,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2075,
																		"src": "7060:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2090,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:10"
													},
													{
														"expression": {
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2091,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "7100:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2093,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2022,
																		"src": "7115:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2094,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2075,
																		"src": "7129:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2098,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:10"
													},
													{
														"expression": {
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2099,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "7170:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2101,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2022,
																		"src": "7185:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2102,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2075,
																		"src": "7199:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2106,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:10"
													},
													{
														"expression": {
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2107,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "7240:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2109,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2022,
																		"src": "7255:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2110,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2075,
																		"src": "7269:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2114,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:10"
													},
													{
														"expression": {
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2115,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "7310:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2117,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2022,
																		"src": "7325:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2118,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2075,
																		"src": "7339:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2122,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:10"
													},
													{
														"expression": {
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2123,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "7381:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2125,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2022,
																		"src": "7396:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2126,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2075,
																		"src": "7410:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2130,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:10"
													},
													{
														"expression": {
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2131,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "7851:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2132,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2028,
																	"src": "7860:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2133,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2075,
																	"src": "7868:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2136,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:10"
													},
													{
														"expression": {
															"id": 2137,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "7896:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2026,
														"id": 2138,
														"nodeType": "Return",
														"src": "7889:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "3819:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "3830:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "3841:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:10"
									},
									"returnParameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "3885:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:10"
									},
									"scope": 2807,
									"src": "3803:4116:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "8161:192:10",
										"statements": [
											{
												"assignments": [
													2157
												],
												"declarations": [
													{
														"constant": false,
														"id": 2157,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2183,
														"src": "8171:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2163,
												"initialValue": {
													"arguments": [
														{
															"id": 2159,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "8195:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2160,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "8198:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2161,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2148,
															"src": "8201:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2158,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2141,
															2184
														],
														"referencedDeclaration": 2141,
														"src": "8188:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2165,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2151,
																"src": "8244:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1764",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1764",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2164,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2806,
															"src": "8227:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1764_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2168,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2144,
																	"src": "8264:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2169,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2146,
																	"src": "8267:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2170,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2148,
																	"src": "8270:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2167,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2180,
												"nodeType": "IfStatement",
												"src": "8223:101:10",
												"trueBody": {
													"id": 2179,
													"nodeType": "Block",
													"src": "8288:36:10",
													"statements": [
														{
															"expression": {
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2175,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "8302:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2178,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2181,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2157,
													"src": "8340:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2155,
												"id": 2182,
												"nodeType": "Return",
												"src": "8333:13:10"
											}
										]
									},
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "8067:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "8078:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "8089:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "8110:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1764",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2149,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1764,
														"src": "8110:8:10"
													},
													"referencedDeclaration": 1764,
													"src": "8110:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1764",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:10"
									},
									"returnParameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "8152:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:10"
									},
									"scope": 2807,
									"src": "8051:302:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2295,
										"nodeType": "Block",
										"src": "8644:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2192,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2187,
														"src": "8658:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2198,
												"nodeType": "IfStatement",
												"src": "8654:45:10",
												"trueBody": {
													"id": 2197,
													"nodeType": "Block",
													"src": "8666:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2191,
															"id": 2196,
															"nodeType": "Return",
															"src": "8680:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2200
												],
												"declarations": [
													{
														"constant": false,
														"id": 2200,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2295,
														"src": "9378:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2209,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2203,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2187,
																			"src": "9406:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2202,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2463,
																			2498
																		],
																		"referencedDeclaration": 2463,
																		"src": "9401:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2207,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:10"
											},
											{
												"id": 2294,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:10",
												"statements": [
													{
														"expression": {
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2210,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "9839:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2211,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2200,
																				"src": "9849:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2214,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2212,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2187,
																					"src": "9858:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2213,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2200,
																					"src": "9862:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2216,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2220,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:10"
													},
													{
														"expression": {
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2221,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "9888:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2222,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2200,
																				"src": "9898:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2223,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2187,
																					"src": "9907:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2224,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2200,
																					"src": "9911:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2227,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2231,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:10"
													},
													{
														"expression": {
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2232,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "9937:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2233,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2200,
																				"src": "9947:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2234,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2187,
																					"src": "9956:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2235,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2200,
																					"src": "9960:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2238,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2242,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:10"
													},
													{
														"expression": {
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2243,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "9986:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2244,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2200,
																				"src": "9996:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2245,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2187,
																					"src": "10005:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2246,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2200,
																					"src": "10009:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2249,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2253,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:10"
													},
													{
														"expression": {
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2254,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "10035:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2255,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2200,
																				"src": "10045:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2256,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2187,
																					"src": "10054:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2257,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2200,
																					"src": "10058:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2260,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2264,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:10"
													},
													{
														"expression": {
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2265,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "10084:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2266,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2200,
																				"src": "10094:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2269,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2267,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2187,
																					"src": "10103:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2268,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2200,
																					"src": "10107:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2271,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2275,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:10"
													},
													{
														"expression": {
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2276,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "10133:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2277,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2200,
																				"src": "10143:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2278,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2187,
																					"src": "10152:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2279,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2200,
																					"src": "10156:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2282,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2286,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2288,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2200,
																	"src": "10193:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2289,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "10201:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2290,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2200,
																		"src": "10205:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2287,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1958,
																"src": "10189:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2191,
														"id": 2293,
														"nodeType": "Return",
														"src": "10182:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "8601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:10"
									},
									"returnParameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "8635:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:10"
									},
									"scope": 2807,
									"src": "8587:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2330,
										"nodeType": "Block",
										"src": "10405:164:10",
										"statements": [
											{
												"id": 2329,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:10",
												"statements": [
													{
														"assignments": [
															2308
														],
														"declarations": [
															{
																"constant": false,
																"id": 2308,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2329,
																"src": "10439:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2307,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2312,
														"initialValue": {
															"arguments": [
																{
																	"id": 2310,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2299,
																	"src": "10461:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2309,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2296,
																	2331
																],
																"referencedDeclaration": 2296,
																"src": "10456:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2313,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "10484:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2315,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2302,
																						"src": "10511:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1764",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1764",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2314,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2806,
																					"src": "10494:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1764_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2319,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2317,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2308,
																						"src": "10524:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2318,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2308,
																						"src": "10533:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2320,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2299,
																					"src": "10542:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2326,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2306,
														"id": 2328,
														"nodeType": "Return",
														"src": "10477:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2297,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "10343:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "10354:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1764",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2300,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1764,
														"src": "10354:8:10"
													},
													"referencedDeclaration": 1764,
													"src": "10354:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1764",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:10"
									},
									"returnParameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "10396:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:10"
									},
									"scope": 2807,
									"src": "10329:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2462,
										"nodeType": "Block",
										"src": "10760:922:10",
										"statements": [
											{
												"assignments": [
													2340
												],
												"declarations": [
													{
														"constant": false,
														"id": 2340,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2462,
														"src": "10770:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2339,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2342,
												"initialValue": {
													"hexValue": "30",
													"id": 2341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:10"
											},
											{
												"id": 2459,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2343,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2334,
																	"src": "10826:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2357,
														"nodeType": "IfStatement",
														"src": "10822:99:10",
														"trueBody": {
															"id": 2356,
															"nodeType": "Block",
															"src": "10844:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2348,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2334,
																			"src": "10862:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2351,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:10"
																},
																{
																	"expression": {
																		"id": 2354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2352,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2340,
																			"src": "10893:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2355,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2358,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2334,
																	"src": "10938:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2372,
														"nodeType": "IfStatement",
														"src": "10934:96:10",
														"trueBody": {
															"id": 2371,
															"nodeType": "Block",
															"src": "10955:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2363,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2334,
																			"src": "10973:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2366,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:10"
																},
																{
																	"expression": {
																		"id": 2369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2367,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2340,
																			"src": "11003:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2370,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2373,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2334,
																	"src": "11047:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2387,
														"nodeType": "IfStatement",
														"src": "11043:96:10",
														"trueBody": {
															"id": 2386,
															"nodeType": "Block",
															"src": "11064:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2378,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2334,
																			"src": "11082:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2381,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:10"
																},
																{
																	"expression": {
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2382,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2340,
																			"src": "11112:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2385,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2388,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2334,
																	"src": "11156:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2402,
														"nodeType": "IfStatement",
														"src": "11152:96:10",
														"trueBody": {
															"id": 2401,
															"nodeType": "Block",
															"src": "11173:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2393,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2334,
																			"src": "11191:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2396,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:10"
																},
																{
																	"expression": {
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2397,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2340,
																			"src": "11221:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2400,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2403,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2334,
																	"src": "11265:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2417,
														"nodeType": "IfStatement",
														"src": "11261:93:10",
														"trueBody": {
															"id": 2416,
															"nodeType": "Block",
															"src": "11281:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2408,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2334,
																			"src": "11299:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2411,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:10"
																},
																{
																	"expression": {
																		"id": 2414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2412,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2340,
																			"src": "11328:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2415,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2418,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2334,
																	"src": "11371:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2432,
														"nodeType": "IfStatement",
														"src": "11367:93:10",
														"trueBody": {
															"id": 2431,
															"nodeType": "Block",
															"src": "11387:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2423,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2334,
																			"src": "11405:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2426,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:10"
																},
																{
																	"expression": {
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2427,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2340,
																			"src": "11434:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2430,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2433,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2334,
																	"src": "11477:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2447,
														"nodeType": "IfStatement",
														"src": "11473:93:10",
														"trueBody": {
															"id": 2446,
															"nodeType": "Block",
															"src": "11493:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2438,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2334,
																			"src": "11511:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2441,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:10"
																},
																{
																	"expression": {
																		"id": 2444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2442,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2340,
																			"src": "11540:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2445,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2448,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2334,
																	"src": "11583:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2458,
														"nodeType": "IfStatement",
														"src": "11579:64:10",
														"trueBody": {
															"id": 2457,
															"nodeType": "Block",
															"src": "11599:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2453,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2340,
																			"src": "11617:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2456,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2460,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2340,
													"src": "11669:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2338,
												"id": 2461,
												"nodeType": "Return",
												"src": "11662:13:10"
											}
										]
									},
									"documentation": {
										"id": 2332,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "10713:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:10"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "10751:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:10"
									},
									"scope": 2807,
									"src": "10699:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2497,
										"nodeType": "Block",
										"src": "11915:168:10",
										"statements": [
											{
												"id": 2496,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:10",
												"statements": [
													{
														"assignments": [
															2475
														],
														"declarations": [
															{
																"constant": false,
																"id": 2475,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2496,
																"src": "11949:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2474,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2479,
														"initialValue": {
															"arguments": [
																{
																	"id": 2477,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2466,
																	"src": "11971:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2476,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2463,
																	2498
																],
																"referencedDeclaration": 2463,
																"src": "11966:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2480,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "11998:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2482,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2469,
																						"src": "12025:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1764",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1764",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2481,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2806,
																					"src": "12008:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1764_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2486,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2484,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2485,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2475,
																						"src": "12043:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2487,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2466,
																					"src": "12052:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2493,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2473,
														"id": 2495,
														"nodeType": "Return",
														"src": "11991:75:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2464,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "11849:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "11864:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1764",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2468,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2467,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1764,
														"src": "11864:8:10"
													},
													"referencedDeclaration": 1764,
													"src": "11864:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1764",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:10"
									},
									"returnParameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "11906:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:10"
									},
									"scope": 2807,
									"src": "11835:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2626,
										"nodeType": "Block",
										"src": "12276:854:10",
										"statements": [
											{
												"assignments": [
													2507
												],
												"declarations": [
													{
														"constant": false,
														"id": 2507,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2626,
														"src": "12286:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2509,
												"initialValue": {
													"hexValue": "30",
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:10"
											},
											{
												"id": 2623,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2510,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2501,
																"src": "12342:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2526,
														"nodeType": "IfStatement",
														"src": "12338:103:10",
														"trueBody": {
															"id": 2525,
															"nodeType": "Block",
															"src": "12361:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2515,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2501,
																			"src": "12379:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2520,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:10"
																},
																{
																	"expression": {
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2521,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2507,
																			"src": "12414:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2524,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2527,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2501,
																"src": "12458:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2543,
														"nodeType": "IfStatement",
														"src": "12454:103:10",
														"trueBody": {
															"id": 2542,
															"nodeType": "Block",
															"src": "12477:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2532,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2501,
																			"src": "12495:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2537,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:10"
																},
																{
																	"expression": {
																		"id": 2540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2538,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2507,
																			"src": "12530:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2541,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2544,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2501,
																"src": "12574:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2560,
														"nodeType": "IfStatement",
														"src": "12570:103:10",
														"trueBody": {
															"id": 2559,
															"nodeType": "Block",
															"src": "12593:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2549,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2501,
																			"src": "12611:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2554,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:10"
																},
																{
																	"expression": {
																		"id": 2557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2555,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2507,
																			"src": "12646:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2558,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2561,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2501,
																"src": "12690:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2577,
														"nodeType": "IfStatement",
														"src": "12686:100:10",
														"trueBody": {
															"id": 2576,
															"nodeType": "Block",
															"src": "12708:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2566,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2501,
																			"src": "12726:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2571,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:10"
																},
																{
																	"expression": {
																		"id": 2574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2572,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2507,
																			"src": "12760:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2575,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2578,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2501,
																"src": "12803:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2594,
														"nodeType": "IfStatement",
														"src": "12799:100:10",
														"trueBody": {
															"id": 2593,
															"nodeType": "Block",
															"src": "12821:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2583,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2501,
																			"src": "12839:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2588,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:10"
																},
																{
																	"expression": {
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2589,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2507,
																			"src": "12873:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2592,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2595,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2501,
																"src": "12916:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2611,
														"nodeType": "IfStatement",
														"src": "12912:100:10",
														"trueBody": {
															"id": 2610,
															"nodeType": "Block",
															"src": "12934:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2501,
																			"src": "12952:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2605,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:10"
																},
																{
																	"expression": {
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2606,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2507,
																			"src": "12986:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2609,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2612,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2501,
																"src": "13029:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2622,
														"nodeType": "IfStatement",
														"src": "13025:66:10",
														"trueBody": {
															"id": 2621,
															"nodeType": "Block",
															"src": "13047:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2617,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2507,
																			"src": "13065:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2620,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2624,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2507,
													"src": "13117:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2505,
												"id": 2625,
												"nodeType": "Return",
												"src": "13110:13:10"
											}
										]
									},
									"documentation": {
										"id": 2499,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "12229:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:10"
									},
									"returnParameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "12267:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:10"
									},
									"scope": 2807,
									"src": "12214:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2661,
										"nodeType": "Block",
										"src": "13365:170:10",
										"statements": [
											{
												"id": 2660,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:10",
												"statements": [
													{
														"assignments": [
															2639
														],
														"declarations": [
															{
																"constant": false,
																"id": 2639,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2660,
																"src": "13399:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2638,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2643,
														"initialValue": {
															"arguments": [
																{
																	"id": 2641,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2630,
																	"src": "13422:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2640,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2627,
																	2662
																],
																"referencedDeclaration": 2627,
																"src": "13416:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2644,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2639,
																"src": "13449:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2646,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2633,
																						"src": "13476:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1764",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1764",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2645,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2806,
																					"src": "13459:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1764_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2650,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2648,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2649,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2639,
																						"src": "13495:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2651,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2630,
																					"src": "13504:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2657,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2637,
														"id": 2659,
														"nodeType": "Return",
														"src": "13442:76:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2628,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "13299:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "13314:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1764",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2632,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2631,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1764,
														"src": "13314:8:10"
													},
													"referencedDeclaration": 1764,
													"src": "13314:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1764",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:10"
									},
									"returnParameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "13356:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:10"
									},
									"scope": 2807,
									"src": "13284:251:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2748,
										"nodeType": "Block",
										"src": "13855:600:10",
										"statements": [
											{
												"assignments": [
													2671
												],
												"declarations": [
													{
														"constant": false,
														"id": 2671,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2748,
														"src": "13865:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2670,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2673,
												"initialValue": {
													"hexValue": "30",
													"id": 2672,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:10"
											},
											{
												"id": 2745,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2674,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2665,
																	"src": "13921:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2688,
														"nodeType": "IfStatement",
														"src": "13917:98:10",
														"trueBody": {
															"id": 2687,
															"nodeType": "Block",
															"src": "13939:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2679,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2665,
																			"src": "13957:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2682,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:10"
																},
																{
																	"expression": {
																		"id": 2685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2683,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2671,
																			"src": "13988:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2686,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2689,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2665,
																	"src": "14032:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2703,
														"nodeType": "IfStatement",
														"src": "14028:95:10",
														"trueBody": {
															"id": 2702,
															"nodeType": "Block",
															"src": "14049:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2694,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2665,
																			"src": "14067:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2697,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:10"
																},
																{
																	"expression": {
																		"id": 2700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2698,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2671,
																			"src": "14097:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2701,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2704,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2665,
																	"src": "14140:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2718,
														"nodeType": "IfStatement",
														"src": "14136:95:10",
														"trueBody": {
															"id": 2717,
															"nodeType": "Block",
															"src": "14157:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2709,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2665,
																			"src": "14175:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2712,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:10"
																},
																{
																	"expression": {
																		"id": 2715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2713,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2671,
																			"src": "14205:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2716,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2719,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2665,
																	"src": "14248:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2733,
														"nodeType": "IfStatement",
														"src": "14244:95:10",
														"trueBody": {
															"id": 2732,
															"nodeType": "Block",
															"src": "14265:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2724,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2665,
																			"src": "14283:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2727,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:10"
																},
																{
																	"expression": {
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2728,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2671,
																			"src": "14313:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2731,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2734,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2665,
																	"src": "14356:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2744,
														"nodeType": "IfStatement",
														"src": "14352:64:10",
														"trueBody": {
															"id": 2743,
															"nodeType": "Block",
															"src": "14372:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2739,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2671,
																			"src": "14390:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2742,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2746,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2671,
													"src": "14442:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2669,
												"id": 2747,
												"nodeType": "Return",
												"src": "14435:13:10"
											}
										]
									},
									"documentation": {
										"id": 2663,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "13808:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:10"
									},
									"returnParameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "13846:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:10"
									},
									"scope": 2807,
									"src": "13792:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2786,
										"nodeType": "Block",
										"src": "14692:177:10",
										"statements": [
											{
												"id": 2785,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:10",
												"statements": [
													{
														"assignments": [
															2761
														],
														"declarations": [
															{
																"constant": false,
																"id": 2761,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2785,
																"src": "14726:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2760,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2765,
														"initialValue": {
															"arguments": [
																{
																	"id": 2763,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2752,
																	"src": "14750:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2762,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2749,
																	2787
																],
																"referencedDeclaration": 2749,
																"src": "14743:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2766,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2761,
																"src": "14777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2768,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2755,
																						"src": "14804:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1764",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1764",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2767,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2806,
																					"src": "14787:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1764_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2775,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2770,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2773,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2771,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2761,
																									"src": "14823:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2772,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2774,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2776,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2752,
																					"src": "14838:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2782,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2759,
														"id": 2784,
														"nodeType": "Return",
														"src": "14770:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2750,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "14626:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "14641:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1764",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2753,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1764,
														"src": "14641:8:10"
													},
													"referencedDeclaration": 1764,
													"src": "14641:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1764",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:10"
									},
									"returnParameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "14683:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:10"
									},
									"scope": 2807,
									"src": "14610:259:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2805,
										"nodeType": "Block",
										"src": "15067:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2798,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2791,
																	"src": "15090:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1764",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1764",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2796,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2795,
												"id": 2804,
												"nodeType": "Return",
												"src": "15077:31:10"
											}
										]
									},
									"documentation": {
										"id": 2788,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2806,
												"src": "15019:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1764",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2790,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2789,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1764,
														"src": "15019:8:10"
													},
													"referencedDeclaration": 1764,
													"src": "15019:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1764",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:10"
									},
									"returnParameters": {
										"id": 2795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2806,
												"src": "15061:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:10"
									},
									"scope": 2807,
									"src": "14993:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2808,
							"src": "203:14914:10",
							"usedErrors": [
								1759
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:10"
				},
				"id": 10
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2912
						]
					},
					"id": 2913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2809,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2810,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:11",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2912,
							"linearizedBaseContracts": [
								2912
							],
							"name": "SignedMath",
							"nameLocation": "224:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2827,
										"nodeType": "Block",
										"src": "376:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2820,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2813,
															"src": "393:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2821,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2815,
															"src": "397:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2824,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2815,
														"src": "405:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:11",
													"trueExpression": {
														"id": 2823,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2813,
														"src": "401:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2819,
												"id": 2826,
												"nodeType": "Return",
												"src": "386:20:11"
											}
										]
									},
									"documentation": {
										"id": 2811,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:11",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2828,
												"src": "325:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2812,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2828,
												"src": "335:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2814,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:11"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2828,
												"src": "368:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2817,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:11"
									},
									"scope": 2912,
									"src": "312:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2845,
										"nodeType": "Block",
										"src": "555:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2838,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2831,
															"src": "572:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2839,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2833,
															"src": "576:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2842,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2833,
														"src": "584:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:11",
													"trueExpression": {
														"id": 2841,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2831,
														"src": "580:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2837,
												"id": 2844,
												"nodeType": "Return",
												"src": "565:20:11"
											}
										]
									},
									"documentation": {
										"id": 2829,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:11",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2831,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "504:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2830,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "514:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2832,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:11"
									},
									"returnParameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "547:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2835,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:11"
									},
									"scope": 2912,
									"src": "491:101:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2889,
										"nodeType": "Block",
										"src": "797:162:11",
										"statements": [
											{
												"assignments": [
													2857
												],
												"declarations": [
													{
														"constant": false,
														"id": 2857,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 2889,
														"src": "859:8:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2856,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2870,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2858,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2849,
																	"src": "871:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2859,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2851,
																	"src": "875:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2861,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2862,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2849,
																				"src": "882:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2863,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2851,
																				"src": "886:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2865,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2868,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2871,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "911:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2876,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2857,
																						"src": "931:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2875,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2874,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2878,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2872,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2881,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2849,
																				"src": "945:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2882,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2851,
																				"src": "949:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2884,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2886,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2855,
												"id": 2888,
												"nodeType": "Return",
												"src": "904:48:11"
											}
										]
									},
									"documentation": {
										"id": 2847,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:11",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "746:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2848,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "756:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2850,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:11"
									},
									"returnParameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "789:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2853,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:11"
									},
									"scope": 2912,
									"src": "729:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2910,
										"nodeType": "Block",
										"src": "1103:158:11",
										"statements": [
											{
												"id": 2909,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2900,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2893,
																			"src": "1228:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:11",
																		"subExpression": {
																			"id": 2904,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2893,
																			"src": "1242:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:11",
																	"trueExpression": {
																		"id": 2903,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2893,
																		"src": "1237:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2898,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2897,
														"id": 2908,
														"nodeType": "Return",
														"src": "1213:31:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2891,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:11",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2893,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2911,
												"src": "1061:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2892,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:11"
									},
									"returnParameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2911,
												"src": "1094:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:11"
									},
									"scope": 2912,
									"src": "1048:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2913,
							"src": "216:1047:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:11"
				},
				"id": 11
			}
		}
	}
}