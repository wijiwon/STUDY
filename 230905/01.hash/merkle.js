const merkle = require("merkle");

// merkle tree : 데이터의 암호화 구조가 트리 형태

// 머클 트리
// data에 해당하는 데이터 들이 존재한다.
const data = ["A", "B", "C", "D", "E"];

// 데이터의 무결성 검증에 사용되는 트리구조
// 블록의 필수 요소이고, 데이터들을 해시화해서 더한 후 해시화 반복
// 트리처럼 뻗어서 마지막 루트 해시 값을 구해서 사용한다.
// 중간 데이터가 변경되면 루트 해시 값도 변경되기 때문에 데이터의 변경됨을 할 수 있다.

// 머클루트를 처리할 때 홀수일 경우 마지막 데이터를 한번 더 해시해서 사용한다.
// 홀 수일 경우 마지막 데이터를 복사해서 두 값을 해시화한다.
// ex) ["A", "B", "C", "D", "E"] => ["A", "B", "C", "D", "E", "E"]

// 머클루트로 암호화
const merkleTree = merkle("sha256").sync(data);
// 머클루트의 마지막 값. 즉 가장 최상단의 루트의 값을 받음
const Root = merkleTree.root();
console.log(Root);

// A 해시화, B 해시화 => 둘 다 더해서 AB
// C 해시화, D 해시화 => 둘 다 더해서 CD
// E 해시화, E 해시화 => 둘 다 더해서 EE

// AB 해시화, CD 해시화 => 더해서 ABCD
// EE 해시화, EE 해시화 => 더해서 EEEE

// ABCD 해시화, EEEE 해시화 => ABCDEEEE 결과 나옴