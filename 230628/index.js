// react 첫 날
// react는 페이스북에서 2011년도 쯤 만들었고
// react는 개발자들 사이에서 라이브러리다, 프레임워크다 얘기가 많은데 공식적으로는 라이브러리라고 얘기하고 있다.

// 라이브러리: 폴더의 구조가 없다.
// 프레임워크: 폴더 구조가 있다.

// 패키지를 설치할 수 있기 때문에
// 리액트 개발을 할 때 편하게 초기 세팅을 설치 받아서 사용할 수 있다.
// 메타에서 개발한 것은 react, react-router 라이브러리이다.
// 메타에서 개발하고 오픈소스에 기여 중이다.

// react를 프레임워크라고 하는 이유는?
// 메타에서 라이브러리를 개발하고
// 'npx creat-react-app [폴더명]' 구문으로 패키지를 제공해서
// react를 개발할 때 권장 개발환경을 구성해준다. (초기 세팅이 편리하도록)
// react 프로젝트 설정
// 그래서 블로그나 개발자들 사이에서 프레임워크라고 하는 것이다.

// react는 화면 꾸밈을 구성할 때 자바스크립트를 활용해서 HTML(DOM)을 조작해준다.
// 효율적인 브라우저 렌더링을 위해
// 페이지를 효율적으로 업데이트 하기 위해서

// react는 가상 DOM을 사용해서 변경된 부분만 다시 그린다.(업데이트를 한다.)
// 일반적인 HTML은 변경된 부분만 업데이트 하지 않고 전체 페이지를 다시 그려주는데
// react의 가상 DOM은 메모리에 님아있고 실제 페이지의 DOM은 분리되어 있는 상태라라
// react의 상태가 변하면 새 가상 DOM이 생성되고 이전 상태의 가상 DOM과 비교해서
// 업데이트 해야 할 부분을 찾고(틀린그림찾기) 실제 DOM에 업데이트를 해준다.
// 그래서 효율적인 업데이트가 가능하다.

// react를 사용하는 이유
// react의 부분 렌더링
// react는 view 중심. 보여지는 것에 집중된 라이브러리이다.

// PHP EJS 이런 SSR
// 서버에서 페이지를 완성시켜서 브라우저에 응답해주는 것.

// 클라이언트에서 페이지를 구성하는 것을 하고싶다.
// 렌더링을 클라이언트 측에서 하고 싶었던 것이다.
// CSR
// react vue

// react는 DOM의 조작을 쉽게 하기 위해서 사용하고, SPA(싱글 페이지 어플리케이션)을 만들기 위해서 사용한다.
// SPA: 하나의 페이지에서 내용을 바꿔서 페이지가 전환된 것처럼 보여준다.

// react를 만든 사람은 자바스크립트를 잘하는 사람들이 만든 것은 아니고 개발을 잘 하는 사람들이 모여서 만든 것이다.
// Class 문법이로 되어있어, 진입장벽이 조금 있다..... 어려울 수도.....ಥ_ಥ

// Σ(っ °Д °;)っ 우리가 DOM을 제어하던 것 안까먹엇,,,,,죠,,,,?
// 조금 짚고 갑시다 ☆*: .｡. o(≧▽≦)o .｡.:*☆
